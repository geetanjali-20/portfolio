{"version":3,"file":"static/js/319.a0b1138d.chunk.js","mappings":";2IAGA,IAAKA,EAAAA,SACD,MAAM,IAAIC,MAAM,qDAEpB,IAAKC,EAAAA,GACD,MAAM,IAAID,MAAM,mFCLd,SAAUE,EAAiBC,GAC7BA,GACJ,CCFM,SAAUC,EAAgBC,GAC5B,OAAOC,EAAAA,EAAAA,IAAkBD,EAC7B,CCJA,IAAIE,GAA+B,EAM7B,SAAUC,IACZ,OAAOD,CACX,CCAO,IAGP,aAII,WAA6BE,GAA7B,kGAA6BA,IAH7BC,OAAAA,eAAAA,KAAAA,gBAAAA,iDAA0E,IAAIC,MAC9ED,OAAAA,eAAAA,KAAAA,eAAAA,0DAkBAA,OAAAA,eAAAA,KAAAA,QAAAA,iDAAQ,SAACE,QAAA,IAAAA,IAAAA,EAvB0B,KAyB/BC,aAAaC,EAAKC,cAClBD,EAAKC,kBAAeC,EAEpB,IAAMC,EAAMC,KAAKD,MACjBH,EAAKK,cAAcC,SAAQ,SAACC,EAAcC,GAClCL,EAAMI,EAAaE,cAAgBX,IACnCE,EAAKL,SAASY,EAAaG,OAC3BV,EAAKK,cAAcM,OAAOH,GAElC,IAEIR,EAAKK,cAAcO,KAAO,GAC1BZ,EAAKa,eAEb,IAGAjB,OAAAA,eAAAA,KAAAA,yBAAAA,iDAAyB,WACrBI,EAAKc,MAAM,EACf,GArC4D,CA4ChE,qGAzCI,SAASC,EAAgBL,EAAUF,GAC/BQ,KAAKX,cAAcY,IAAIT,EAAO,CAC1BE,MAAK,EACLD,aAAcL,KAAKD,QAEvBa,KAAKH,eACT,oGAEA,SAAWL,GACPQ,KAAKX,cAAcM,OAAOH,EAC9B,uGA0BA,gBAC8BN,IAAtBc,KAAKf,eACLe,KAAKf,aAAeiB,WAAWF,KAAKF,MA/CT,KAiDnC,IACJ,EAhDA,GCRaK,EAA+B,ID2DR,qBAAzBC,qBACDA,qBACAC,IC5DN,SAACC,SACe,QAAZ,EAAAA,EAAIC,gBAAQ,SAAEC,UACdF,EAAIC,SAAW,IACnB,aCCEE,EAAoB,WAAO,EAkBjC,SAASC,EAAeJ,GACpBA,EAAIC,SAAW,IAAII,EAAAA,GAAS,kBAAWL,EAAIM,OAAQ,iBAC/CN,EAAIO,aAAeC,SAIF,QAAjB,EAAAR,EAAIS,qBAAa,cAAjBT,EACJ,GACJ,CAEM,SAAUU,EAAeC,EAAiBC,GAC5C,QAD4C,IAAAA,IAAAA,EAAAA,YACxCxC,IACA,OAAOuC,IAGX,IAAME,EAASC,EAAAA,OAA4C,MAE3D,IAAKD,EAAOE,QAAS,CAEjB,IAAMC,EAA8B,CAChCf,SAAU,KACVQ,cAAe,KACfF,aAAcC,SACdF,KAAMM,EACNK,UAAA,SAAUR,GAgBN,OAdAZ,EAA6BqB,WAAWF,GACxCA,EAAIP,cAAgBA,EACfO,EAAIf,WAMLG,EAAeY,GAGfA,EAAIT,aAAeC,UAGhB,iBAEHQ,EAAIP,cAAgB,KACR,QAAZ,IAAIR,gBAAQ,SAAEC,UACdc,EAAIf,SAAW,IACnB,CACJ,EACAkB,YAAW,WAEP,OAAOH,EAAIT,YACf,GAGJM,EAAOE,QAAUC,EAGrB,IAuBII,EACAC,EAxBErB,EAAMa,EAAOE,QAiCnB,GA/BKf,EAAIC,WAELG,EAAeJ,GAIfH,EAA6ByB,SAAST,EAAQb,EAAKA,IAGvDc,EAAAA,cAAoBd,EAAIC,SAAWjC,IAEnCuD,EAAAA,EAAAA,sBAEIvB,EAAIiB,UACJjB,EAAImB,YACJhB,GAQJH,EAAIC,SAAUuB,OAAM,WAChB,IACIJ,EAAeT,IACjB,MAAOc,GACLJ,EAAYI,EAEpB,IAEIJ,EACA,MAAMA,EAGV,OAAOD,CACX,CCnHA,IAEMM,EAA8B,oBAAXlB,QAAyBA,OAAOmB,IAEnDC,EAAwBF,EACxBlB,OAAOmB,IAAI,qBACW,oBAAfE,EAAAA,aAA6BA,EAAAA,EAAAA,aAAW,SAACC,GAAe,eAAgB,SAE/EC,EAAkBL,EAClBlB,OAAOmB,IAAI,cACK,oBAATK,EAAAA,OAAuBA,EAAAA,EAAAA,OAAK,SAACF,GAAe,eAAgB,SA4CnE,SAAUG,EACZC,EAKAC,SASA,GAAIJ,GAAmBG,EAAwB,WAAMH,EACjD,MAAM,IAAInE,MACN,uLAKR,GAAIQ,IACA,OAAO8D,EAGX,IAAIE,EAAmC,QAAnB,EAAO,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASN,kBAAU,SACnClB,EAASuB,EAEPtB,EAAoBsB,EAAcG,aAAeH,EAAc5B,KAIrE,GAAIsB,GAAyBM,EAAwB,WAAMN,IACvDQ,GAAgB,EAEM,oBADtBzB,EAASuB,EAAsB,SAE3B,MAAM,IAAItE,MACN,wEAKZ,IA2D0B0E,EAAW7C,EA3DjC8C,EAAoB,SAACT,EAAYU,GACjC,OAAO9B,GAAY,WAAM,OAAAC,EAAOmB,EAAOU,EAAd,GAAoB5B,EACjD,EA2CA,OAxCE2B,EAA8CF,YAAcH,EAAcG,YAC5E/D,OAAOmE,eAAeF,EAAmB,OAAQ,CAC7CnD,MAAO8C,EAAc5B,KACrBoC,UAAU,EACVC,cAAc,IAIbT,EAAsBU,eACrBL,EAA8CK,aAC5CV,EACFU,cAGFR,IAIAG,GAAoBV,EAAAA,EAAAA,YAAWU,IAMnCA,GAAoBP,EAAAA,EAAAA,MAAKO,GA8BCD,EA5BLJ,EA4BgBzC,EA5BD8C,EA6BpCjE,OAAOuE,KAAKP,GAAMtD,SAAQ,SAAA8D,GACjBC,EAAeD,IAChBxE,OAAOmE,eAAehD,EAAQqD,EAAKxE,OAAO0E,yBAAyBV,EAAMQ,GAEjF,IAnBOP,CACX,CAGA,IAAMQ,EAAsB,CACxBE,UAAU,EACVtC,QAAQ,EACRuC,SAAS,EACTC,MAAM,EAGNd,aAAa,SNxJgBe,KOGhBC,EAAAA,2BPDTD,EAAoBtF,IAOxBwF,EAAAA,EAAAA,IAAU,CAAEF,kBAAiB,IOIN,EAAAvD,EAAqD,uBCEhF,SAAS0D,EAAGC,EAAQC,GAEhB,OAAID,IAAMC,EACO,IAAND,GAAW,EAAIA,IAAM,EAAIC,EAEzBD,IAAMA,GAAKC,IAAMA,CAEhC,CAoDA,IAAMC,EAAalD,OAAO,eACpBmD,EAAwBnD,OAAO,qBAerC,SAASoD,EAAQC,EAAsBC,qCAAmBC,EAAgB,iCAAhBA,EAAgB,kBAEtED,EAAOE,QAEP,IACI,IAAIC,EAKJ,YAJmBrF,IAAfiF,GAA2C,OAAfA,IAC5BI,EAASJ,EAAWK,MAAMxE,KAAMqE,IAG7BE,EACT,QACEH,EAAOE,QACc,IAAjBF,EAAOE,OACPF,EAAOK,QAAQnF,SAAQ,SAAAoF,GACnBA,EAAGF,MAAMxF,EAAMqF,MAI/B,CAEA,SAASM,EAAaR,EAAsBC,GAIxC,OAHW,sCAAaC,EAAgB,yBAAhBA,EAAgB,gBACpCH,EAAQU,KAAI,MAAZV,EAAO,CAAMlE,KAAMmE,EAAYC,GAAM,OAAKC,IAGlD,UAEgBQ,EAAM9E,EAAgB+E,EAAoBC,GACtD,IAAMX,EArCV,SAAmBrE,EAAgB+E,GAC/B,IAAMV,EAAUrE,EAAOiE,GAAcjE,EAAOiE,IAAe,CAAC,EACtDgB,EAAgBZ,EAAOU,GAAcV,EAAOU,IAAe,CAAC,EAGlE,OAFAE,EAAaV,MAAQU,EAAaV,OAAS,EAC3CU,EAAaP,QAAUO,EAAaP,SAAW,GACxCO,CACX,CA+BmBC,CAAUlF,EAAQ+E,GAE7BV,EAAOK,QAAQS,QAAQH,GAAe,GACtCX,EAAOK,QAAQU,KAAKJ,GAGxB,IAAMK,EAAgBxG,OAAO0E,yBAAyBvD,EAAQ+E,GAC9D,IAAIM,IAAiBA,EAAcnB,GAAnC,CAKA,IAAMoB,EAAiBtF,EAAO+E,GACxBQ,EAAgBC,EAClBxF,EACA+E,EACAM,EAAgBA,EAAcI,gBAAatG,EAC3CkF,EACAiB,GAGJzG,OAAOmE,eAAehD,EAAQ+E,EAAYQ,GAC9C,CAEA,SAASC,EACLxF,EACA+E,EACAU,EACApB,EACAiB,SAEII,EAAcd,EAAaU,EAAgBjB,GAE/C,OAAO,EAAP,IAEKH,IAAwB,EAAI,EAC7ByB,IAAK,WACD,OAAOD,GACV,EACDxF,IAAK,SAAUP,GACX,GAAIM,OAASD,EACT0F,EAAcd,EAAajF,EAAO0E,OAC/B,CAKH,IAAMkB,EAAgBC,EAAiBvF,KAAM8E,EAAYU,EAAYpB,EAAQ1E,GAC7Ed,OAAOmE,eAAe/C,KAAM8E,EAAYQ,KAE/C,EACDrC,cAAc,EAAI,EAClBuC,WAAYA,EAAU,CAE9B,CCrKA,IAAMG,EAAuB7E,OAAO,0BAC9B8E,EAA4B9E,OAAO,uBAuBzC,SAAS+E,EAAkBC,SAIvB,OAAuC,OAA/B,EAAAA,EAAUH,IAAqB,EAA/BG,EAAUH,GAA0B,CACxCpF,SAAU,KACVwF,SAAS,EACTC,gCAAgC,EAChCC,YAAa,KACbrF,KAAMsF,EAAeJ,EAAUK,aAC/BC,WAAOlH,EACPkD,WAAOlD,EACPmH,aAASnH,EAEjB,CA4HA,SAASgH,EAAeI,GACpB,OAAOA,EAAe3D,aAAe2D,EAAe1F,MAAQ,aAChE,CAEA,SAAS2F,EAAqBC,GAC1B,IAAMC,EAAsBD,EAAeE,KAAK1G,MAE1C2G,EAAQd,EAAkB7F,MA8BhC,OA5BA,WACS2G,EAAMpG,WAEPoG,EAAMpG,SA4BlB,SAAwBoG,GACpB,OAAO,IAAIhG,EAAAA,GAAYgG,EAAM/F,KAAI,aAAa,WAC1C,GAAK+F,EAAMZ,QASX,IACqB,MAAjBY,EAAMV,aAANU,EAAMV,cACR,MAAOW,GAAO,MACE,OAAd,EAAAD,EAAMpG,WAANsG,EAAgBrG,UAChBmG,EAAMpG,SAAW,UARjBoG,EAAMX,gCAAiC,IAWnD,CA9C6BtF,CAAeiG,GAC3BA,EAAMZ,SAGP5F,EAA6ByB,SAAS5B,KAAM2G,EAAO3G,OAI3D,IAAI4G,OAAiB1H,EACjBwC,OAAexC,EAUnB,GATAyH,EAAMpG,SAASuB,OAAM,WACjB,IAGIJ,GAAeoF,EAAAA,EAAAA,KAAmB,EAAOL,GAC3C,MAAO1E,GACL6E,EAAQ7E,MAGZ6E,EACA,MAAMA,EAEV,OAAOlF,EAIf,CAsBA,SAASqF,EAAYC,EAAiCC,GAOlD,OANIvI,KACAwI,QAAQC,KACJ,mLAIJnH,KAAKoG,QAAUa,aDnPMG,EAAWC,GAEpC,GAAIxD,EAAGuD,EAAMC,GACT,OAAO,EAEX,GAAoB,kBAATD,GAA8B,OAATA,GAAiC,kBAATC,GAA8B,OAATA,EACzE,OAAO,EAEX,IAAMC,EAAQ1I,OAAOuE,KAAKiE,GACpBG,EAAQ3I,OAAOuE,KAAKkE,GAC1B,GAAIC,EAAME,SAAWD,EAAMC,OACvB,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAME,OAAQC,IAC9B,IAAK7I,OAAO8I,eAAe9C,KAAKyC,EAAMC,EAAMG,MAAQ5D,EAAGuD,EAAKE,EAAMG,IAAKJ,EAAKC,EAAMG,KAC9E,OAAO,EAGf,OAAO,CACX,CCuOYE,CAAa3H,KAAKoC,MAAO4E,EACrC,UChPgBzE,EAAoCuD,EAAcO,GAC9D,GAAIA,GAA4B,UAAjBA,EAAQuB,KACnB,MAAM,IAAI1J,MAAM,uDAQpB,OANoC,IAAhC4H,EAA0B,gBAC1BoB,QAAQC,KACJ,8IAKJvI,OAAOiJ,UAAUC,cAAclD,KAAKxD,EAAAA,UAAiB0E,IACrDlH,OAAOiJ,UAAUC,cAAclD,KAAKxD,EAAAA,cAAqB0E,GD+BjE,SACIQ,GAEA,IAAQuB,EAAcvB,EAAduB,UAER,GAAIvB,EAAeV,GAA4B,CAC3C,IAAMjD,EAAcuD,EAAeI,GACnC,MAAM,IAAIpI,MAAM,iCACqByE,EAAW,yDAMpD,GAHI2D,EAAeV,IAA6B,EAG5CiC,EAAUE,mBACV,MAAM,IAAI7J,MAAM,kEAEpB,GAAIoI,EAA0B,YAAM0B,EAAAA,cAChC,GAAKH,EAAUI,uBAER,GAAIJ,EAAUI,wBAA0BlB,EAE3C,MAAM,IAAI7I,MACN,qFAJJ2J,EAAUI,sBAAwBlB,EAa1C,IAAMP,EAAiBqB,EAAU5G,OACjC,GAA8B,oBAAnBuF,EAA+B,CACtC,IAAM7D,EAAcuD,EAAeI,GACnC,MAAM,IAAIpI,MACN,iCAAiCyE,EAAjC,yKAMRkF,EAAU5G,OAAS,WASf,OARArC,OAAOmE,eAAe/C,KAAM,SAAU,CAElCiD,cAAc,EACdD,UAAU,EACVtD,MAAOhB,IACD8H,EACAD,EAAqB3B,KAAK5E,KAAMwG,KAEnCxG,KAAKiB,UAGhB,IAAMiH,EAA4BL,EAAUM,kBAgE5C,OA/DAN,EAAUM,kBAAoB,sBAqBpBxB,EAAQd,EAAkB7F,MA0BhC,OAxBA2G,EAAMZ,SAAU,EAGhB5F,EAA6BqB,WAAWxB,MAMxC2G,EAAMV,YAAc,kBAAMjH,EAAKiH,eAE1BU,EAAMpG,WAAYoG,EAAMX,gCAWzBW,EAAMV,cAEsB,MAAzBiC,OAAyB,EAAzBA,EAA2B1D,MAAMxE,KAAMoI,YAIlDvD,EAAMgD,EAAW,wBAAwB,iBACrC,IAAInJ,IAAJ,CAGA,IAAMiI,EAAQd,EAAkB7F,MAClB,OAAd,EAAA2G,EAAMpG,WAAN8H,EAAgB7H,UAChBmG,EAAMpG,SAAW,KACjBoG,EAAMV,YAAc,KACpBU,EAAMZ,SAAU,EAChBY,EAAMX,gCAAiC,MAGpCM,CACX,CCnJegC,CAA2BxC,GAG3ByC,EAAazC,EAE5B,CC5B0C1E,EAAAA,QAAcoH,MAAM,KAAK,GCAnE,IAAKC,EAAAA,UACD,MAAM,IAAIvK,MAAM,6CAGpB,IAAKwK,EAAAA,GACD,MAAM,IAAIxK,MAAM,2DCCP,IAAI6D,EAAE4G,EAAQ,KAAwE,IAAIC,EAAE,oBAAoBhK,OAAOiF,GAAGjF,OAAOiF,GAA1G,SAAWgF,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,IAAI,EAAEC,IAAID,IAAIA,GAAGC,IAAIA,CAAC,EAAiDC,EAAEhH,EAAE9D,SAAS+K,EAAEjH,EAAEkH,UAAUC,EAAEnH,EAAEoH,gBAAgBC,EAAErH,EAAEsH,cACtM,SAASC,EAAET,GAAG,IAAIC,EAAED,EAAEpH,YAAYoH,EAAEA,EAAEnJ,MAAM,IAAI,IAAI6J,EAAET,IAAI,OAAOF,EAAEC,EAAEU,EAAE,CAAC,MAAMC,GAAG,OAAM,CAAE,CAAC,CAA4B,IAAIC,EAAE,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAASC,cAAzI,SAAWf,EAAEC,GAAG,OAAOA,GAAG,EAD+F,SAAWD,EAAEC,GAAG,IAAIS,EAAET,IAAIU,EAAET,EAAE,CAACc,KAAK,CAACnK,MAAM6J,EAAE9H,YAAYqH,KAAKgB,EAAEN,EAAE,GAAGK,KAAKE,EAAEP,EAAE,GAAwJ,OAArJN,GAAE,WAAWY,EAAEpK,MAAM6J,EAAEO,EAAErI,YAAYqH,EAAEQ,EAAEQ,IAAIC,EAAE,CAACF,KAAKC,GAAG,GAAE,CAACjB,EAAEU,EAAET,IAAIE,GAAE,WAA6B,OAAlBM,EAAEQ,IAAIC,EAAE,CAACF,KAAKC,IAAWjB,GAAE,WAAWS,EAAEQ,IAAIC,EAAE,CAACF,KAAKC,GAAG,GAAE,GAAE,CAACjB,IAAIO,EAAEG,GAAUA,CAAC,EAC5MS,EAAQnI,0BAAqB,IAASE,EAAEF,qBAAqBE,EAAEF,qBAAqB4H,iBCPxUQ,EAAOD,QAAU,EAAjBC,mDCEF,MAAMC,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqBhB,GAAMA,EAC3BiB,UAAU,EACVC,cAAe,UCNbC,GAAgBJ,EAAAA,EAAAA,eAAc,CAAC,GCG/BK,GAAkBL,EAAAA,EAAAA,eAAc,MCLhCM,EAAgC,qBAAbd,SCGnBe,EAA4BD,EAAYtB,EAAAA,gBAAkBF,EAAAA,UCD1D0B,GAAcR,EAAAA,EAAAA,eAAc,CAAES,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYpI,GACjB,MAAuB,kBAARA,GACXlE,OAAOiJ,UAAUH,eAAe9C,KAAK9B,EAAK,UAClD,CCAA,SAASqI,EAAe5M,GACpB,MAAoB,kBAANA,GAAkB6M,MAAMC,QAAQ9M,EAClD,CCLA,SAAS+M,EAAoB/M,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEgN,KAC7C,CCFA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBtJ,GAC3B,OAAQkJ,EAAoBlJ,EAAMuJ,UAC9BF,EAAaG,MAAMhL,GAASuK,EAAe/I,EAAMxB,KACzD,CACA,SAASiL,EAAczJ,GACnB,OAAO0J,QAAQJ,EAAsBtJ,IAAUA,EAAM2J,SACzD,CCNA,SAASC,EAAuB5J,GAC5B,MAAM,QAAE6J,EAAO,QAAEN,GCFrB,SAAgCvJ,EAAOiE,GACnC,GAAIqF,EAAsBtJ,GAAQ,CAC9B,MAAM,QAAE6J,EAAO,QAAEN,GAAYvJ,EAC7B,MAAO,CACH6J,SAAqB,IAAZA,GAAqBd,EAAec,GACvCA,OACA/M,EACNyM,QAASR,EAAeQ,GAAWA,OAAUzM,EAErD,CACA,OAAyB,IAAlBkD,EAAM8J,QAAoB7F,EAAU,CAAC,CAChD,CDTiC8F,CAAuB/J,GAAOgK,EAAAA,EAAAA,YAAW7B,IACtE,OAAO8B,EAAAA,EAAAA,UAAQ,KAAM,CAAGJ,UAASN,aAAY,CAACW,EAA0BL,GAAUK,EAA0BX,IAChH,CACA,SAASW,EAA0BC,GAC/B,OAAOnB,MAAMC,QAAQkB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAM/J,MAAOqJ,EACdU,EAAmB/J,IAAO,CACtBgK,UAAYhL,GAAUqK,EAAarJ,IAAKwI,MAAMhL,KAAWwB,EAAMxB,MCrBvE,MAAMyM,GAAqBlD,EAAAA,EAAAA,eAAc,CAAC,GCGpCmD,GAA2BnD,EAAAA,EAAAA,eAAc,CAAC,GCL1CoD,EAAwBzM,OAAOmB,IAAI,yBCuBzC,SAASuL,EAAqBC,GAAoF,IAAnF,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEpF,GAAYgF,EAC5GC,GCtBJ,SAAsBI,GAClB,IAAK,MAAM1K,KAAO0K,EACdX,EAAmB/J,GAAO,IACnB+J,EAAmB/J,MACnB0K,EAAS1K,GAGxB,CDeyB2K,CAAaL,GA2ClC,MAAMM,GAAsB7L,EAAAA,EAAAA,aA1C5B,SAAyBC,EAAO6L,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChB/B,EAAAA,EAAAA,YAAWlC,MACX9H,EACHgM,SAAUC,EAAYjM,KAEpB,SAAEiI,GAAa8D,EACf9H,EAAU2F,EAAuB5J,GACjCkM,EAAcT,EAAezL,EAAOiI,GAC1C,IAAKA,GAAYI,EAAW,CAOxBpE,EAAQkI,cEtCpB,SAA0B9F,EAAW6F,EAAalM,EAAOuL,GACrD,MAAQY,cAAeC,IAAWpC,EAAAA,EAAAA,YAAW7B,GACvCkE,GAAcrC,EAAAA,EAAAA,YAAWzB,GACzB+D,GAAkBtC,EAAAA,EAAAA,YAAW5B,GAC7BmE,GAAsBvC,EAAAA,EAAAA,YAAWlC,GAAqBI,cACtDsE,GAAmBC,EAAAA,EAAAA,UAIzBlB,EAAsBA,GAAuBc,EAAYK,UACpDF,EAAiBvN,SAAWsM,IAC7BiB,EAAiBvN,QAAUsM,EAAoBlF,EAAW,CACtD6F,cACAE,SACApM,QACAsM,kBACAK,wBAAuBL,IACW,IAA5BA,EAAgBzC,QAEtB0C,yBAGR,MAAMJ,EAAgBK,EAAiBvN,SACvC2N,EAAAA,EAAAA,qBAAmB,KACfT,GAAiBA,EAAcU,OAAO7M,EAAOsM,EAAgB,IAMjE,MAAMQ,GAAeL,EAAAA,EAAAA,QAAO/C,QAAQ1J,EAAM6I,KAAkCvB,OAAOyF,kBAgCnF,OA/BAzE,GAA0B,KACjB6D,IAELA,EAActN,SAWViO,EAAa7N,SAAWkN,EAAca,gBACtCb,EAAca,eAAeC,iBACjC,KAEJpG,EAAAA,EAAAA,YAAU,KACDsF,IAELA,EAAce,kBACTJ,EAAa7N,SAAWkN,EAAca,gBACvCb,EAAca,eAAeC,iBAE7BH,EAAa7N,UACb6N,EAAa7N,SAAU,EAEvBqI,OAAOyF,iBAAkB,GAC7B,IAEGZ,CACX,CFzBoCgB,CAAiB9G,EAAW6F,EAAaH,EAAgBR,GAKjF,MAAM6B,GAA2BpD,EAAAA,EAAAA,YAAWkB,GACtCmC,GAAWrD,EAAAA,EAAAA,YAAWzB,GAAaC,OACrCvE,EAAQkI,gBACRL,EAAgB7H,EAAQkI,cAAcR,aAEtCI,EAAgBsB,EAAU/B,EAAmB8B,GAErD,CAKA,OAAQpO,EAAAA,cAAoBmJ,EAAcmF,SAAU,CAAEhQ,MAAO2G,GACzD6H,GAAiB7H,EAAQkI,cAAiBnN,EAAAA,cAAoB8M,EAAe,CAAEK,cAAelI,EAAQkI,iBAAkBJ,IAAqB,KAC7IP,EAAUnF,EAAWrG,EG1DjC,SAAsBkM,EAAaC,EAAeN,GAC9C,OAAO0B,EAAAA,EAAAA,cAAaC,IAChBA,GAAYtB,EAAYuB,OAASvB,EAAYuB,MAAMD,GAC/CrB,IACAqB,EACMrB,EAAcsB,MAAMD,GACpBrB,EAAcuB,WAEpB7B,IAC2B,oBAAhBA,EACPA,EAAY2B,GAEP1E,EAAY+C,KACjBA,EAAY5M,QAAUuO,GAE9B,GAOJ,CAACrB,GACL,CHmCwCwB,CAAazB,EAAajI,EAAQkI,cAAeN,GAAcK,EAAajE,EAAUhE,EAAQkI,eAClI,IAGA,OADAP,EAAoBT,GAAyB9E,EACtCuF,CACX,CACA,SAASK,EAAW2B,GAAe,IAAd,SAAE5B,GAAU4B,EAC7B,MAAMC,GAAgB7D,EAAAA,EAAAA,YAAWiB,GAAoB6C,GACrD,OAAOD,QAA8B/Q,IAAbkP,EAClB6B,EAAgB,IAAM7B,EACtBA,CACV,CI5DA,SAAS+B,EAAkBC,GACvB,SAASC,EAAO5H,GACZ,OAAO+E,EAAsB4C,EAAa3H,EADQL,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVkI,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAI1R,IAC3B,OAAO,IAAIyR,MAAMD,EAAQ,CAMrB3K,IAAKA,CAAC8K,EAASpN,KAINmN,EAAeE,IAAIrN,IACpBmN,EAAetQ,IAAImD,EAAKiN,EAAOjN,IAE5BmN,EAAe7K,IAAItC,KAGtC,CCxCA,MAAMsN,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAelI,GACpB,MAKqB,kBAAdA,IAIHA,EAAUmI,SAAS,SAOvBF,EAAqBxL,QAAQuD,IAAc,GAIvC,QAAQoI,KAAKpI,GAIrB,CC3BA,MAAMqI,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB9N,EAAGqK,GAAwB,IAAtB,OAAEP,EAAM,SAAEkB,GAAUX,EAClD,OAAQuD,EAAeP,IAAIrN,IACvBA,EAAI+N,WAAW,YACbjE,QAAuBhO,IAAbkP,OACL0C,EAAgB1N,IAAgB,YAARA,EACvC,CCRA,MAAMgO,EAAiB1R,GAAUoM,QAAQpM,GAASA,EAAM2R,aCElDC,EAAiB,CACnBxN,EAAG,aACHC,EAAG,aACHwN,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBV,EAAmBvJ,OCRzC,MAAMkK,EAAyBlS,GAAW4D,GAAuB,kBAARA,GAAoBA,EAAI+N,WAAW3R,GACtFmS,EAAoBD,EAAsB,MAC1CE,EAAqBF,EAAsB,UCC3CG,EAAiBA,CAACnS,EAAO+D,IACpBA,GAAyB,kBAAV/D,EAChB+D,EAAKqO,UAAUpS,GACfA,ECNJqS,EAAQA,CAACC,EAAKC,EAAK1T,IAAM2T,KAAKF,IAAIE,KAAKD,IAAI1T,EAAGyT,GAAMC,GCEpDE,EAAS,CACXtB,KAAOtS,GAAmB,kBAANA,EACpB6T,MAAOC,WACPP,UAAYvT,GAAMA,GAEhB+T,EAAQ,IACPH,EACHL,UAAYvT,GAAMwT,EAAM,EAAG,EAAGxT,IAE5BgU,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAYlU,GAAM2T,KAAKQ,MAAU,IAAJnU,GAAc,IAC3CoU,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASvU,GACd,MAAoB,kBAANA,CAClB,CCVA,MAAMwU,EAAkBC,IAAI,CACxBnC,KAAOtS,GAAMuU,EAASvU,IAAMA,EAAE0U,SAASD,IAAiC,IAAxBzU,EAAEiK,MAAM,KAAKhB,OAC7D4K,MAAOC,WACPP,UAAYvT,GAAC,GAAA2U,OAAQ3U,GAAC2U,OAAGF,KAEvBG,EAAUJ,EAAe,OACzBK,EAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,EACHhB,MAAQ7T,GAAM6U,EAAQhB,MAAM7T,GAAK,IACjCuT,UAAYvT,GAAM6U,EAAQtB,UAAc,IAAJvT,ICblCkV,GAAM,IACLtB,EACHL,UAAWI,KAAKQ,OCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXzT,KAAMyT,GACNqB,IAAKrB,GACLsB,MAAOtB,GACPuB,OAAQvB,GACRwB,KAAMxB,GAENyB,QAASzB,GACT0B,WAAY1B,GACZ2B,aAAc3B,GACd4B,cAAe5B,GACf6B,YAAa7B,GACb8B,OAAQ9B,GACR+B,UAAW/B,GACXgC,YAAahC,GACbiC,aAAcjC,GACdkC,WAAYlC,GAEZmC,OAAQrC,EACRsC,QAAStC,EACTuC,QAASvC,EACTwC,QAASxC,EACTZ,MAAK,EACLqD,OAAQrD,EACRsD,OAAQtD,EACRuD,OAAQvD,EACRwD,KAAM5C,EACN6C,MAAO7C,EACP8C,MAAO9C,EACP+C,SAAU7C,GACV8C,WAAY9C,GACZ+C,WAAY/C,GACZgD,WAAYhD,GACZvP,EAAGuP,GACHtP,EAAGsP,GACH9B,EAAG8B,GACHiD,YAAajD,GACb7B,qBAAsB6B,GACtBkD,QAASjE,EACTkE,QAAShD,GACTiD,QAASjD,GACTkD,QAASrD,GAETsD,OAAQlD,GAERmD,YAAatE,EACbuE,cAAevE,EACfwE,WAAYrD,IC9DhB,SAASsD,GAAgB3Q,EAAO4Q,EAAcvU,EAASwU,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAErF,EAAS,gBAAEsF,GAAoBhR,EAEpD,IAAIiR,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMnU,KAAO4T,EAAc,CAC5B,MAAMtX,EAAQsX,EAAa5T,GAI3B,GAAIuO,EAAkBvO,GAAM,CACxB+T,EAAK/T,GAAO1D,EACZ,QACJ,CAEA,MAAM8X,EAAY9D,GAAiBtQ,GAC7BqU,EAAc5F,EAAenS,EAAO8X,GAC1C,GAAIxG,EAAeP,IAAIrN,GAAM,CAKzB,GAHAiU,GAAe,EACfvF,EAAU1O,GAAOqU,GAEZF,EACD,SAEA7X,KAAW8X,EAAUhF,SAAW,KAChC+E,GAAkB,EAC1B,MACSnU,EAAI+N,WAAW,WAEpBmG,GAAqB,EACrBF,EAAgBhU,GAAOqU,GAGvBP,EAAM9T,GAAOqU,CAErB,CAiBA,GAhBKT,EAAalF,YACVuF,GAAgBJ,EAChBC,EAAMpF,UTtClB,SAAwBA,EAASrE,EAAqEiK,EAAoBT,GAAmB,IAA1G,2BAAEU,GAA6B,EAAI,mBAAEC,GAAqB,GAAOnK,EAE5FoK,EAAkB,GAKtB,IAAK,IAAIpQ,EAAI,EAAGA,EAAIgK,EAAehK,IAAK,CACpC,MAAMrE,EAAM2N,EAAmBtJ,GAC/B,QAAuBvI,IAAnB4S,EAAU1O,GAAoB,CAC9B,MAAM0U,EAAgBxG,EAAelO,IAAQA,EAC7CyU,GAAmB,GAAJ3E,OAAO4E,EAAa,KAAA5E,OAAIpB,EAAU1O,GAAI,KACzD,CACJ,CAaA,OAZIuU,IAA+B7F,EAAUP,IACzCsG,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBnF,EAAW4F,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BG,CAAe5R,EAAM0L,UAAWrP,EAAS8U,EAAiBN,GAEvEC,EAAMpF,YAKXoF,EAAMpF,UAAY,SAOtBwF,EAAoB,CACpB,MAAM,QAAEd,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOU,EAC3DF,EAAME,gBAAkB,GAAHlE,OAAMsD,EAAO,KAAAtD,OAAIuD,EAAO,KAAAvD,OAAIwD,EACrD,CACJ,CCvEA,MAAMuB,GAAwBA,KAAA,CAC1Bf,MAAO,CAAC,EACRpF,UAAW,CAAC,EACZsF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASe,GAAkBnY,EAAQoY,EAAQ/V,GACvC,IAAK,MAAMgB,KAAO+U,EACT/G,EAAc+G,EAAO/U,KAAU8N,EAAoB9N,EAAKhB,KACzDrC,EAAOqD,GAAO+U,EAAO/U,GAGjC,CAQA,SAASgV,GAAShW,EAAOkM,EAAajE,GAClC,MACM6M,EAAQ,CAAC,EAMf,OAFAgB,GAAkBhB,EALA9U,EAAM8U,OAAS,CAAC,EAKE9U,GACpCxD,OAAOyZ,OAAOnB,EAdlB,SAA+BzJ,EAAwBa,EAAajE,GAAU,IAA9C,kBAAE4M,GAAmBxJ,EACjD,OAAOpB,EAAAA,EAAAA,UAAQ,KACX,MAAMjG,EAAQ6R,KAEd,OADAlB,GAAgB3Q,EAAOkI,EAAa,CAAEqJ,4BAA6BtN,GAAY4M,GACxErY,OAAOyZ,OAAO,CAAC,EAAGjS,EAAM+Q,KAAM/Q,EAAM8Q,MAAM,GAClD,CAAC5I,GACR,CAQyBgK,CAAuBlW,EAAOkM,EAAajE,IACzDjI,EAAMmW,gBAAkBnW,EAAMmW,gBAAgBrB,GAASA,CAClE,CACA,SAASsB,GAAapW,EAAOkM,EAAajE,GAEtC,MAAMoO,EAAY,CAAC,EACbvB,EAAQkB,GAAShW,EAAOkM,EAAajE,GAoB3C,OAnBIjI,EAAMwK,OAA+B,IAAvBxK,EAAMsW,eAEpBD,EAAUE,WAAY,EAEtBzB,EAAM0B,WACF1B,EAAM2B,iBACF3B,EAAM4B,mBACF,OAEZ5B,EAAM6B,aACa,IAAf3W,EAAMwK,KACA,OAAM,OAAAsG,OACgB,MAAf9Q,EAAMwK,KAAe,IAAM,WAEzB1N,IAAnBkD,EAAM4W,WACL5W,EAAM6W,OAAS7W,EAAM8W,YAAc9W,EAAM+W,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUvB,MAAQA,EACXuB,CACX,CChDA,MAAMW,GAAmB,IAAInI,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASoI,GAAkBjW,GACvB,OAAQA,EAAI+N,WAAW,UAClB/N,EAAI+N,WAAW,SAAmB,cAAR/N,GAC3BA,EAAI+N,WAAW,WACf/N,EAAI+N,WAAW,UACf/N,EAAI+N,WAAW,UACfiI,GAAiB3I,IAAIrN,EAC7B,CCtDA,IAAIkW,GAAiBlW,IAASiW,GAAkBjW,GAoBhD,KAnBiCmW,GAyBL5Q,QAAQ,0BAA0B6J,WArB1D8G,GAAiBlW,GAAQA,EAAI+N,WAAW,OAASkI,GAAkBjW,GAAOmW,GAAYnW,GAsB1F,CACA,MAAOoW,IACH,CA5BJ,IAAiCD,GCDjC,SAASE,GAAWC,EAAQC,EAAQ/Z,GAChC,MAAyB,kBAAX8Z,EACRA,EACArG,GAAGvB,UAAU6H,EAAS/Z,EAAO8Z,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAc3T,EAAKqH,EAEfhL,EAASuX,EAAU/C,GAAmB,IAFrB,MAAEgD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE3D,EAAO,QAAEC,EAAO,WAAE2D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAQ9M,EAMP,GALAsJ,GAAgB3Q,EAAOmU,EAAQ9X,EAASwU,GAKpC+C,EAIA,YAHI5T,EAAM8Q,MAAMsD,UACZpU,EAAMqU,MAAMD,QAAUpU,EAAM8Q,MAAMsD,UAI1CpU,EAAMqU,MAAQrU,EAAM8Q,MACpB9Q,EAAM8Q,MAAQ,CAAC,EACf,MAAM,MAAEuD,EAAK,MAAEvD,EAAK,WAAEwD,GAAetU,EAKjCqU,EAAM3I,YACF4I,IACAxD,EAAMpF,UAAY2I,EAAM3I,kBACrB2I,EAAM3I,WAGb4I,SACaxb,IAAZsX,QAAqCtX,IAAZuX,GAAyBS,EAAMpF,aACzDoF,EAAME,gBFzBd,SAAgCsD,EAAYlE,EAASC,GACjD,MAAMkE,EAAYlB,GAAWjD,EAASkE,EAAW5W,EAAG4W,EAAWpG,OACzDsG,EAAYnB,GAAWhD,EAASiE,EAAW3W,EAAG2W,EAAWlG,QAC/D,MAAO,GAAPtB,OAAUyH,EAAS,KAAAzH,OAAI0H,EAC3B,CEqBgCC,CAAuBH,OAAwBxb,IAAZsX,EAAwBA,EAAU,QAAiBtX,IAAZuX,EAAwBA,EAAU,UAG1HvX,IAAV+a,IACAQ,EAAM3W,EAAImW,QACA/a,IAAVgb,IACAO,EAAM1W,EAAImW,QACIhb,IAAdib,IACAM,EAAMlI,MAAQ4H,QAECjb,IAAfkb,GD7BR,SAAsBK,EAAOjT,GAAqD,IAA7CsT,EAAO1S,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGuR,EAAMvR,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAG2S,IAAW3S,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GAErEqS,EAAML,WAAa,EAGnB,MAAMjX,EAAO4X,EAAcnB,GAAWE,GAEtCW,EAAMtX,EAAKwW,QAAUtG,GAAGvB,WAAW6H,GAEnC,MAAMS,EAAa/G,GAAGvB,UAAUtK,GAC1B6S,EAAchH,GAAGvB,UAAUgJ,GACjCL,EAAMtX,EAAK0W,OAAS,GAAH3G,OAAMkH,EAAU,KAAAlH,OAAImH,EACzC,CCkBQW,CAAaP,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMW,GAAuBA,KAAA,IACtBhD,KACHwC,MAAO,CAAC,ICJNT,GAAYkB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIlQ,cCMzD,SAASmQ,GAAY/Y,EAAOkM,EAAa8M,EAAW3S,GAChD,MAAM4S,GAAchP,EAAAA,EAAAA,UAAQ,KACxB,MAAMjG,EAAQ6U,KAEd,OADAlB,GAAc3T,EAAOkI,EAAa,CAAEqJ,4BAA4B,GAASqC,GAASvR,GAAYrG,EAAM6U,mBAC7F,IACA7Q,EAAMqU,MACTvD,MAAO,IAAK9Q,EAAM8Q,OACrB,GACF,CAAC5I,IACJ,GAAIlM,EAAM8U,MAAO,CACb,MAAMoE,EAAY,CAAC,EACnBpD,GAAkBoD,EAAWlZ,EAAM8U,MAAO9U,GAC1CiZ,EAAYnE,MAAQ,IAAKoE,KAAcD,EAAYnE,MACvD,CACA,OAAOmE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBpT,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAwBvC,MAvBkBwF,CAACnF,EAAWrG,EAAOU,EAAG2K,EAAoBpD,KAAa,IAA/B,aAAE2M,GAAcvJ,EACtD,MAGM4N,GAHiB1K,EAAelI,GAChC0S,GACA3C,IAC6BpW,EAAO4U,EAAc3M,EAAU5B,GAC5DgT,EPoBd,SAAqBrZ,EAAOsZ,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMrY,KAAOhB,EAQF,WAARgB,GAA4C,kBAAjBhB,EAAMuZ,SAEjCrC,GAAclW,KACU,IAAvBoY,GAA+BnC,GAAkBjW,KAChDsY,IAAUrC,GAAkBjW,IAE7BhB,EAAiB,WAAKgB,EAAI+N,WAAW,aACtCsK,EAAcrY,GAAOhB,EAAMgB,IAGnC,OAAOqY,CACX,COzC8BG,CAAYxZ,EAA4B,kBAAdqG,EAAwB+S,GAClEK,EAAe,IACdJ,KACAJ,EACHvY,QAOE,SAAEgZ,GAAa1Z,EACf2Z,GAAmB1P,EAAAA,EAAAA,UAAQ,IAAO+E,EAAc0K,GAAYA,EAASpW,MAAQoW,GAAW,CAACA,IAC/F,OAAOlS,EAAAA,EAAAA,eAAcnB,EAAW,IACzBoT,EACHC,SAAUC,GACZ,CAGV,CChCA,SAASC,GAAWC,EAAOxO,EAAmByO,EAAWC,GAAY,IAAxC,MAAEjF,EAAK,KAAEC,GAAM1J,EACxC7O,OAAOyZ,OAAO4D,EAAQ/E,MAAOA,EAAOiF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAM9Y,KAAO+T,EACd8E,EAAQ/E,MAAMmF,YAAYjZ,EAAK+T,EAAK/T,GAE5C,CCHA,MAAMkZ,GAAsB,IAAIrL,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASsL,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAatd,EAAWid,GAC5C,IAAK,MAAM/Y,KAAOoZ,EAAY/B,MAC1BwB,EAAQS,aAAcJ,GAAoB7L,IAAIrN,GAA0BA,EAAnByH,EAAYzH,GAAYoZ,EAAY/B,MAAMrX,GAEvG,CCNA,SAASuZ,GAA4Bva,EAAOwa,GACxC,MAAM,MAAE1F,GAAU9U,EACZya,EAAY,CAAC,EACnB,IAAK,MAAMzZ,KAAO8T,GACV9F,EAAc8F,EAAM9T,KACnBwZ,EAAU1F,OAAS9F,EAAcwL,EAAU1F,MAAM9T,KAClD8N,EAAoB9N,EAAKhB,MACzBya,EAAUzZ,GAAO8T,EAAM9T,IAG/B,OAAOyZ,CACX,CCVA,SAASF,GAA4Bva,EAAOwa,GACxC,MAAMC,EAAYC,GAA8B1a,EAAOwa,GACvD,IAAK,MAAMxZ,KAAOhB,EACd,GAAIgP,EAAchP,EAAMgB,KAASgO,EAAcwL,EAAUxZ,IAAO,CAI5DyZ,GAHuD,IAArC9L,EAAmB7L,QAAQ9B,GACvC,OAASA,EAAI2Z,OAAO,GAAGC,cAAgB5Z,EAAI6Z,UAAU,GACrD7Z,GACiBhB,EAAMgB,EACjC,CAEJ,OAAOyZ,CACX,CCfA,SAASK,GAAwB9a,EAAO+a,EAAY9M,GAAkD,IAA1C+M,EAAahV,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGiV,EAAejV,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAf+U,IACPA,EAAaA,OAAsBje,IAAXmR,EAAuBA,EAASjO,EAAMiO,OAAQ+M,EAAeC,IAM/D,kBAAfF,IACPA,EAAa/a,EAAM2J,UAAY3J,EAAM2J,SAASoR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBje,IAAXmR,EAAuBA,EAASjO,EAAMiO,OAAQ+M,EAAeC,IAElFF,CACX,CCvBA,MAAMG,GAAqB/e,GAChB6M,MAAMC,QAAQ9M,GCCnBgf,GAAiBhf,GACZuN,QAAQvN,GAAkB,kBAANA,GAAkBA,EAAEif,KAAOjf,EAAEkf,SAEtDC,GAAgCnf,GAE3B+e,GAAkB/e,GAAKA,EAAEA,EAAEiJ,OAAS,IAAM,EAAIjJ,ECCzD,SAASof,GAAmBje,GACxB,MAAMke,EAAiBxM,EAAc1R,GAASA,EAAMgG,MAAQhG,EAC5D,OAAO6d,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAAC1b,EAAOiI,KAC3C,MAAMhE,GAAU+F,EAAAA,EAAAA,YAAW7B,GACrBmE,GAAkBtC,EAAAA,EAAAA,YAAW5B,GAC7BuT,EAAOA,IAbjB,SAAkBtQ,EAA+DrL,EAAOiE,EAASqI,GAAiB,IAA/F,4BAAEiO,EAA2B,kBAAEqB,EAAiB,QAAEC,GAAUxQ,EAC3E,MAAMrH,EAAQ,CACV4Q,aAAckH,GAAiB9b,EAAOiE,EAASqI,EAAiBiO,GAChEH,YAAawB,KAKjB,OAHIC,IACA7X,EAAMyJ,MAASD,GAAaqO,EAAQ7b,EAAOwN,EAAUxJ,IAElDA,CACX,CAIuB+X,CAAUL,EAAQ1b,EAAOiE,EAASqI,GACrD,OAAOrE,EAAW0T,ICdtB,SAAqBK,GACjB,MAAMtb,GAAM+L,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhB/L,EAAIzB,UACJyB,EAAIzB,QAAU+c,KAEXtb,EAAIzB,OACf,CDQ+Bgd,CAAYN,EAAK,EAEhD,SAASG,GAAiB9b,EAAOiE,EAASqI,EAAiB4P,GACvD,MAAM3C,EAAS,CAAC,EACV4C,EAAeD,EAAmBlc,EAAO,CAAC,GAChD,IAAK,MAAMgB,KAAOmb,EACd5C,EAAOvY,GAAOua,GAAmBY,EAAanb,IAElD,IAAI,QAAE6I,EAAO,QAAEN,GAAYvJ,EAC3B,MAAMoc,EAA0B9S,EAAsBtJ,GAChDqc,EAAkB5S,EAAczJ,GAClCiE,GACAoY,IACCD,IACiB,IAAlBpc,EAAM8J,eACUhN,IAAZ+M,IACAA,EAAU5F,EAAQ4F,cACN/M,IAAZyM,IACAA,EAAUtF,EAAQsF,UAE1B,IAAI+S,IAA4BhQ,IACE,IAA5BA,EAAgBzC,QAEtByS,EAA4BA,IAAyC,IAAZzS,EACzD,MAAM0S,EAAeD,EAA4B/S,EAAUM,EAC3D,GAAI0S,GACwB,mBAAjBA,IACNrT,EAAoBqT,GAAe,EACvBvT,MAAMC,QAAQsT,GAAgBA,EAAe,CAACA,IACtDrf,SAAS6d,IACV,MAAMyB,EAAW1B,GAAwB9a,EAAO+a,GAChD,IAAKyB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAe/e,GAAW6e,EACjD,IAAK,MAAMxb,KAAOrD,EAAQ,CACtB,IAAIgf,EAAchf,EAAOqD,GACzB,GAAIgI,MAAMC,QAAQ0T,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYvX,OAAS,EACrB,EAEV,CACoB,OAAhBuX,IACApD,EAAOvY,GAAO2b,EAEtB,CACA,IAAK,MAAM3b,KAAOyb,EACdlD,EAAOvY,GAAOyb,EAAczb,EAAI,GAE5C,CACA,OAAOuY,CACX,CE9EA,MAAMqD,GAAQC,GAAQA,ECAtB,MAAMC,GACF/Y,WAAAA,GACInG,KAAKmf,MAAQ,GACbnf,KAAKof,UAAY,IAAInO,GACzB,CACAoO,GAAAA,CAAIC,GACA,IAAKtf,KAAKof,UAAU3O,IAAI6O,GAGpB,OAFAtf,KAAKof,UAAUC,IAAIC,GACnBtf,KAAKmf,MAAMha,KAAKma,IACT,CAEf,CACAC,MAAAA,CAAOD,GACH,MAAME,EAAQxf,KAAKmf,MAAMja,QAAQoa,IAClB,IAAXE,IACAxf,KAAKmf,MAAMM,OAAOD,EAAO,GACzBxf,KAAKof,UAAUzf,OAAO2f,GAE9B,CACAI,KAAAA,GACI1f,KAAKmf,MAAM3X,OAAS,EACpBxH,KAAKof,UAAUM,OACnB,ECpBJ,MAAMC,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAUC,GAAOC,OAAQC,GAAa3Z,MAAO4Z,GAAS,MAAEC,IDQhE,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMja,EAAQ,CACVka,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZP,EAAQN,GAAWc,QAAO,CAACC,EAAKtd,KAClCsd,EAAItd,GDIZ,SAA0Bgd,GAKtB,IAAIO,EAAY,IAAIzB,GAChB0B,EAAY,IAAI1B,GAChB2B,EAAW,EAKXL,GAAe,EACfM,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITrB,SAAU,SAACvhB,GACP,MAAM6iB,EADuC9Y,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,IACNoY,EACjCW,EAAQD,EAAoBP,EAAYC,EAO9C,OAT0BxY,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,IAItB2Y,EAAY1B,IAAIhhB,GAChB8iB,EAAM9B,IAAIhhB,IAAa6iB,GAAqBV,IAE5CK,EAAWF,EAAUxB,MAAM3X,QAExBnJ,CACX,EAIAyhB,OAASzhB,IACLuiB,EAAUrB,OAAOlhB,GACjB0iB,EAAYphB,OAAOtB,EAAS,EAKhCihB,QAAUU,IAMN,GAAIQ,EACAM,GAAiB,MADrB,CAUA,GANAN,GAAe,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUlB,QAEVmB,EAAWF,EAAUxB,MAAM3X,OACvBqZ,EACA,IAAK,IAAIpZ,EAAI,EAAGA,EAAIoZ,EAAUpZ,IAAK,CAC/B,MAAMpJ,EAAWsiB,EAAUxB,MAAM1X,GACjCpJ,EAAS2hB,GACLe,EAAYtQ,IAAIpS,KAChB4iB,EAAKrB,SAASvhB,GACd+hB,IAER,CAEJI,GAAe,EACXM,IACAA,GAAiB,EACjBG,EAAK3B,QAAQU,GApBjB,CAqBA,GAGR,OAAOiB,CACX,CCjFmBG,EAAiB,IAAOhB,GAAe,IAC3CM,IACR,CAAC,GACEW,EAAeC,GAAWrB,EAAMqB,GAAQhC,QAAQlZ,GAChDmb,EAAeA,KACjB,MAAMhB,EAAYiB,YAAYriB,MAC9BihB,GAAe,EACfha,EAAMka,MAAQD,EACR,IAAO,GACPnO,KAAKD,IAAIC,KAAKF,IAAIuO,EAAYna,EAAMma,UAnB/B,IAmBuD,GAClEna,EAAMma,UAAYA,EAClBna,EAAMoa,cAAe,EACrBb,GAAWrgB,QAAQ+hB,GACnBjb,EAAMoa,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBqB,GACtB,EASE3B,EAAWD,GAAWc,QAAO,CAACC,EAAKtd,KACrC,MAAM6d,EAAOhB,EAAM7c,GAMnB,OALAsd,EAAItd,GAAO,SAACkc,GAAkD,IAAzCmC,EAASrZ,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAAUsZ,EAAStZ,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAG7C,OAFKgY,IATTA,GAAe,EACfC,GAAoB,EACfja,EAAMoa,cACPN,EAAkBqB,IAQXN,EAAKrB,SAASN,EAASmC,EAAWC,EAC7C,EACOhB,CAAG,GACX,CAAC,GAEJ,MAAO,CAAEd,WAAUE,OADHR,GAAYK,GAAWrgB,SAAS8D,GAAQ6c,EAAM7c,GAAK0c,OAAOR,KAC/ClZ,QAAO6Z,QACtC,CCtD2E0B,CAAqD,qBAA1BC,sBAAwCA,sBAAwB5C,IAAM,GCKtK6C,GAAkB,CACpBhU,eAAgBgQ,GAAmB,CAC/BlB,4BAA6BA,GAC7BqB,kBAAmB/C,GACnBgD,QAASA,CAAC7b,EAAOwN,EAAQnC,KAAoC,IAAlC,YAAE+O,EAAW,aAAExF,GAAcvJ,EACpDoS,GAAMiC,MAAK,KACP,IACItF,EAAY9B,WAEJ,oBADG9K,EAASmS,QAEVnS,EAASmS,UACTnS,EAASoS,uBACvB,CACA,MAAOjgB,GAEHya,EAAY9B,WAAa,CACrB5W,EAAG,EACHC,EAAG,EACHuQ,MAAO,EACPE,OAAQ,EAEhB,KAEJqL,GAAM5e,QAAO,KACT8Y,GAAcyC,EAAaxF,EAAc,CAAEW,4BAA4B,GAASqC,GAASpK,EAASqS,SAAU7f,EAAM6U,mBAClHsF,GAAU3M,EAAU4M,EAAY,GAClC,KC9BR0F,GAAmB,CACrBrU,eAAgBgQ,GAAmB,CAC/BlB,4BAA2B,GAC3BqB,kBAAmB/F,MCP3B,SAASkK,GAAYpiB,EAAQqiB,EAAWC,GAAsC,IAA7B5f,EAAO2F,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAEka,SAAS,GAElE,OADAviB,EAAOwiB,iBAAiBH,EAAWC,EAAS5f,GACrC,IAAM1C,EAAOyiB,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAAS3a,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACH4a,MAAO,CACHlf,EAAG4e,EAAMK,EAAY,KACrBhf,EAAG2e,EAAMK,EAAY,MAGjC,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgBnjB,EAAQqiB,EAAWC,EAAS5f,GACjD,OAAO0f,GAAYpiB,EAAQqiB,EAAWa,GAAeZ,GAAU5f,EACnE,CCEA,MAAM0gB,GAAmBA,CAACta,EAAGC,IAAOvK,GAAMuK,EAAED,EAAEtK,IACxC6kB,GAAO,mBAAAC,EAAAjb,UAAAZ,OAAI8b,EAAY,IAAAlY,MAAAiY,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAnb,UAAAmb,GAAA,OAAKD,EAAa7C,OAAO0C,GAAiB,ECRvE,SAASK,GAAW5iB,GAChB,IAAI6iB,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAO7iB,EACA8iB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcjX,GACnB,IAAI6W,GAAO,EACX,GAAa,MAAT7W,EACA6W,EAAOG,UAEN,GAAa,MAAThX,EACL6W,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACF/d,WAAAA,CAAYge,GACRnkB,KAAKokB,WAAY,EACjBpkB,KAAKmkB,KAAOA,CAChB,CACAlV,MAAAA,GAAW,ECCf,SAASoV,GAAcF,EAAMG,GACzB,MAAMlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOpB,GAAgBiB,EAAK9iB,QAAS+gB,GAXjBoC,CAAC9B,EAAO+B,KACxB,GAAmB,UAAf/B,EAAMjf,MAAoBugB,KAC1B,OACJ,MAAM5hB,EAAQ+hB,EAAKO,WACfP,EAAK/U,gBAAkBhN,EAAMuiB,YAC7BR,EAAK/U,eAAewV,UAAU,aAAcN,GAE5CliB,EAAMmiB,IACN1E,GAAM5Q,QAAO,IAAM7M,EAAMmiB,GAAc7B,EAAO+B,IAClD,GAEyD,CACzDnC,SAAU6B,EAAKO,WAAWH,IAElC,CChBA,MAAMM,GAAgBA,CAACrW,EAAQsW,MACtBA,IAGItW,IAAWsW,GAITD,GAAcrW,EAAQsW,EAAMC,gBCL3C,SAASC,GAA0BpkB,EAAMyhB,GACrC,IAAKA,EACD,OACJ,MAAM4C,EAAwB,IAAIC,aAAa,UAAYtkB,GAC3DyhB,EAAQ4C,EAAuBnC,GAAiBmC,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMlnB,EAAW8mB,GAAkBzf,IAAI6f,EAAMxlB,QAC7C1B,GAAYA,EAASknB,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQnmB,QAAQgmB,GAAqB,EAqBzC,SAASI,GAAoBzJ,EAASxZ,EAASpE,GAC3C,MAAMsnB,EApBV,SAAiClY,GAAuB,IAAtB,KAAEmY,KAASnjB,GAASgL,EAClD,MAAMoY,EAAaD,GAAQjc,SAItB0b,GAAU5U,IAAIoV,IACfR,GAAUplB,IAAI4lB,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAU3f,IAAImgB,GAC9BziB,EAAM2iB,KAAKC,UAAUvjB,GAQ3B,OAHKqjB,EAAc1iB,KACf0iB,EAAc1iB,GAAO,IAAI6iB,qBAAqBT,GAA0B,CAAEI,UAASnjB,KAEhFqjB,EAAc1iB,EACzB,CAEsC8iB,CAAyBzjB,GAG3D,OAFA0iB,GAAkBllB,IAAIgc,EAAS5d,GAC/BsnB,EAA0BQ,QAAQlK,GAC3B,KACHkJ,GAAkBxlB,OAAOsc,GACzB0J,EAA0BS,UAAUnK,EAAQ,CAEpD,CC3CA,MAAMoK,GAAiB,CACnBza,KAAM,EACN0a,IAAK,GCAT,MAAMC,GAAoB,CACtBtZ,OAAQ,CACJiX,QDAR,cAA4BA,GACxB/d,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKymB,gBAAiB,EACtBzmB,KAAK0mB,UAAW,CACpB,CACAC,aAAAA,GACI3mB,KAAK8P,UACL,MAAM,SAAE8W,EAAW,CAAC,GAAM5mB,KAAKmkB,KAAKO,YAC9B,KAAEkB,EAAMzQ,OAAQ0R,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDnkB,EAAU,CACZmjB,KAAMA,EAAOA,EAAKvkB,aAAUnC,EAC5B2nB,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoB1lB,KAAKmkB,KAAK9iB,QAASoB,GA7BhB8iB,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAIvlB,KAAK0mB,WAAaO,EAClB,OAMJ,GALAjnB,KAAK0mB,SAAWO,EAKZF,IAASE,GAAkBjnB,KAAKymB,eAChC,OAEKQ,IACLjnB,KAAKymB,gBAAiB,GAEtBzmB,KAAKmkB,KAAK/U,gBACVpP,KAAKmkB,KAAK/U,eAAewV,UAAU,cAAeqC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBnnB,KAAKmkB,KAAKO,WACjDrmB,EAAW4oB,EAAiBC,EAAkBC,EACpD9oB,GAAYA,EAASknB,EAAM,GAGnC,CACA1V,KAAAA,GACI7P,KAAK2mB,eACT,CACA1X,MAAAA,GACI,GAAoC,qBAAzBgX,qBACP,OACJ,MAAM,MAAE7jB,EAAK,UAAEwa,GAAc5c,KAAKmkB,KAC5BiD,EAAoB,CAAC,SAAU,SAAU,QAAQxb,KAO/D,SAAiC6B,GAA0D,IAAzD,SAAEmZ,EAAW,CAAC,GAAGnZ,GAAImZ,SAAUS,EAAe,CAAC,GAAGjf,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQxH,GAASgmB,EAAShmB,KAAUymB,EAAazmB,EACrD,CAToE0mB,CAAyBllB,EAAOwa,IACxFwK,GACApnB,KAAK2mB,eAEb,CACA7W,OAAAA,GAAY,ICxDZ/C,IAAK,CACDmX,QHMR,cAA2BA,GACvB/d,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKunB,qBAAuBvI,GAC5Bhf,KAAKwnB,mBAAqBxI,GAC1Bhf,KAAKynB,0BAA4BzI,GACjChf,KAAK0nB,kBAAoB,CAACC,EAAYC,KAElC,GADA5nB,KAAKwnB,qBACDxnB,KAAK6nB,WACL,OACJ,MAAMzlB,EAAQpC,KAAKmkB,KAAKO,WAelBoD,EAA0B5E,GAAgBxZ,OAAQ,aAdhCqe,CAACC,EAAUC,KAC/B,IAAKjoB,KAAKkoB,gBACN,OACJ,MAAM,MAAEjP,EAAK,YAAEkP,GAAgBnoB,KAAKmkB,KAAKO,WACzC7E,GAAM5Q,QAAO,KAKR4V,GAAc7kB,KAAKmkB,KAAK9iB,QAAS2mB,EAASjoB,QAErCkZ,GAASA,EAAM+O,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GACzC,GAEgF,CAAE3F,UAAWlgB,EAAM6W,OAAS7W,EAAmB,eAC/HgmB,EAA8BlF,GAAgBxZ,OAAQ,iBAAiB,CAAC2e,EAAaC,IAAetoB,KAAKuoB,YAAYF,EAAaC,IAAa,CAAEhG,UAAWlgB,EAAM+lB,aAAe/lB,EAAuB,mBAC9MpC,KAAKwnB,mBAAqBpE,GAAK0E,EAAyBM,GACxDpoB,KAAKwoB,WAAWb,EAAYC,EAAU,EAE1C5nB,KAAKyoB,qBAAuB,KACxB,MAmBMC,EAAwBvG,GAAYniB,KAAKmkB,KAAK9iB,QAAS,WAnBtCsnB,IACnB,GAAyB,UAArBA,EAAavlB,KAAmBpD,KAAK6nB,WACrC,OAWJ7nB,KAAKwnB,qBACLxnB,KAAKwnB,mBAAqBrF,GAAYniB,KAAKmkB,KAAK9iB,QAAS,SAXpCunB,IACM,UAAnBA,EAAWxlB,KAAoBpD,KAAKkoB,iBAExClD,GAA0B,MAAM,CAACtC,EAAO+B,KACpC,MAAM,MAAExL,GAAUjZ,KAAKmkB,KAAKO,WACxBzL,GACA4G,GAAM5Q,QAAO,IAAMgK,EAAMyJ,EAAO+B,IACpC,GACF,IAINO,GAA0B,QAAQ,CAACtC,EAAO+B,KACtCzkB,KAAKwoB,WAAW9F,EAAO+B,EAAK,GAC9B,IAQAoE,EAAqB1G,GAAYniB,KAAKmkB,KAAK9iB,QAAS,QALvCynB,KACV9oB,KAAK6nB,YAEV7C,GAA0B,UAAU,CAACqD,EAAaC,IAAetoB,KAAKuoB,YAAYF,EAAaC,IAAY,IAG/GtoB,KAAKynB,0BAA4BrE,GAAKsF,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAW9F,EAAO+B,GACdzkB,KAAK6nB,YAAa,EAClB,MAAM,WAAE3O,EAAU,SAAEC,GAAanZ,KAAKmkB,KAAKO,WAIvCvL,GAAYnZ,KAAKmkB,KAAK/U,gBACtBpP,KAAKmkB,KAAK/U,eAAewV,UAAU,YAAY,GAE/C1L,GACA2G,GAAM5Q,QAAO,IAAMiK,EAAWwJ,EAAO+B,IAE7C,CACAyD,aAAAA,GACIloB,KAAKwnB,qBACLxnB,KAAK6nB,YAAa,EAKlB,OAJc7nB,KAAKmkB,KAAKO,WACdvL,UAAYnZ,KAAKmkB,KAAK/U,gBAC5BpP,KAAKmkB,KAAK/U,eAAewV,UAAU,YAAY,IAE3CZ,IACZ,CACAuE,WAAAA,CAAY7F,EAAO+B,GACf,IAAKzkB,KAAKkoB,gBACN,OACJ,MAAM,YAAEC,GAAgBnoB,KAAKmkB,KAAKO,WAC9ByD,GACAtI,GAAM5Q,QAAO,IAAMkZ,EAAYzF,EAAO+B,IAE9C,CACA5U,KAAAA,GACI,MAAMzN,EAAQpC,KAAKmkB,KAAKO,WAClBqE,EAAwB7F,GAAgBljB,KAAKmkB,KAAK9iB,QAAS,cAAerB,KAAK0nB,kBAAmB,CAAEpF,UAAWlgB,EAAM8W,YAAc9W,EAAsB,kBACzJ4mB,EAAsB7G,GAAYniB,KAAKmkB,KAAK9iB,QAAS,QAASrB,KAAKyoB,sBACzEzoB,KAAKunB,qBAAuBnE,GAAK2F,EAAuBC,EAC5D,CACAlZ,OAAAA,GACI9P,KAAKunB,uBACLvnB,KAAKwnB,qBACLxnB,KAAKynB,2BACT,IGxGA5a,MAAO,CACHqX,QCTR,cAA2BA,GACvB/d,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKskB,UAAW,CACpB,CACA2E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBlpB,KAAKmkB,KAAK9iB,QAAQ8nB,QAAQ,iBAC/C,CACA,MAAOpnB,GACHmnB,GAAiB,CACrB,CACKA,GAAmBlpB,KAAKmkB,KAAK/U,iBAElCpP,KAAKmkB,KAAK/U,eAAewV,UAAU,cAAc,GACjD5kB,KAAKskB,UAAW,EACpB,CACA8E,MAAAA,GACSppB,KAAKskB,UAAatkB,KAAKmkB,KAAK/U,iBAEjCpP,KAAKmkB,KAAK/U,eAAewV,UAAU,cAAc,GACjD5kB,KAAKskB,UAAW,EACpB,CACAzU,KAAAA,GACI7P,KAAK8P,QAAUsT,GAAKjB,GAAYniB,KAAKmkB,KAAK9iB,QAAS,SAAS,IAAMrB,KAAKipB,YAAY9G,GAAYniB,KAAKmkB,KAAK9iB,QAAS,QAAQ,IAAMrB,KAAKopB,WACzI,CACAtZ,OAAAA,GAAY,IDtBZhD,MAAO,CACHoX,QLQR,cAA2BA,GACvBrU,KAAAA,GACI7P,KAAK8P,QAAUsT,GAAKiB,GAAcrkB,KAAKmkB,MAAM,GAAOE,GAAcrkB,KAAKmkB,MAAM,GACjF,CACArU,OAAAA,GAAY,KO5BhB,SAASuZ,GAAeC,EAAMC,GAC1B,IAAKne,MAAMC,QAAQke,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK/hB,OACxB,GAAIgiB,IAAeF,EAAK9hB,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAI+hB,EAAY/hB,IAC5B,GAAI8hB,EAAK9hB,KAAO6hB,EAAK7hB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASgiB,GAAelb,EAAe4O,EAAY9M,GAC/C,MAAMjO,EAAQmM,EAAcmW,WAC5B,OAAOxH,GAAwB9a,EAAO+a,OAAuBje,IAAXmR,EAAuBA,EAASjO,EAAMiO,OAf5F,SAAoB9B,GAChB,MAAMlN,EAAU,CAAC,EAEjB,OADAkN,EAAcoN,OAAOrc,SAAQ,CAACI,EAAO0D,IAAS/B,EAAQ+B,GAAO1D,EAAMgG,QAC5DrE,CACX,CAWoGqoB,CAAWnb,GAP/G,SAAqBA,GACjB,MAAMob,EAAW,CAAC,EAElB,OADApb,EAAcoN,OAAOrc,SAAQ,CAACI,EAAO0D,IAASumB,EAASvmB,GAAO1D,EAAM2R,gBAC7DsY,CACX,CAG+HtY,CAAY9C,GAC3I,CCnBA,IAAIqb,GAAU5K,GACV6K,GAAY7K,GCGhB,MAAM8K,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWhf,MAAMC,QAAQ+e,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOte,SAASse,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBhf,MAAMC,QAAQ+e,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB/c,IAAA,IAAE5E,EAAGC,EAAGgB,EAAGP,GAAEkE,EAAA,sBAAAyF,OAAqBrK,EAAC,MAAAqK,OAAKpK,EAAC,MAAAoK,OAAKpJ,EAAC,MAAAoJ,OAAK3J,EAAC,MAC3E+gB,GAAuB,CACzBG,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQN,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CO,QAASP,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CQ,OAAQR,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDS,QAAST,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASU,GAAwBd,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBhf,MAAMC,QAAQ+e,GACVA,EAAOe,IAAID,IACXZ,GAAqBF,EACnC,CCRA,MAAMgB,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO9M,GACX,MAAM+M,EAAYC,GArBtB,SAAyBloB,EAAGmoB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA3kB,EAAI,EACR,GACI2kB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,GAAWgB,EAAUT,EAAKE,GAAO/nB,EACxCqoB,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZla,KAAKma,IAAIF,GAAYX,MACxB/jB,EAAIgkB,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EACxE,CC9CA,MAAMnB,GAASe,GAAY,IAAM,EAAG,EAAG,GACjCd,GAAUc,GAAY,EAAG,EAAG,IAAM,GAClCb,GAAYa,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAiB7B,GACZtf,MAAMC,QAAQqf,IAA4B,kBAAZA,EAAK,GCCxC8B,GAAgBpC,GAAYhhB,GAAMA,GAAK,GAAMghB,EAAO,EAAIhhB,GAAK,GAAK,EAAIghB,EAAO,GAAK,EAAIhhB,KAAO,ECA7FqjB,GAAiBrC,GAAYhhB,GAAM,EAAIghB,EAAO,EAAIhhB,GCClD0hB,GAAU1hB,GAAM,EAAI8I,KAAKwa,IAAIxa,KAAKya,KAAKvjB,IACvC2hB,GAAU0B,GAAc3B,IACxB8B,GAAYJ,GAAa1B,ICDzBG,GAAUS,GAAY,IAAM,KAAM,IAAM,KACxCV,GAASyB,GAAcxB,IACvB4B,GAAYL,GAAaxB,ICEzB8B,GAAe,CACjBrC,OAAQzL,GACR2L,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN8B,UAAS,GACT7B,QAAO,GACPC,OAAM,GACN6B,UAAS,GACT5B,QAAO,GACP8B,WCjBgB3jB,IAAOA,GAAK,GAAK,EAAI,GAAM4hB,GAAO5hB,GAAK,IAAO,EAAI8I,KAAK8a,IAAI,GAAI,IAAM5jB,EAAI,MDmBvF6jB,GAA8B9P,IAChC,GAAI/R,MAAMC,QAAQ8R,GAAa,CAE3B0M,GAAgC,IAAtB1M,EAAW3V,OAAc,2DACnC,MAAO0lB,EAAIC,EAAIC,EAAIC,GAAMlQ,EACzB,OAAOuO,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAflQ,GAEZ0M,QAAuC3qB,IAA7B4tB,GAAa3P,GAA2B,wBAAFjK,OAA0BiK,EAAU,MAC7E2P,GAAa3P,IAEjBA,CAAU,EE3BfmQ,GAAgBA,CAAC7pB,EAAM8pB,IAAchvB,GAChCuN,QAASgH,EAASvU,IAAMsU,EAAiBhC,KAAKtS,IAAMA,EAAE4S,WAAW1N,IACnE8pB,GAAY3uB,OAAOiJ,UAAUH,eAAe9C,KAAKrG,EAAGgvB,IAEvDC,GAAaA,CAACC,EAAOC,EAAOC,IAAWpvB,IACzC,IAAKuU,EAASvU,GACV,OAAOA,EACX,MAAOsK,EAAGC,EAAGgB,EAAGwI,GAAS/T,EAAEqvB,MAAMjb,GACjC,MAAO,CACH,CAAC8a,GAAQpb,WAAWxJ,GACpB,CAAC6kB,GAAQrb,WAAWvJ,GACpB,CAAC6kB,GAAQtb,WAAWvI,GACpBwI,WAAiBpT,IAAVoT,EAAsBD,WAAWC,GAAS,EACpD,ECbCub,GAAU,IACT1b,EACHL,UAAYvT,GAAM2T,KAAKQ,MAHLnU,IAAMwT,EAAM,EAAG,IAAKxT,GAGTuvB,CAAavvB,KAExCwvB,GAAO,CACTld,KAAMyc,GAAc,MAAO,OAC3Blb,MAAOob,GAAW,MAAO,QAAS,QAClC1b,UAAWrE,IAAA,IAAC,IAAEugB,EAAG,MAAEC,EAAK,KAAEC,EAAM5b,MAAO6b,EAAU,GAAG1gB,EAAA,MAAK,QACrDogB,GAAQ/b,UAAUkc,GAClB,KACAH,GAAQ/b,UAAUmc,GAClB,KACAJ,GAAQ/b,UAAUoc,GAClB,KACAzb,EAASH,EAAMR,UAAUqc,IACzB,GAAG,GCYX,MAAMC,GAAM,CACRvd,KAAMyc,GAAc,KACpBlb,MAhCJ,SAAkB7T,GACd,IAAI+K,EAAI,GACJS,EAAI,GACJjB,EAAI,GACJD,EAAI,GAmBR,OAjBItK,EAAEiJ,OAAS,GACX8B,EAAI/K,EAAE0e,UAAU,EAAG,GACnBlT,EAAIxL,EAAE0e,UAAU,EAAG,GACnBnU,EAAIvK,EAAE0e,UAAU,EAAG,GACnBpU,EAAItK,EAAE0e,UAAU,EAAG,KAInB3T,EAAI/K,EAAE0e,UAAU,EAAG,GACnBlT,EAAIxL,EAAE0e,UAAU,EAAG,GACnBnU,EAAIvK,EAAE0e,UAAU,EAAG,GACnBpU,EAAItK,EAAE0e,UAAU,EAAG,GACnB3T,GAAKA,EACLS,GAAKA,EACLjB,GAAKA,EACLD,GAAKA,GAEF,CACHmlB,IAAKK,SAAS/kB,EAAG,IACjB2kB,MAAOI,SAAStkB,EAAG,IACnBmkB,KAAMG,SAASvlB,EAAG,IAClBwJ,MAAOzJ,EAAIwlB,SAASxlB,EAAG,IAAM,IAAM,EAE3C,EAIIiJ,UAAWic,GAAKjc,WC/Bdwc,GAAO,CACTzd,KAAMyc,GAAc,MAAO,OAC3Blb,MAAOob,GAAW,MAAO,aAAc,aACvC1b,UAAWrE,IAAwD,IAAvD,IAAE8gB,EAAG,WAAEC,EAAU,UAAEC,EAAWnc,MAAO6b,EAAU,GAAG1gB,EAC1D,MAAQ,QACJyE,KAAKQ,MAAM6b,GACX,KACAnb,EAAQtB,UAAUW,EAAS+b,IAC3B,KACApb,EAAQtB,UAAUW,EAASgc,IAC3B,KACAhc,EAASH,EAAMR,UAAUqc,IACzB,GAAG,GCZTO,GAAQ,CACV7d,KAAOtS,GAAMwvB,GAAKld,KAAKtS,IAAM6vB,GAAIvd,KAAKtS,IAAM+vB,GAAKzd,KAAKtS,GACtD6T,MAAQ7T,GACAwvB,GAAKld,KAAKtS,GACHwvB,GAAK3b,MAAM7T,GAEb+vB,GAAKzd,KAAKtS,GACR+vB,GAAKlc,MAAM7T,GAGX6vB,GAAIhc,MAAM7T,GAGzBuT,UAAYvT,GACDuU,EAASvU,GACVA,EACAA,EAAEmJ,eAAe,OACbqmB,GAAKjc,UAAUvT,GACf+vB,GAAKxc,UAAUvT,ICF3Bif,GAAMA,CAACmR,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAAS1lB,EAAG2lB,EAAG1D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDjiB,EAAc,GAAT2lB,EAAI3lB,GAASiiB,EACzBA,EAAI,GACG0D,EACP1D,EAAI,EAAI,EACDjiB,GAAK2lB,EAAI3lB,IAAM,EAAI,EAAIiiB,GAAK,EAChCjiB,CACX,CCHA,MAAM4lB,GAAiBA,CAACL,EAAMC,EAAIrwB,KAC9B,MAAM0wB,EAAWN,EAAOA,EACxB,OAAOzc,KAAKgd,KAAKhd,KAAKD,IAAI,EAAG1T,GAAKqwB,EAAKA,EAAKK,GAAYA,GAAU,EAEhEE,GAAa,CAACf,GAAKL,GAAMO,IAE/B,SAASc,GAAOV,GACZ,MAAMjrB,GAFYlF,EAEQmwB,EAFFS,GAAWE,MAAM5rB,GAASA,EAAKoN,KAAKtS,MAA1CA,MAGlBsrB,GAAU/d,QAAQrI,GAAO,IAAFyP,OAAMwb,EAAK,yEAClC,IAAIY,EAAQ7rB,EAAK2O,MAAMsc,GAKvB,OAJIjrB,IAAS6qB,KAETgB,EDRR,SAAmB7hB,GAAwC,IAAvC,IAAE8gB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEnc,GAAO7E,EACrD8gB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIT,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKM,EAGA,CACD,MAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCplB,EAAI,EAAIqlB,EAAYM,EAC1Bf,EAAMc,GAAS1lB,EAAG2lB,EAAGR,EAAM,EAAI,GAC/BN,EAAQa,GAAS1lB,EAAG2lB,EAAGR,GACvBL,EAAOY,GAAS1lB,EAAG2lB,EAAGR,EAAM,EAAI,EACpC,MAVIP,EAAMC,EAAQC,EAAOO,EAWzB,MAAO,CACHT,IAAK9b,KAAKQ,MAAY,IAANsb,GAChBC,MAAO/b,KAAKQ,MAAc,IAARub,GAClBC,KAAMhc,KAAKQ,MAAa,IAAPwb,GACjB5b,QAER,CCjBgBid,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACb,EAAMC,KACpB,MAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQlxB,IACJoxB,EAAQ3B,IAAMgB,GAAeS,EAASzB,IAAK0B,EAAO1B,IAAKzvB,GACvDoxB,EAAQ1B,MAAQe,GAAeS,EAASxB,MAAOyB,EAAOzB,MAAO1vB,GAC7DoxB,EAAQzB,KAAOc,GAAeS,EAASvB,KAAMwB,EAAOxB,KAAM3vB,GAC1DoxB,EAAQrd,MAAQkL,GAAIiS,EAASnd,MAAOod,EAAOpd,MAAO/T,GAC3CwvB,GAAKjc,UAAU6d,GACzB,ECtBL,MAAMC,GAAkB,CACpBC,M3EZqB,gF2EarBC,SAAU,OACVtwB,MAAO,OACP4S,MAAO4M,IAEL+Q,GAAiB,CACnBF,MAAOjd,EACPkd,SAAU,SACVtwB,MAAO,OACP4S,MAAOsc,GAAMtc,OAEX4d,GAAkB,CACpBH,MAAOld,EACPmd,SAAU,UACVtwB,MAAO,OACP4S,MAAOD,EAAOC,OAElB,SAAS6d,GAASxL,EAAIhX,GAAqC,IAAnC,MAAEoiB,EAAK,SAAEC,EAAQ,MAAEtwB,EAAK,MAAE4S,GAAO3E,EACrD,MAAM0b,EAAU1E,EAAKyL,UAAUtC,MAAMiC,GAChC1G,IAEL1E,EAAK,MAAQqL,GAAY3G,EAAQ3hB,OACjCid,EAAKyL,UAAYzL,EAAKyL,UAAUnlB,QAAQ8kB,EAAOrwB,GAC/CilB,EAAK9I,OAAOxW,QAAQgkB,EAAQgC,IAAI/Y,IACpC,CACA,SAAS+d,GAAoBzwB,GACzB,MAAM0wB,EAAgB1wB,EAAM2wB,WACtB5L,EAAO,CACT/kB,MAAO0wB,EACPF,UAAWE,EACXzU,OAAQ,GACR2U,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI/L,EAAK/kB,MAAMkR,SAAS,WACpBqf,GAASxL,EAAMmL,IACnBK,GAASxL,EAAMsL,IACfE,GAASxL,EAAMuL,IACRvL,CACX,CACA,SAASgM,GAAkBlyB,GACvB,OAAO4xB,GAAoB5xB,GAAGod,MAClC,CACA,SAAS+U,GAAkBvY,GACvB,MAAM,OAAEwD,EAAM,UAAE4U,EAAS,QAAED,EAAO,UAAEJ,GAAcC,GAAoBhY,GAChEwY,EAAYhV,EAAOnU,OACzB,OAAQjJ,IACJ,IAAIqyB,EAASV,EACb,IAAK,IAAIzoB,EAAI,EAAGA,EAAIkpB,EAAWlpB,IAEvBmpB,EADAnpB,EAAI6oB,EACKM,EAAO7lB,QAAQ6kB,GAAgBpwB,MAAOjB,EAAEkJ,IAE5CA,EAAI6oB,EAAUC,EACVK,EAAO7lB,QAAQglB,GAAevwB,MAAOkvB,GAAM5c,UAAUvT,EAAEkJ,KAGvDmpB,EAAO7lB,QAAQilB,GAAgBxwB,MAAOiT,EAASlU,EAAEkJ,KAGlE,OAAOmpB,CAAM,CAErB,CACA,MAAMC,GAAwBtyB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMuyB,GAAU,CACZjgB,KA/EJ,SAActS,GACV,IAAIib,EAAIuX,EACR,OAAQC,MAAMzyB,IACVuU,EAASvU,MACwB,QAA9Bib,EAAKjb,EAAEqvB,MAAMjb,UAAgC,IAAP6G,OAAgB,EAASA,EAAGhS,SAAW,KAC3C,QAA9BupB,EAAKxyB,EAAEqvB,MAAMhb,UAAgC,IAAPme,OAAgB,EAASA,EAAGvpB,SAAW,GAChF,CACZ,EAyEI4K,MAAOqe,GACPC,qBACAO,kBATJ,SAA2B1yB,GACvB,MAAM2yB,EAAST,GAAkBlyB,GAEjC,OADoBmyB,GAAkBnyB,EAC/B4yB,CAAYD,EAAO/F,IAAI0F,IAClC,GC5EMO,GAAeA,CAAC1X,EAAQ3Z,IAAYqJ,GAAC,GAAA8J,OAAQ9J,EAAI,EAAIrJ,EAAS2Z,GACpE,SAAS2X,GAAS3X,EAAQ3Z,GACtB,MAAsB,kBAAX2Z,EACCnb,GAAMif,GAAI9D,EAAQ3Z,EAAQxB,GAE7BmwB,GAAM7d,KAAK6I,GACT8V,GAAS9V,EAAQ3Z,GAGjB2Z,EAAOvI,WAAW,QACnBigB,GAAa1X,EAAQ3Z,GACrBuxB,GAAW5X,EAAQ3Z,EAEjC,CACA,MAAMwxB,GAAWA,CAAC5C,EAAMC,KACpB,MAAMgC,EAAS,IAAIjC,GACbgC,EAAYC,EAAOppB,OACnBgqB,EAAa7C,EAAKxD,KAAI,CAACsG,EAAUhqB,IAAM4pB,GAASI,EAAU7C,EAAGnnB,MACnE,OAAQlJ,IACJ,IAAK,IAAIkJ,EAAI,EAAGA,EAAIkpB,EAAWlpB,IAC3BmpB,EAAOnpB,GAAK+pB,EAAW/pB,GAAGlJ,GAE9B,OAAOqyB,CAAM,CAChB,EAECc,GAAYA,CAAChY,EAAQ3Z,KACvB,MAAM6wB,EAAS,IAAKlX,KAAW3Z,GACzByxB,EAAa,CAAC,EACpB,IAAK,MAAMpuB,KAAOwtB,OACM1xB,IAAhBwa,EAAOtW,SAAsClE,IAAhBa,EAAOqD,KACpCouB,EAAWpuB,GAAOiuB,GAAS3X,EAAOtW,GAAMrD,EAAOqD,KAGvD,OAAQ7E,IACJ,IAAK,MAAM6E,KAAOouB,EACdZ,EAAOxtB,GAAOouB,EAAWpuB,GAAK7E,GAElC,OAAOqyB,CAAM,CAChB,EAECU,GAAaA,CAAC5X,EAAQ3Z,KACxB,MAAM4xB,EAAWb,GAAQJ,kBAAkB3wB,GACrC6xB,EAAczB,GAAoBzW,GAClCmY,EAAc1B,GAAoBpwB,GAIxC,OAHuB6xB,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BpN,GAAKmO,GAASK,EAAYjW,OAAQkW,EAAYlW,QAASgW,IAG9D/H,IAAQ,EAAM,mBAAF1W,OAAqBwG,EAAM,WAAAxG,OAAUnT,EAAM,6KAChDqxB,GAAa1X,EAAQ3Z,GAChC,EChDE8uB,GAAWA,CAACF,EAAMC,EAAIlvB,KACxB,MAAMoyB,EAAmBlD,EAAKD,EAC9B,OAA4B,IAArBmD,EAAyB,GAAKpyB,EAAQivB,GAAQmD,CAAgB,ECJnEC,GAAYA,CAACpD,EAAMC,IAAQxlB,GAAMoU,GAAImR,EAAMC,EAAIxlB,GAgBrD,SAAS4oB,GAAapB,EAAQlG,EAAMuH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADO1zB,EAiB+BqyB,EAAO,IAfnDmB,GAEW,kBAANxzB,EACLmwB,GAAM7d,KAAKtS,GAAKixB,GAAW8B,GAE7BlmB,MAAMC,QAAQ9M,GACZgzB,GAEW,kBAANhzB,EACLmzB,GAEJK,IAbX,IAA4BxzB,EAkBxB,MAAM6zB,EAAYxB,EAAOppB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAI2qB,EAAW3qB,IAAK,CAChC,IAAI4qB,EAAQF,EAAavB,EAAOnpB,GAAImpB,EAAOnpB,EAAI,IAC/C,GAAIijB,EAAM,CACN,MAAM4H,EAAiBlnB,MAAMC,QAAQqf,GAAQA,EAAKjjB,IAAMuX,GAAO0L,EAC/D2H,EAAQjP,GAAKkP,EAAgBD,EACjC,CACAH,EAAO/sB,KAAKktB,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAqD,IAA3C7e,MAAO0gB,GAAU,EAAI,KAAE/H,EAAI,MAAE2H,GAAOjqB,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMsqB,EAAcF,EAAMhrB,OAM1B,GALAqiB,GAAU6I,IAAgB9B,EAAOppB,OAAQ,wDAKrB,IAAhBkrB,EACA,MAAO,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQlG,EAAM2H,GACpCD,EAAYF,EAAO1qB,OACnBorB,EAAgBr0B,IAClB,IAAIkJ,EAAI,EACR,GAAI2qB,EAAY,EACZ,KAAO3qB,EAAI+qB,EAAMhrB,OAAS,KAClBjJ,EAAIi0B,EAAM/qB,EAAI,IADOA,KAKjC,MAAMorB,EAAkBhE,GAAS2D,EAAM/qB,GAAI+qB,EAAM/qB,EAAI,GAAIlJ,GACzD,OAAO2zB,EAAOzqB,GAAGorB,EAAgB,EAErC,OAAOJ,EACAl0B,GAAMq0B,EAAa7gB,EAAMygB,EAAM,GAAIA,EAAME,EAAc,GAAIn0B,IAC5Dq0B,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMpZ,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQqZ,GACxB,MAAMhhB,EAAM2H,EAAOA,EAAOnS,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKurB,EAAWvrB,IAAK,CACjC,MAAMwrB,EAAiBpE,GAAS,EAAGmE,EAAWvrB,GAC9CkS,EAAOxU,KAAKqY,GAAIxL,EAAK,EAAGihB,GAC5B,CACJ,CDLIC,CAAWvZ,EAAQoZ,EAAIvrB,OAAS,GACzBmS,CACX,CEIA,SAASwZ,GAAS1lB,GAA4E,IAA3E,SAAE2lB,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAE5I,EAAO,aAAcjd,EAKxF,MAAM8lB,EAAkBhH,GAAc7B,GAChCA,EAAKS,IAAI8B,IACTA,GAA2BvC,GAK3BtkB,EAAQ,CACVotB,MAAM,EACN9zB,MAAO2zB,EAAe,IAKpBI,EC7BV,SAA8B9Z,EAAQyZ,GAClC,OAAOzZ,EAAOwR,KAAKuI,GAAMA,EAAIN,GACjC,CD2B0BO,CAGtBL,GAASA,EAAM9rB,SAAW6rB,EAAe7rB,OACnC8rB,EACAR,GAAcO,GAAiBD,GAC/BQ,EAAoBrB,GAAYkB,EAAeJ,EAAgB,CACjE3I,KAAMtf,MAAMC,QAAQkoB,GACdA,GA9BS5X,EA+BK0X,EA/BGjJ,EA+BamJ,EA9BjC5X,EAAOwP,KAAI,IAAMf,GAAUS,KAAWpL,OAAO,EAAG9D,EAAOnU,OAAS,MAD3E,IAAuBmU,EAAQyO,EAiC3B,MAAO,CACHyJ,mBAAoBT,EACpB9J,KAAO+B,IACHjlB,EAAM1G,MAAQk0B,EAAkBvI,GAChCjlB,EAAMotB,KAAOnI,GAAK+H,EACXhtB,GAGnB,CE1CA,SAAS0tB,GAAkBnK,EAAUoK,GACjC,OAAOA,EAAgBpK,GAAY,IAAOoK,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc7I,EAAGhqB,GAC5C,MAAM8yB,EAAQjiB,KAAKD,IAAIoZ,EAAI2I,GAAwB,GACnD,OAAOF,GAAkBzyB,EAAU6yB,EAAaC,GAAQ9I,EAAI8I,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAUhnB,GAA6D,IACxEinB,EACAC,GAFY,SAAEvB,EAAW,IAAG,OAAEwB,EAAS,IAAI,SAAEjL,EAAW,EAAC,KAAEkL,EAAO,GAAIpnB,EAG1Emc,GAAQwJ,GAAYtJ,GAAsBwK,IAAc,8CACxD,IAAIQ,EAAe,EAAIF,EAIvBE,EAAe/iB,EAAMwiB,GAAYC,GAAYM,GAC7C1B,EAAWrhB,EAAMsiB,GAAaC,GAAatK,GAAsBoJ,IAC7D0B,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClCxU,EAAQ0U,EAAmB5B,EAC3BvqB,EAAImsB,EAAmBrL,EACvB7gB,EAAImsB,GAAgBF,EAAcD,GAClChrB,EAAIoI,KAAKgjB,KAAK5U,GACpB,OAAO8T,GAAWvrB,EAAIC,EAAKgB,CAAC,EAEhC6qB,EAAcI,IACV,MACMzU,EADmByU,EAAeD,EACP1B,EAC3B7pB,EAAI+W,EAAQqJ,EAAWA,EACvB5nB,EAAImQ,KAAK8a,IAAI8H,EAAc,GAAK5iB,KAAK8a,IAAI+H,EAAc,GAAK3B,EAC5D5pB,EAAI0I,KAAKgjB,KAAK5U,GACdvW,EAAIkrB,GAAgB/iB,KAAK8a,IAAI+H,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzC7qB,EAAIxH,GAAKyH,GAAMO,CAAC,IAOvC2qB,EAAYK,GACE7iB,KAAKgjB,KAAKH,EAAe3B,KACxB2B,EAAepL,GAAYyJ,EAAW,GACzCgB,GAEZO,EAAcI,GACA7iB,KAAKgjB,KAAKH,EAAe3B,IACIA,EAAWA,GAAvCzJ,EAAWoL,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYQ,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI1tB,EAAI,EAAGA,EAAI4tB,GAAgB5tB,IAChC2tB,GAAkBV,EAASU,GAAUT,EAAWS,GAEpD,OAAOA,CACX,CAzByBE,CAAgBZ,EAAUC,EAD1B,EAAIvB,GAGzB,GADAA,EAAWtJ,GAAsBsJ,GAC7BpC,MAAM+D,GACN,MAAO,CACHQ,UAAW,IACXC,QAAS,GACTpC,YAGH,CACD,MAAMmC,EAAYrjB,KAAK8a,IAAI+H,EAAc,GAAKF,EAC9C,MAAO,CACHU,YACAC,QAAwB,EAAfV,EAAmB5iB,KAAKgd,KAAK2F,EAAOU,GAC7CnC,WAER,CACJ,CACA,MAAMiC,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAe7iB,KAAKgd,KAAK,EAAI4F,EAAeA,EACvD,CClFA,MAAMW,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAalzB,EAASU,GAC3B,OAAOA,EAAKyI,MAAMxI,QAAyBlE,IAAjBuD,EAAQW,IACtC,CAwBA,SAASwyB,GAAMnoB,GAAkD,IAAjD,UAAE0lB,EAAS,UAAE0C,EAAS,UAAEC,KAAcrzB,GAASgL,EAC3D,MAAMiM,EAASyZ,EAAU,GACnBpzB,EAASozB,EAAUA,EAAU3rB,OAAS,GAKtCpB,EAAQ,CAAEotB,MAAM,EAAO9zB,MAAOga,IAC9B,UAAE6b,EAAS,QAAEC,EAAO,KAAEX,EAAI,SAAElL,EAAQ,SAAEyJ,EAAQ,uBAAE2C,GA/B1D,SAA0BtzB,GACtB,IAAIuzB,EAAgB,CAChBrM,SAAU,EACV4L,UAAW,IACXC,QAAS,GACTX,KAAM,EACNkB,wBAAwB,KACrBtzB,GAGP,IAAKkzB,GAAalzB,EAASizB,KACvBC,GAAalzB,EAASgzB,IAAe,CACrC,MAAMQ,EAAUxB,GAAWhyB,GAC3BuzB,EAAgB,IACTA,KACAC,EACHtM,SAAU,EACVkL,KAAM,GAEVmB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiBzzB,GAC7F0zB,EAAkBxM,GAAYK,GAAsBL,GAAY,EAChEmL,EAAeU,GAAW,EAAItjB,KAAKgd,KAAKqG,EAAYV,IACpDuB,EAAer2B,EAAS2Z,EACxB2c,EAAsBrM,GAAsB9X,KAAKgd,KAAKqG,EAAYV,IAQlEyB,EAAkBpkB,KAAKma,IAAI+J,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDxB,EAAe,EAAG,CAClB,MAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDyB,EAAiBlL,IACb,MAAMqJ,EAAWxiB,KAAKgjB,KAAKJ,EAAeuB,EAAsBhL,GAChE,OAAQtrB,EACJ20B,IACOyB,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAtkB,KAAKwa,IAAI8J,EAAcnL,GACvB+K,EAAelkB,KAAKukB,IAAID,EAAcnL,GAAG,CAE7D,MACK,GAAqB,IAAjByJ,EAELyB,EAAiBlL,GAAMtrB,EACnBmS,KAAKgjB,KAAKmB,EAAsBhL,IAC3B+K,GACID,EAAkBE,EAAsBD,GAAgB/K,OAEpE,CAED,MAAMqL,EAAoBL,EAAsBnkB,KAAKgd,KAAK4F,EAAeA,EAAe,GACxFyB,EAAiBlL,IACb,MAAMqJ,EAAWxiB,KAAKgjB,KAAKJ,EAAeuB,EAAsBhL,GAE1DsL,EAAWzkB,KAAKF,IAAI0kB,EAAoBrL,EAAG,KACjD,OAAQtrB,EACH20B,IACKyB,EACErB,EAAeuB,EAAsBD,GACrClkB,KAAK0kB,KAAKD,GACVD,EACIN,EACAlkB,KAAK2kB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAO,CACH7C,mBAAoBkC,GAAyB3C,GAAmB,KAChE9J,KAAO+B,IACH,MAAMhqB,EAAUk1B,EAAclL,GAC9B,GAAK0K,EAqBD3vB,EAAMotB,KAAOnI,GAAK+H,MArBO,CACzB,IAAI/V,EAAkB8Y,EACZ,IAAN9K,IAOIhO,EADAyX,EAAe,EACGb,GAAsBsC,EAAelL,EAAGhqB,GAGxC,GAG1B,MAAMy1B,EAA2B5kB,KAAKma,IAAIhP,IAAoByY,EACxDiB,EAA+B7kB,KAAKma,IAAItsB,EAASsB,IAAYw0B,EACnEzvB,EAAMotB,KACFsD,GAA4BC,CACpC,CAKA,OADA3wB,EAAM1G,MAAQ0G,EAAMotB,KAAOzzB,EAASsB,EAC7B+E,CAAK,EAGxB,CC3HA,SAAS4wB,GAAOvpB,GAAiK,IAAhK,UAAE0lB,EAAS,SAAExJ,EAAW,EAAG,MAAEsN,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAErlB,EAAG,IAAEC,EAAG,UAAE4jB,EAAY,GAAG,UAAEC,GAAYroB,EAC3K,MAAMiM,EAASyZ,EAAU,GACnB/sB,EAAQ,CACVotB,MAAM,EACN9zB,MAAOga,GAGL4d,EAAmB/4B,QACTW,IAAR8S,EACOC,OACC/S,IAAR+S,GAEGC,KAAKma,IAAIra,EAAMzT,GAAK2T,KAAKma,IAAIpa,EAAM1T,GAD/ByT,EAC0CC,EAEzD,IAAIslB,EAAYN,EAAQtN,EACxB,MAAM6N,EAAQ9d,EAAS6d,EACjBx3B,OAA0Bb,IAAjBm4B,EAA6BG,EAAQH,EAAaG,GAK7Dz3B,IAAWy3B,IACXD,EAAYx3B,EAAS2Z,GACzB,MAAM+d,EAAapM,IAAOkM,EAAYrlB,KAAKgjB,KAAK7J,EAAI6L,GAC9CQ,EAAcrM,GAAMtrB,EAAS03B,EAAUpM,GACvCsM,EAAiBtM,IACnB,MAAM/K,EAAQmX,EAAUpM,GAClB9Q,EAASmd,EAAWrM,GAC1BjlB,EAAMotB,KAAOthB,KAAKma,IAAI/L,IAAUuV,EAChCzvB,EAAM1G,MAAQ0G,EAAMotB,KAAOzzB,EAASwa,CAAM,EAQ9C,IAAIqd,EACAC,EACJ,MAAMC,EAAsBzM,IAjCL9sB,SAkCA6H,EAAM1G,WAlCSR,IAAR8S,GAAqBzT,EAAIyT,QAAiB9S,IAAR+S,GAAqB1T,EAAI0T,KAoCrF2lB,EAAsBvM,EACtBwM,EAAWjC,GAAO,CACdzC,UAAW,CAAC/sB,EAAM1G,MAAO43B,EAAgBlxB,EAAM1G,QAC/CiqB,SAAUsK,GAAsByD,EAAYrM,EAAGjlB,EAAM1G,OACrD81B,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACF,EAGN,OADAgC,EAAmB,GACZ,CACHjE,mBAAoB,KACpBvK,KAAO+B,IAOH,IAAI0M,GAAkB,EAUtB,OATKF,QAAoC34B,IAAxB04B,IACbG,GAAkB,EAClBJ,EAActM,GACdyM,EAAmBzM,SAMKnsB,IAAxB04B,GAAqCvM,EAAIuM,EAClCC,EAASvO,KAAK+B,EAAIuM,KAGxBG,GAAmBJ,EAActM,GAC3BjlB,EACX,EAGZ,CClFA,MAAM4xB,GAAmB/oB,IACrB,MAAMgpB,EAAgBxqB,IAAA,IAAC,UAAE8S,GAAW9S,EAAA,OAAKwB,EAAOsR,EAAU,EAC1D,MAAO,CACHhV,MAAOA,IAAMsU,GAAM5Q,OAAOgpB,GAAe,GACzCC,KAAMA,IAAMnY,GAAYkY,GAKxB94B,IAAKA,IAAM6gB,GAAUQ,aAAeR,GAAUO,UAAYiB,YAAYriB,MACzE,ECRCg5B,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIjF,EAAW,EAEf,IAAIhtB,EAAQiyB,EAAU/O,KAAK8J,GAC3B,MAAQhtB,EAAMotB,MAAQJ,EAAW+E,IAC7B/E,GAHa,GAIbhtB,EAAQiyB,EAAU/O,KAAK8J,GAE3B,OAAOA,GAAY+E,GAAuBG,IAAWlF,CACzD,CCLA,MAAMmF,GAAQ,CACVC,MAAOxB,GACPA,QAAO,GACPyB,MAAOtF,GACPA,UAAWA,GACXyC,OAAMA,IASV,SAAS8C,GAAYjrB,GAA2M,IAGxNkrB,EACAC,GAJc,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASf,GAAiB7E,UAAW6F,EAAW,KAAEv1B,EAAO,YAAW,OAAEw1B,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAa92B,GAASgL,EACtN+rB,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAM90B,IAAS0vB,GAMxC,IAAI4G,EACAD,IAAqB3G,IACK,kBAAnB6F,EAAY,KACnBe,EAAwBxH,GAAY,CAAC,EAAG,KAAMyG,EAAa,CACvDjnB,OAAO,IAEXinB,EAAc,CAAC,EAAG,MAEtB,MAAMX,EAAYyB,EAAiB,IAAKr3B,EAAS0wB,UAAW6F,IAC5D,IAAIgB,EACe,WAAfb,IACAa,EAAoBF,EAAiB,IAC9Br3B,EACH0wB,UAAW,IAAI6F,GAAarG,UAC5BhJ,WAAYlnB,EAAQknB,UAAY,MAGxC,IAAIsQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUxE,oBAA+BoF,IACzCZ,EAAUxE,mBAAqBuE,GAAsBC,IAEzD,MAAM,mBAAExE,GAAuBwE,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvBzE,IACAwG,EAAmBxG,EAAqBqF,EACxCoB,EAAgBD,GAAoBpB,EAAS,GAAKC,GAEtD,IAAIqB,EAAc,EAClB,MAAMC,EAAQja,IACV,GAAkB,OAAd4Z,EACA,OAOAX,EAAQ,IACRW,EAAYjoB,KAAKF,IAAImoB,EAAW5Z,IAChCiZ,EAAQ,IACRW,EAAYjoB,KAAKF,IAAIuO,EAAY+Z,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMAhoB,KAAKQ,MAAM6N,EAAY4Z,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAczB,GAASU,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAcroB,KAAKD,IAAIwoB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIY,EAAQ,CAMR,MAAMpK,EAAW0L,EAAcF,EAK/B,IAAIQ,EAAmB3oB,KAAK4oB,MAAMjM,GAK9BkM,EAAoBlM,EAAW,GAK9BkM,GAAqBlM,GAAY,IAClCkM,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB3oB,KAAKF,IAAI6oB,EAAkB5B,EAAS,GAIvD,MAAM+B,EAAiBlvB,QAAQ+uB,EAAmB,GAC9CG,IACmB,YAAf7B,GACA4B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAflB,IACLyB,EAAiBZ,IAGzB,IAAI5wB,EAAI2I,EAAM,EAAG,EAAGgpB,GAChBR,EAAcD,IACdlxB,EAAmB,YAAf+vB,GAA4B6B,EAAiB,EAAI,GAEzDL,EAAUvxB,EAAIixB,CAClB,CAMA,MAAMj0B,EAAQs0B,EACR,CAAElH,MAAM,EAAO9zB,MAAOs5B,EAAY,IAClC4B,EAAetR,KAAKqR,GACtBZ,IACA3zB,EAAM1G,MAAQq6B,EAAsB3zB,EAAM1G,QAE9C,IAAI,KAAE8zB,GAASptB,EACVs0B,GAAyC,OAAvB7G,IACnBL,EAAOgG,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMU,EAAmC,OAAbf,IACT,aAAdD,GAA2C,YAAdA,GAA2BzG,GAO7D,OANI+F,GACAA,EAASnzB,EAAM1G,OAEfu7B,GACAC,IAEG90B,CAAK,EAEV+0B,EAAsBA,KACxBtB,GAAmBA,EAAgB3B,OACnC2B,OAAkB36B,CAAS,EAEzB4gB,EAASA,KACXma,EAAY,OACZkB,IACAxC,IACAe,IACAS,EAAYC,EAAa,IAAI,EAE3Bc,EAASA,KACXjB,EAAY,WACZX,GAAcA,IACd6B,IACAxC,GAAwB,EAEtByC,EAAOA,KACT,GAAI3B,EACA,OACCI,IACDA,EAAkBd,EAAOyB,IAC7B,MAAMr7B,EAAM06B,EAAgB16B,MAC5Bi6B,GAAUA,IACO,OAAbc,EACAC,EAAYh7B,EAAM+6B,EAEZC,GAA2B,aAAdF,IACnBE,EAAYh7B,GAEE,aAAd86B,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBtuB,OAAO,EAEvBstB,GACAuC,IAEJ,MAAMC,EAAW,CACbC,KAAIA,CAAC1B,EAAS2B,IACH3C,EAAuB0C,KAAK1B,EAAS2B,GAEhD,QAAIC,GACA,OAAOxR,GAAsBuQ,EACjC,EACA,QAAIiB,CAAKC,GACLA,EAAU3R,GAAsB2R,GAChClB,EAAckB,EACG,OAAbvB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgB16B,MAAQs8B,EAAUjC,EAH9CU,EAAWuB,CAKnB,EACA,YAAIrI,GACA,MAAMA,EAA4C,OAAjCiF,EAAUxE,mBACrBuE,GAAsBC,GACtBA,EAAUxE,mBAChB,OAAO7J,GAAsBoJ,EACjC,EACA,SAAIoG,GACA,OAAOA,CACX,EACA,SAAIA,CAAMkC,GACFA,IAAalC,GAAUK,IAE3BL,EAAQkC,EACRL,EAASG,KAAOxR,GAAsBuQ,GAC1C,EACA,SAAIn0B,GACA,OAAO6zB,CACX,EACAmB,OACAO,MAAOA,KACH1B,EAAY,SACZC,EAAWK,CAAW,EAE1BrC,KAAMA,KACFuB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZZ,GAAUA,IACVvZ,IAAQ,EAEZA,OAAQA,KACe,OAAfsa,GACAI,EAAKJ,GACTta,GAAQ,EAEZ8b,SAAUA,KACN3B,EAAY,UAAU,EAE1B4B,OAASlB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOU,CACX,CCnSA,MAAMS,GCTN,SAAcz9B,GACV,IAAI+2B,EACJ,MAAO,UACYl2B,IAAXk2B,IACAA,EAAS/2B,KACN+2B,EAEf,CDEsB9yB,EAAK,IAAM1D,OAAO8I,eAAe9C,KAAKm3B,QAAQl0B,UAAW,aAIzEm0B,GAAoB,IAAI/qB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASgrB,GAA2Bv8B,EAAOw8B,EAASzuB,GAAwC,IAAtC,SAAE8rB,EAAQ,WAAED,KAAe72B,GAASgL,EAOtF,KAN+BquB,MAC3BE,GAAkBvrB,IAAIyrB,KACrBz5B,EAAQy2B,aACc,WAAvBz2B,EAAQ02B,YACY,IAApB12B,EAAQ+yB,SACS,YAAjB/yB,EAAQgB,MAER,OAAO,EAIX,IACIk1B,EACAC,EAFAa,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAGNF,IACA,IAAI,UAAEvG,EAAS,SAAEC,EAAW,IAAG,KAAE1I,EAAI,MAAE4I,GAAU7wB,EAIjD,GAjCkC05B,EAACD,EAAWz5B,IAA6B,WAAjBA,EAAQgB,MACpD,oBAAdy4B,IACC7R,GAAuB5nB,EAAQioB,MA+B5ByR,CAA8BD,EAAWz5B,GAAU,CACnD,MAAM25B,EAAkB1D,GAAa,IAC9Bj2B,EACHw2B,OAAQ,EACRH,MAAO,IAEX,IAAI1yB,EAAQ,CAAEotB,MAAM,EAAO9zB,MAAOyzB,EAAU,IAC5C,MAAMkJ,EAAwB,GAK9B,IAAIhR,EAAI,EACR,MAAQjlB,EAAMotB,MAAQnI,EA/CV,KAgDRjlB,EAAQg2B,EAAgBP,OAAOxQ,GAC/BgR,EAAsBl3B,KAAKiB,EAAM1G,OACjC2rB,GAvDQ,GAyDZiI,OAAQp0B,EACRi0B,EAAYkJ,EACZjJ,EAAW/H,EA3DC,GA4DZX,EAAO,QACX,CACA,MAAMhe,EErFV,SAAsBuP,EAASigB,EAAW/I,GAAwF,IAA7E,MAAE2F,EAAQ,EAAC,SAAE1F,EAAQ,OAAE6F,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEzO,EAAI,MAAE4I,GAAQlrB,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAMk0B,EAAkB,CAAE,CAACJ,GAAY/I,GACnCG,IACAgJ,EAAgB3iB,OAAS2Z,GAC7B,MAAMlJ,EAASc,GAAwBR,GAMvC,OAFItf,MAAMC,QAAQ+e,KACdkS,EAAgBlS,OAASA,GACtBnO,EAAQtQ,QAAQ2wB,EAAiB,CACpCxD,QACA1F,WACAhJ,OAAShf,MAAMC,QAAQ+e,GAAmB,SAATA,EACjCmS,KAAM,OACNC,WAAYvD,EAAS,EACrBwD,UAA0B,YAAftD,EAA2B,YAAc,UAE5D,CFmEsBuD,CAAah9B,EAAMi9B,MAAMt7B,QAAS66B,EAAW/I,EAAW,IACnE1wB,EACH2wB,WASA1I,KAAMA,EACN4I,UAEEsJ,EAAkBA,IAAMlwB,EAAUoT,SAClC+c,EAAaA,KACfhd,GAAM5Q,OAAO2tB,GACbjE,IACAe,GAAuB,EAU3BhtB,EAAUowB,SAAW,KACjBp9B,EAAMO,IGpHd,SAA0BkzB,EAAS1lB,GAAmC,IAAjC,OAAEwrB,EAAM,WAAEE,EAAa,QAAQ1rB,EAIhE,OAAO0lB,EAHO8F,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACA9F,EAAU3rB,OAAS,EAE7B,CH+GkBu1B,CAAiB5J,EAAW1wB,IACtC62B,GAAcA,IACduD,GAAY,EAgEhB,MA3DiB,CACbvB,KAAIA,CAAC1B,EAAS2B,IACH3C,EAAuB0C,KAAK1B,EAAS2B,GAEhDyB,eAAeC,IACXvwB,EAAUuwB,SAAWA,EACrBvwB,EAAUowB,SAAW,KACd9d,IAEX,QAAIwc,GACA,OAAOxR,GAAsBtd,EAAU6tB,aAAe,EAC1D,EACA,QAAIiB,CAAKC,GACL/uB,EAAU6tB,YAAczQ,GAAsB2R,EAClD,EACA,SAAIjC,GACA,OAAO9sB,EAAUwwB,YACrB,EACA,SAAI1D,CAAMkC,GACNhvB,EAAUwwB,aAAexB,CAC7B,EACA,YAAItI,GACA,OAAOpJ,GAAsBoJ,EACjC,EACAgI,KAAMA,KACE3B,IAEJ/sB,EAAU0uB,OAIVrb,GAAY6c,GAAgB,EAEhCjB,MAAOA,IAAMjvB,EAAUivB,QACvBzD,KAAMA,KAEF,GADAuB,GAAa,EACe,SAAxB/sB,EAAUutB,UACV,OASJ,MAAM,YAAEM,GAAgB7tB,EACxB,GAAI6tB,EAAa,CACb,MAAM6B,EAAkB1D,GAAa,IAC9Bj2B,EACHo2B,UAAU,IAEdn5B,EAAMy9B,gBAAgBf,EAAgBP,OAAOtB,EAtJzC,IAsJoE76B,MAAO08B,EAAgBP,OAAOtB,GAAa76B,MAtJ/G,GAuJR,CACAm9B,GAAY,EAEhBjB,SAAUA,IAAMlvB,EAAUwuB,SAC1Bpb,OAAQ+c,EAGhB,CIrLA,MAAMO,GAAoB,CACtB35B,KAAM,SACN8xB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTuH,GAAsB,CACxB55B,KAAM,YACN2vB,SAAU,IAMR1I,GAAO,CACTjnB,KAAM,YACNinB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB0I,SAAU,IAERkK,GAAuBA,CAACC,EAAQ9vB,KAAoB,IAAlB,UAAE0lB,GAAW1lB,EACjD,OAAI0lB,EAAU3rB,OAAS,EACZ61B,GAEFrsB,EAAeP,IAAI8sB,GACjBA,EAASpsB,WAAW,SAxBG,CAClC1N,KAAM,SACN8xB,UAAW,IACXC,QAAoB,IAsBarC,EAAU,GAtBnB,EAAIjhB,KAAKgd,KAAK,KAAO,GAC7C4G,UAAW,IAsBDsH,GAEH1S,EAAI,ECzBT8S,GAAeA,CAACp6B,EAAK1D,IAEX,WAAR0D,MAKiB,kBAAV1D,IAAsB0L,MAAMC,QAAQ3L,OAE1B,kBAAVA,IACNoxB,GAAQjgB,KAAKnR,IAAoB,MAAVA,GACvBA,EAAMyR,WAAW,UChBpBssB,GAAc,IAAIxsB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASysB,GAAmBn/B,GACxB,MAAOqC,EAAMlB,GAASnB,EAAEo/B,MAAM,GAAI,GAAGn1B,MAAM,KAC3C,GAAa,gBAAT5H,EACA,OAAOrC,EACX,MAAO4T,GAAUzS,EAAMkuB,MAAMjb,IAAe,GAC5C,IAAKR,EACD,OAAO5T,EACX,MAAMyU,EAAOtT,EAAMqL,QAAQoH,EAAQ,IACnC,IAAIyrB,EAAeH,GAAYhtB,IAAI7P,GAAQ,EAAI,EAG/C,OAFIuR,IAAWzS,IACXk+B,GAAgB,KACbh9B,EAAO,IAAMg9B,EAAe5qB,EAAO,GAC9C,CACA,MAAM6qB,GAAgB,oBAChBC,GAAS,IACRhN,GACHG,kBAAoB1yB,IAChB,MAAMw/B,EAAYx/B,EAAEqvB,MAAMiQ,IAC1B,OAAOE,EAAYA,EAAU5S,IAAIuS,IAAoBlxB,KAAK,KAAOjO,CAAC,GClBpEy/B,GAAoB,IACnBtqB,GAEHgb,MAAK,GACLuP,gBAAiBvP,GACjBwP,aAAcxP,GACd6N,KAAM7N,GACNyP,OAAQzP,GAER0P,YAAa1P,GACb2P,eAAgB3P,GAChB4P,iBAAkB5P,GAClB6P,kBAAmB7P,GACnB8P,gBAAiB9P,GACjBoP,OAAM,GACNW,aAAcX,IAKZY,GAAuBt7B,GAAQ46B,GAAkB56B,GCvBvD,SAAS6tB,GAAkB7tB,EAAK1D,GAC5B,IAAIi/B,EAAmBD,GAAoBt7B,GAI3C,OAHIu7B,IAAqBb,KACrBa,EAAmB7N,IAEhB6N,EAAiB1N,kBAClB0N,EAAiB1N,kBAAkBvxB,QACnCR,CACV,CCTA,MAAM0/B,GAAqBrgC,GAAM,aAAasS,KAAKtS,GCDnD,SAASsgC,GAAOn/B,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBk/B,GAAkBl/B,QAD7D,CAGT,CCDA,SAASo/B,GAAmBhgB,EAAY1b,GACpC,OAAO0b,EAAW1b,IAAQ0b,EAAoB,SAAKA,CACvD,CCCA,MAAMigB,GAAqB,SAAC7C,EAAWx8B,EAAOK,GAA4B,IAApB+e,EAAU1W,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQkxB,IACJ,MAAM0F,EAAkBF,GAAmBhgB,EAAYod,IAAc,CAAC,EAMhEpD,EAAQkG,EAAgBlG,OAASha,EAAWga,OAAS,EAK3D,IAAI,QAAE6B,EAAU,GAAM7b,EACtB6b,GAAoB7Q,GAAsBgP,GAC1C,MAAM3F,ECtBd,SAAsBzzB,EAAOw8B,EAAWn8B,EAAQ+e,GAC5C,MAAMmgB,EAAqBzB,GAAatB,EAAWn8B,GACnD,IAAIozB,EAEAA,EADA/nB,MAAMC,QAAQtL,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMm/B,OAAoChgC,IAApB4f,EAAW6P,KAAqB7P,EAAW6P,KAAOjvB,EAAMgG,MAC9E,IAAIy5B,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAI33B,EAAI,EAAGA,EAAI0rB,EAAU3rB,OAAQC,IAIb,OAAjB0rB,EAAU1rB,KACV0rB,EAAU1rB,GAAW,IAANA,EAAUy3B,EAAgB/L,EAAU1rB,EAAI,IAEvDo3B,GAAO1L,EAAU1rB,KACjB23B,EAAoBj6B,KAAKsC,GAGD,kBAAjB0rB,EAAU1rB,IACA,SAAjB0rB,EAAU1rB,IACO,MAAjB0rB,EAAU1rB,KACV03B,EAA0BhM,EAAU1rB,IAG5C,GAAIw3B,GACAG,EAAoB53B,QACpB23B,EACA,IAAK,IAAI13B,EAAI,EAAGA,EAAI23B,EAAoB53B,OAAQC,IAE5C0rB,EADciM,EAAoB33B,IACfwpB,GAAkBiL,EAAWiD,GAGxD,OAAOhM,CACX,CDhB0BkM,CAAa3/B,EAAOw8B,EAAWn8B,EAAQi/B,GAMnDM,EAAiBnM,EAAU,GAC3BoM,EAAiBpM,EAAUA,EAAU3rB,OAAS,GAC9Cg4B,EAAqBhC,GAAatB,EAAWoD,GAC7CL,EAAqBzB,GAAatB,EAAWqD,GACnD3V,GAAQ4V,IAAuBP,EAAoB,6BAAF/rB,OAA+BgpB,EAAS,WAAAhpB,OAAUosB,EAAc,UAAApsB,OAASqsB,EAAc,OAAArsB,OAAMosB,EAAc,+DAAApsB,OAA8DosB,EAAc,8BAAApsB,OAA6BqsB,EAAc,+BACnR,IAAI98B,EAAU,CACV0wB,YACAxJ,SAAUjqB,EAAM2R,cAChBqZ,KAAM,aACHsU,EACHlG,OAAQ6B,EACRpB,SAAWh7B,IACPmB,EAAMO,IAAI1B,GACVygC,EAAgBzF,UAAYyF,EAAgBzF,SAASh7B,EAAE,EAE3D+6B,WAAYA,KACRA,IACA0F,EAAgB1F,YAAc0F,EAAgB1F,YAAY,GAwBlE,GDpER,SAA4B7rB,GAA2I,IAA1I,KAAEgyB,EAAM3G,MAAO4G,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE5G,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAEvK,EAAI,QAAEgM,KAAY7b,GAAYrR,EACjK,QAAS7O,OAAOuE,KAAK2b,GAAYtX,MACrC,CCiDas4B,CAAoBd,KACrBv8B,EAAU,IACHA,KACA66B,GAAqBpB,EAAWz5B,KAQvCA,EAAQ2wB,WACR3wB,EAAQ2wB,SAAWtJ,GAAsBrnB,EAAQ2wB,WAEjD3wB,EAAQy2B,cACRz2B,EAAQy2B,YAAcpP,GAAsBrnB,EAAQy2B,eAEnDsG,IACAP,GACD/U,KACyB,IAAzB8U,EAAgBv7B,KAKhB,OE9EZ,SAA+BgK,GAA8C,IAA7C,UAAE0lB,EAAS,MAAE2F,EAAK,SAAES,EAAQ,WAAED,GAAa7rB,EACvE,MAAMsyB,EAAWA,KACbxG,GAAYA,EAASpG,EAAUA,EAAU3rB,OAAS,IAClD8xB,GAAcA,IAQP,CACHkC,KAAM,EACNhC,MAAO,EACPpG,SAAU,EACVgI,KAAOpc,GACP2c,MAAQ3c,GACRkZ,KAAOlZ,GACPsc,KAAO1B,IACHA,IACOD,QAAQC,WAEnB9Z,OAASd,GACT4c,SAAW5c,KAGnB,OAAO8Z,EACDJ,GAAa,CACXvF,UAAW,CAAC,EAAG,GACfC,SAAU,EACV0F,QACAQ,WAAYyG,IAEdA,GACV,CF4CmBC,CAAuB9V,GACxB,IAAKznB,EAASq2B,MAAO,GACrBr2B,GAKV,IAMCqc,EAAWmhB,WACRvgC,EAAMi9B,OACNj9B,EAAMi9B,MAAMt7B,mBAAmB6+B,cAK9BxgC,EAAMi9B,MAAMjY,WAAW6U,SAAU,CAClC,MAAM4G,EAAuBlE,GAA2Bv8B,EAAOw8B,EAAWz5B,GAC1E,GAAI09B,EACA,OAAOA,CACf,CAIA,OAAOzH,GAAaj2B,EAAQ,CAEpC,EG7GA,SAAS29B,GAAwB1gC,GAC7B,OAAOoM,QAAQsF,EAAc1R,IAAUA,EAAM2f,IACjD,CCDA,MAAMghB,GAAqB9hC,GAAM,iBAAiBsS,KAAKtS,GCHvD,SAAS+hC,GAAcvN,EAAKwN,IACG,IAAvBxN,EAAI7tB,QAAQq7B,IACZxN,EAAI5tB,KAAKo7B,EACjB,CACA,SAASC,GAAWzN,EAAKwN,GACrB,MAAM/gB,EAAQuT,EAAI7tB,QAAQq7B,GACtB/gB,GAAS,GACTuT,EAAItT,OAAOD,EAAO,EAC1B,CCNA,MAAMihB,GACFt6B,WAAAA,GACInG,KAAK0gC,cAAgB,EACzB,CACArhB,GAAAA,CAAIgD,GAEA,OADAie,GAActgC,KAAK0gC,cAAere,GAC3B,IAAMme,GAAWxgC,KAAK0gC,cAAere,EAChD,CACAse,MAAAA,CAAO93B,EAAGC,EAAGgB,GACT,MAAM82B,EAAmB5gC,KAAK0gC,cAAcl5B,OAC5C,GAAKo5B,EAEL,GAAyB,IAArBA,EAIA5gC,KAAK0gC,cAAc,GAAG73B,EAAGC,EAAGgB,QAG5B,IAAK,IAAIrC,EAAI,EAAGA,EAAIm5B,EAAkBn5B,IAAK,CAKvC,MAAM4a,EAAUriB,KAAK0gC,cAAcj5B,GACnC4a,GAAWA,EAAQxZ,EAAGC,EAAGgB,EAC7B,CAER,CACA+2B,OAAAA,GACI,OAAO7gC,KAAK0gC,cAAcl5B,MAC9B,CACAkY,KAAAA,GACI1f,KAAK0gC,cAAcl5B,OAAS,CAChC,EC/BJ,MAGMs5B,GAAsB,CACxBz/B,aAASnC,GAOb,MAAM6hC,GASF56B,WAAAA,CAAYiY,GAAoB,IAAApf,EAAA,SAAdyD,EAAO2F,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhB1I,MAyBTM,KAAKghC,QAAU,WAMfhhC,KAAKihC,UAAY,EAMjBjhC,KAAKkhC,YAAc,EAQnBlhC,KAAKmhC,kBAAmB,EAIxBnhC,KAAKohC,OAAS,CAAC,EACfphC,KAAKqhC,gBAAkB,SAAC9iC,GAAqB,IAAlB0C,IAAMmH,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GAC7BpJ,EAAKuqB,KAAOvqB,EAAKqC,QACjBrC,EAAKqC,QAAU9C,EAEf,MAAM,MAAE+hB,EAAK,UAAEC,GAAcP,GACzBhhB,EAAKkiC,cAAgB3gB,IACrBvhB,EAAKiiC,UAAY3gB,EACjBthB,EAAKkiC,YAAc3gB,EACnBV,GAAMyhB,WAAWtiC,EAAKuiC,wBAGtBviC,EAAKuqB,OAASvqB,EAAKqC,SAAWrC,EAAKoiC,OAAOI,QAC1CxiC,EAAKoiC,OAAOI,OAAOb,OAAO3hC,EAAKqC,SAG/BrC,EAAKoiC,OAAOK,gBACZziC,EAAKoiC,OAAOK,eAAed,OAAO3hC,EAAKqS,eAGvCpQ,GAAUjC,EAAKoiC,OAAOM,eACtB1iC,EAAKoiC,OAAOM,cAAcf,OAAO3hC,EAAKqC,QAE9C,EASArB,KAAKuhC,sBAAwB,IAAM1hB,GAAMyhB,WAAWthC,KAAK2hC,eAUzD3hC,KAAK2hC,cAAgBl0B,IAAmB,IAAlB,UAAE8S,GAAW9S,EAC3B8S,IAAcvgB,KAAKkhC,cACnBlhC,KAAKupB,KAAOvpB,KAAKqB,QACbrB,KAAKohC,OAAOK,gBACZzhC,KAAKohC,OAAOK,eAAed,OAAO3gC,KAAKqR,eAE/C,EAEJrR,KAAK4hC,aAAc,EACnB5hC,KAAKupB,KAAOvpB,KAAKqB,QAAU+c,EAC3Bpe,KAAKmhC,kBArGIzhC,EAqGuBM,KAAKqB,SApGjC2vB,MAAM3e,WAAW3S,KAqGrBM,KAAK28B,MAAQl6B,EAAQk6B,KACzB,CAyCAkF,QAAAA,CAASC,GAIL,OAAO9hC,KAAK+hC,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAG3f,EAAW/jB,GACL2B,KAAKohC,OAAOhf,KACbpiB,KAAKohC,OAAOhf,GAAa,IAAIqe,IAEjC,MAAMuB,EAAchiC,KAAKohC,OAAOhf,GAAW/C,IAAIhhB,GAC/C,MAAkB,WAAd+jB,EACO,KACH4f,IAKAniB,GAAMiC,MAAK,KACF9hB,KAAKohC,OAAOI,OAAOX,WACpB7gC,KAAKk4B,MACT,GACF,EAGH8J,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBliC,KAAKohC,OAC7BphC,KAAKohC,OAAOc,GAAexiB,OAEnC,CAMAyiB,MAAAA,CAAOC,EAAeC,GAClBriC,KAAKoiC,cAAgBA,EACrBpiC,KAAKqiC,kBAAoBA,CAC7B,CAgBApiC,GAAAA,CAAI1B,GAAkB,IAAf0C,IAAMmH,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GACJnH,GAAWjB,KAAKoiC,cAIjBpiC,KAAKoiC,cAAc7jC,EAAGyB,KAAKqhC,iBAH3BrhC,KAAKqhC,gBAAgB9iC,EAAG0C,EAKhC,CACAk8B,eAAAA,CAAgB5T,EAAMloB,EAASif,GAC3BtgB,KAAKC,IAAIoB,GACTrB,KAAKupB,KAAOA,EACZvpB,KAAKihC,UAAY3gB,CACrB,CAKAgiB,IAAAA,CAAK/jC,GACDyB,KAAKqhC,gBAAgB9iC,GACrByB,KAAKupB,KAAOhrB,EACZyB,KAAKk4B,OACDl4B,KAAKqiC,mBACLriC,KAAKqiC,mBACb,CAQA38B,GAAAA,GAII,OAHIo7B,GAAoBz/B,SACpBy/B,GAAoBz/B,QAAQ8D,KAAKnF,MAE9BA,KAAKqB,OAChB,CAIAkhC,WAAAA,GACI,OAAOviC,KAAKupB,IAChB,CAQAlY,WAAAA,GAEI,OAAOrR,KAAKmhC,iBAEJrN,GAAkBzhB,WAAWrS,KAAKqB,SAC9BgR,WAAWrS,KAAKupB,MAAOvpB,KAAKihC,WAClC,CACV,CAaA11B,KAAAA,CAAMi3B,GAEF,OADAxiC,KAAKk4B,OACE,IAAIyB,SAASC,IAChB55B,KAAK4hC,aAAc,EACnB5hC,KAAK0M,UAAY81B,EAAe5I,GAC5B55B,KAAKohC,OAAOqB,gBACZziC,KAAKohC,OAAOqB,eAAe9B,QAC/B,IACDrF,MAAK,KACAt7B,KAAKohC,OAAOsB,mBACZ1iC,KAAKohC,OAAOsB,kBAAkB/B,SAElC3gC,KAAK2iC,gBAAgB,GAE7B,CAMAzK,IAAAA,GACQl4B,KAAK0M,YACL1M,KAAK0M,UAAUwrB,OACXl4B,KAAKohC,OAAOwB,iBACZ5iC,KAAKohC,OAAOwB,gBAAgBjC,UAGpC3gC,KAAK2iC,gBACT,CAMAE,WAAAA,GACI,QAAS7iC,KAAK0M,SAClB,CACAi2B,cAAAA,UACW3iC,KAAK0M,SAChB,CAUAo2B,OAAAA,GACI9iC,KAAKiiC,iBACLjiC,KAAKk4B,OACDl4B,KAAKqiC,mBACLriC,KAAKqiC,mBAEb,EAEJ,SAASU,GAAY3kB,EAAM3b,GACvB,OAAO,IAAIs+B,GAAY3iB,EAAM3b,EACjC,CC3UA,MAAMugC,GAAiBzkC,GAAOkF,GAASA,EAAKoN,KAAKtS,GCK3C0kC,GAAsB,CAAC9wB,EAAQkB,GAAID,EAASD,EAASI,GAAID,GCLlD,CACTzC,KAAOtS,GAAY,SAANA,EACb6T,MAAQ7T,GAAMA,IDOZ2kC,GAA0B3kC,GAAM0kC,GAAoB5T,KAAK2T,GAAczkC,IEJvE4kC,GAAa,IAAIF,GAAqBvU,GAAOoC,ICKnD,SAASsS,GAAe70B,EAAenL,EAAK1D,GACpC6O,EAAc80B,SAASjgC,GACvBmL,EAAc+0B,SAASlgC,GAAKnD,IAAIP,GAGhC6O,EAAcg1B,SAASngC,EAAK2/B,GAAYrjC,GAEhD,CACA,SAAS8jC,GAAUj1B,EAAe4O,GAC9B,MAAMyB,EAAW6K,GAAelb,EAAe4O,GAC/C,IAAI,cAAE0B,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAM/e,GAAW6e,EAAWrQ,EAAck1B,qBAAqB7kB,GAAU,GAAS,CAAC,EAC3H7e,EAAS,IAAKA,KAAW8e,GACzB,IAAK,MAAMzb,KAAOrD,EAAQ,CAEtBqjC,GAAe70B,EAAenL,EADhBsa,GAA6B3d,EAAOqD,IAEtD,CACJ,CAuEA,SAASsgC,GAAwBtgC,EAAK0b,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAW1b,IAAQ0b,EAAoB,SAAKA,GAC7C6P,IAC3B,CC3FA,SAASgV,GAAoBl2B,EAAoCrK,GAAK,IAAxC,cAAEwgC,EAAa,eAAEC,GAAgBp2B,EAC3D,MAAMq2B,EAAcF,EAAcl8B,eAAetE,KAAgC,IAAxBygC,EAAezgC,GAExE,OADAygC,EAAezgC,IAAO,EACf0gC,CACX,CACA,SAASC,GAAoBrkC,EAAOK,GAChC,MAAMsB,EAAU3B,EAAMgG,MACtB,IAAI0F,MAAMC,QAAQtL,GAOd,OAAOsB,IAAYtB,EANnB,IAAK,IAAI0H,EAAI,EAAGA,EAAI1H,EAAOyH,OAAQC,IAC/B,GAAI1H,EAAO0H,KAAOpG,EACd,OAAO,CAMvB,CACA,SAAS2iC,GAAcz1B,EAAe4O,GAA0D,IAA9C,MAAE2b,EAAQ,EAAC,mBAAEmL,EAAkB,KAAExgC,GAAM2E,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,GACrF,WAAE0W,EAAavQ,EAAc+uB,uBAAsB,cAAEze,KAAkB9e,GAAWwO,EAAck1B,qBAAqBtmB,GACzH,MAAM+mB,EAAa31B,EAAc+0B,SAAS,cACtCW,IACAnlB,EAAamlB,GACjB,MAAME,EAAa,GACbC,EAAqB3gC,GACvB8K,EAAca,gBACdb,EAAca,eAAei1B,WAAW5gC,GAC5C,IAAK,MAAML,KAAOrD,EAAQ,CACtB,MAAML,EAAQ6O,EAAc+0B,SAASlgC,GAC/B2b,EAAchf,EAAOqD,GAC3B,IAAK1D,QACeR,IAAhB6f,GACCqlB,GACGT,GAAqBS,EAAoBhhC,GAC7C,SAEJ,MAAM47B,EAAkB,CACpBlG,QACA6B,QAAS,KACNmE,GAAmBhgB,GAAc,CAAC,EAAG1b,IAM5C,GAAIsG,OAAO46B,wBAAyB,CAChC,MAAMC,EAAWh2B,EAAcmW,WAAWzZ,GAC1C,GAAIs5B,EAAU,CACV,MAAM5J,EAAUjxB,OAAO46B,wBAAwBC,EAAUnhC,EAAK1D,EAAOmgB,IACrD,OAAZ8a,IACAqE,EAAgBrE,QAAUA,EAC1BqE,EAAgBiB,WAAY,EAEpC,CACJ,CACA,IAAIuE,GAAWxF,EAAgBiB,YAC1B8D,GAAoBrkC,EAAOqf,GAahC,GAZ6B,WAAzBigB,EAAgBv7B,OACf/D,EAAM2R,eAAiB2tB,EAAgBrV,YACxC6a,GAAU,GAOV9kC,EAAMgN,YACN83B,GAAU,GAEVA,EACA,SACJ9kC,EAAM6L,MAAMwzB,GAAmB37B,EAAK1D,EAAOqf,EAAaxQ,EAAck2B,oBAAsBzzB,EAAeP,IAAIrN,GACzG,CAAEK,MAAM,GACRu7B,IACN,MAAMtyB,EAAYhN,EAAMgN,UACpB0zB,GAAwB8D,KACxBA,EAAW7kB,IAAIjc,GACfsJ,EAAU4uB,MAAK,IAAM4I,EAAW3kB,OAAOnc,MAE3C+gC,EAAWh/B,KAAKuH,EACpB,CAMA,OALImS,GACA8a,QAAQrT,IAAI6d,GAAY7I,MAAK,KACzBzc,GAAiB2kB,GAAUj1B,EAAesQ,EAAc,IAGzDslB,CACX,CCjGA,SAASO,GAAen2B,EAAeo2B,GAAuB,IAAdliC,EAAO2F,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMwW,EAAW6K,GAAelb,EAAeo2B,EAASliC,EAAQ4N,QAChE,IAAI,WAAEyO,EAAavQ,EAAc+uB,wBAA0B,CAAC,GAAM1e,GAAY,CAAC,EAC3Enc,EAAQwhC,qBACRnlB,EAAarc,EAAQwhC,oBAMzB,MAAMW,EAAehmB,EACf,IAAM+a,QAAQrT,IAAI0d,GAAcz1B,EAAeqQ,EAAUnc,IACzD,IAAMk3B,QAAQC,UAKdiL,EAAqBt2B,EAAcu2B,iBAAmBv2B,EAAcu2B,gBAAgBllC,KACpF,WAAsB,IAArBmlC,EAAY38B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEu3B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB/gB,EAClE,OAkBZ,SAAyBvQ,EAAeo2B,GAAgF,IAAvEhF,EAAav3B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGw3B,EAAex3B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGy3B,EAAgBz3B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAG3F,EAAO2F,UAAAZ,OAAA,EAAAY,UAAA,QAAAlJ,EAClH,MAAMilC,EAAa,GACba,GAAsBz2B,EAAcu2B,gBAAgBllC,KAAO,GAAKggC,EAChEqF,EAA+C,IAArBpF,EAC1B,WAAM,OAAJz3B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,GAAUw3B,CAAe,EAC9B,WAAM,OAAKoF,GAAT58B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,GAA+Bw3B,CAAe,EAUzD,OATAx0B,MAAMujB,KAAKpgB,EAAcu2B,iBACpBI,KAAKC,IACL7lC,SAAQ,CAACwlB,EAAOrd,KACjBqd,EAAM6b,OAAO,iBAAkBgE,GAC/BR,EAAWh/B,KAAKu/B,GAAe5f,EAAO6f,EAAS,IACxCliC,EACHq2B,MAAO6G,EAAgBsF,EAAwBx9B,KAChD6zB,MAAK,IAAMxW,EAAM6b,OAAO,oBAAqBgE,KAAU,IAEvDhL,QAAQrT,IAAI6d,EACvB,CAlCmBiB,CAAgB72B,EAAeo2B,EAAShF,EAAgBoF,EAAcnF,EAAiBC,EAAkBp9B,EACpH,EACE,IAAMk3B,QAAQC,WAKd,KAAE6F,GAAS3gB,EACjB,GAAI2gB,EAAM,CACN,MAAO4F,EAAOC,GAAiB,mBAAT7F,EAChB,CAACmF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ/J,MAAK,IAAMgK,KAC9B,CAEI,OAAO3L,QAAQrT,IAAI,CAACse,IAAgBC,EAAmBpiC,EAAQq2B,QAEvE,CAkBA,SAASqM,GAAgBt8B,EAAGC,GACxB,OAAOD,EAAE08B,iBAAiBz8B,EAC9B,CCpDA,MAAM08B,GAAuB,IAAIh6B,GAAsBmnB,UACjD8S,GAAoBj6B,EAAqBhE,OAC/C,SAASk+B,GAAYn3B,GACjB,OAAQ41B,GAAexK,QAAQrT,IAAI6d,EAAWhZ,KAAI1d,IAAA,IAAC,UAAEf,EAAS,QAAEjK,GAASgL,EAAA,OCP7E,SAA8Bc,EAAe4O,GAA0B,IAE/DzQ,EAFiDjK,EAAO2F,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAmG,EAAcoyB,OAAO,iBAAkBxjB,GAEnC/R,MAAMC,QAAQ8R,GAAa,CAC3B,MAAMgnB,EAAahnB,EAAWgO,KAAKwZ,GAAYD,GAAen2B,EAAeo2B,EAASliC,KACtFiK,EAAYitB,QAAQrT,IAAI6d,EAC5B,MACK,GAA0B,kBAAfhnB,EACZzQ,EAAYg4B,GAAen2B,EAAe4O,EAAY1a,OAErD,CACD,MAAMkjC,EAA2C,oBAAfxoB,EAC5BsM,GAAelb,EAAe4O,EAAY1a,EAAQ4N,QAClD8M,EACNzQ,EAAYitB,QAAQrT,IAAI0d,GAAcz1B,EAAeo3B,EAAoBljC,GAC7E,CACA,OAAOiK,EAAU4uB,MAAK,IAAM/sB,EAAcoyB,OAAO,oBAAqBxjB,IAC1E,CDVkFyoB,CAAqBr3B,EAAe7B,EAAWjK,EAAQ,IACzI,CACA,SAASojC,GAAqBt3B,GAC1B,IAAI5C,EAAU+5B,GAAYn3B,GAC1B,MAAMnI,EAoSC,CACHuF,QAASm6B,IAAgB,GACzBC,YAAaD,KACbnhB,WAAYmhB,KACZ3sB,SAAU2sB,KACVE,UAAWF,KACXG,WAAYH,KACZn5B,KAAMm5B,MA1SV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAACzlB,EAAKvD,KAClC,MAAMyB,EAAW6K,GAAelb,EAAe4O,GAC/C,GAAIyB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkB9e,GAAW6e,EACjD8B,EAAM,IAAKA,KAAQ3gB,KAAW8e,EAClC,CACA,OAAO6B,CAAG,EAmBd,SAASrR,EAAe5M,EAAS2jC,GAC7B,MAAMhkC,EAAQmM,EAAcmW,WACtBre,EAAUkI,EAAc83B,mBAAkB,IAAS,CAAC,EAKpDlC,EAAa,GAKbmC,EAAc,IAAIr1B,IAMxB,IAAIs1B,EAAkB,CAAC,EAKnBC,EAAsBlO,IAO1B,IAAK,IAAI7wB,EAAI,EAAGA,EAAIg+B,GAAmBh+B,IAAK,CACxC,MAAMhE,EAAO+hC,GAAqB/9B,GAC5Bg/B,EAAYrgC,EAAM3C,GAClB8I,OAAuBrN,IAAhBkD,EAAMqB,GAAsBrB,EAAMqB,GAAQ4C,EAAQ5C,GACzDijC,EAAgBv7B,EAAeoB,GAK/Bo6B,EAAcljC,IAAS2iC,EAAoBK,EAAUniB,SAAW,MAClD,IAAhBqiB,IACAH,EAAsB/+B,GAO1B,IAAIm/B,EAAcr6B,IAASlG,EAAQ5C,IAAS8I,IAASnK,EAAMqB,IAASijC,EAepE,GAXIE,GACAV,GACA33B,EAAcs4B,yBACdD,GAAc,GAMlBH,EAAU7C,cAAgB,IAAK2C,IAI7BE,EAAUniB,UAA4B,OAAhBqiB,IAElBp6B,IAASk6B,EAAUK,UAErBx7B,EAAoBiB,IACJ,mBAATA,EACP,SAOJ,MAAMw6B,EAAmBC,GAAuBP,EAAUK,SAAUv6B,GACpE,IAAI06B,EAAoBF,GAEnBtjC,IAAS2iC,GACNK,EAAUniB,WACTsiB,GACDF,GAEHj/B,EAAI++B,GAAuBE,EAKhC,MAAMQ,EAAiB97B,MAAMC,QAAQkB,GAAQA,EAAO,CAACA,GAKrD,IAAI46B,EAAiBD,EAAezmB,OAAO0lB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBlkC,IACnB6jC,GAAoB,EACpBX,EAAY3mC,OAAOyD,GACnBqjC,EAAU5C,eAAezgC,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAOikC,EAAS,CACvB,MAAM/d,EAAO6d,EAAe/jC,GACtBmmB,EAAO6d,EAAmBhkC,GAE5BmjC,EAAgB7+B,eAAetE,KAK/BkmB,IAASC,EAKLjM,GAAkBgM,IAAShM,GAAkBiM,IACxCF,GAAeC,EAAMC,IAASwd,EAC/BO,EAAclkC,GAOdqjC,EAAU7C,cAAcxgC,IAAO,OAGrBlE,IAAToqB,EAELge,EAAclkC,GAIdkjC,EAAYjnB,IAAIjc,QAGNlE,IAAToqB,GAAsBgd,EAAY71B,IAAIrN,GAK3CkkC,EAAclkC,GAOdqjC,EAAU7C,cAAcxgC,IAAO,EAEvC,CAKAqjC,EAAUK,SAAWv6B,EACrBk6B,EAAUW,mBAAqBD,EAI3BV,EAAUniB,WACViiB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmB33B,EAAcQ,wBACjCk4B,GAAoB,GAOpBA,IAAsBL,GACtBzC,EAAWh/B,QAAQ+hC,EAAe/b,KAAKze,IAAS,CAC5CA,UAAWA,EACXjK,QAAS,CAAEgB,UAAShB,OAGhC,CAMA,GAAI6jC,EAAY1mC,KAAM,CAClB,MAAM2nC,EAAoB,CAAC,EAC3BjB,EAAYhnC,SAAS8D,IACjB,MAAMokC,EAAiBj5B,EAAck5B,cAAcrkC,QAC5BlE,IAAnBsoC,IACAD,EAAkBnkC,GAAOokC,EAC7B,IAEJrD,EAAWh/B,KAAK,CAAEuH,UAAW66B,GACjC,CACA,IAAIG,EAAgB57B,QAAQq4B,EAAW38B,QAOvC,OANI0+B,IACmB,IAAlB9jC,EAAM6J,SAAqB7J,EAAM6J,UAAY7J,EAAMuJ,SACnD4C,EAAcs4B,yBACfa,GAAgB,GAEpBxB,GAAkB,EACXwB,EAAgB/7B,EAAQw4B,GAAcxK,QAAQC,SACzD,CAkBA,MAAO,CACHvqB,iBACAuV,UAhBJ,SAAmBnhB,EAAM6gB,EAAU7hB,GAC/B,IAAI+W,EAEJ,GAAIpT,EAAM3C,GAAM6gB,WAAaA,EACzB,OAAOqV,QAAQC,UAEsB,QAAxCpgB,EAAKjL,EAAcu2B,uBAAoC,IAAPtrB,GAAyBA,EAAGla,SAASwlB,IAAY,IAAItL,EAAI,OAAuC,QAA/BA,EAAKsL,EAAM1V,sBAAmC,IAAPoK,OAAgB,EAASA,EAAGoL,UAAUnhB,EAAM6gB,EAAS,IAC9Mle,EAAM3C,GAAM6gB,SAAWA,EACvB,MAAM6f,EAAa90B,EAAe5M,EAASgB,GAC3C,IAAK,MAAML,KAAOgD,EACdA,EAAMhD,GAAKwgC,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAIIwD,mBA5PJ,SAA4BC,GACxBj8B,EAAUi8B,EAAar5B,EAC3B,EA2PI81B,SAAUA,IAAMj+B,EAExB,CACA,SAAS4gC,GAAuBzd,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXne,MAAMC,QAAQie,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASuc,KACL,MAAO,CACHxhB,SAFyBlc,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAGzBw7B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBuD,mBAAoB,CAAC,EAE7B,CE/SA,IAAIl3B,GAAK,ECCT,MAAMi0B,GAAa,CACfz3B,UAAW,CACPwX,QCDR,cAA+BA,GAM3B/d,WAAAA,CAAYge,GACRqC,MAAMrC,GACNA,EAAK/U,iBAAmB+U,EAAK/U,eAAiBy2B,GAAqB1hB,GACvE,CACA0jB,mCAAAA,GACI,MAAM,QAAEl8B,GAAY3L,KAAKmkB,KAAKO,WAC9B1kB,KAAK8P,UACDxE,EAAoBK,KACpB3L,KAAK8P,QAAUnE,EAAQpK,UAAUvB,KAAKmkB,MAE9C,CAIAtU,KAAAA,GACI7P,KAAK6nC,qCACT,CACA54B,MAAAA,GACI,MAAM,QAAEtD,GAAY3L,KAAKmkB,KAAKO,YACtB/Y,QAASm8B,GAAgB9nC,KAAKmkB,KAAKvH,WAAa,CAAC,EACrDjR,IAAYm8B,GACZ9nC,KAAK6nC,qCAEb,CACA/3B,OAAAA,GAAY,ID3BZnD,KAAM,CACFuX,QDLR,cAAmCA,GAC/B/d,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKkQ,GAAKA,IACd,CACAjB,MAAAA,GACI,IAAKjP,KAAKmkB,KAAKzV,gBACX,OACJ,MAAM,UAAEq5B,EAAS,eAAEC,EAAc,OAAE33B,GAAWrQ,KAAKmkB,KAAKzV,iBAChDq5B,UAAWE,GAAkBjoC,KAAKmkB,KAAK+jB,qBAAuB,CAAC,EACvE,IAAKloC,KAAKmkB,KAAK/U,gBAAkB24B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBnoC,KAAKmkB,KAAK/U,eAAewV,UAAU,QAASmjB,EAAW,CAAE13B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASrQ,KAAKmkB,KAAKO,WAAWrU,SACxJ23B,IAAmBD,GACnBI,EAAc7M,MAAK,IAAM0M,EAAehoC,KAAKkQ,KAErD,CACAL,KAAAA,GACI,MAAM,SAAEjO,GAAa5B,KAAKmkB,KAAKzV,iBAAmB,CAAC,EAC/C9M,IACA5B,KAAK8P,QAAUlO,EAAS5B,KAAKkQ,IAErC,CACAJ,OAAAA,GAAY,KG3BVoG,GAAWA,CAACrN,EAAGC,IAAMoJ,KAAKma,IAAIxjB,EAAIC,GCWxC,MAAMs/B,GACFjiC,WAAAA,CAAYuc,EAAO2lB,GAAsD,IAA5C,mBAAEj+B,EAAkB,cAAEk+B,GAAelgC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EA8DlE,GA1DApI,KAAK2nB,WAAa,KAIlB3nB,KAAKuoC,cAAgB,KAIrBvoC,KAAKwoC,kBAAoB,KAIzBxoC,KAAKqoC,SAAW,CAAC,EAIjBroC,KAAKsoC,cAAgB5+B,OACrB1J,KAAKyoC,YAAc,KACf,IAAMzoC,KAAKuoC,gBAAiBvoC,KAAKwoC,kBAC7B,OACJ,MAAM/jB,EAAOikB,GAAW1oC,KAAKwoC,kBAAmBxoC,KAAK2oC,SAC/CC,EAAmC,OAApB5oC,KAAK2nB,WAIpBkhB,EDxClB,SAAoBhgC,EAAGC,GAEnB,MAAMggC,EAAS5yB,GAASrN,EAAE/E,EAAGgF,EAAEhF,GACzBilC,EAAS7yB,GAASrN,EAAE9E,EAAG+E,EAAE/E,GAC/B,OAAOmO,KAAKgd,KAAK4Z,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWvkB,EAAK9K,OAAQ,CAAE7V,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAK6kC,IAAiBC,EAClB,OACJ,MAAM,MAAE7lB,GAAUyB,GACZ,UAAElE,GAAcP,GACtBhgB,KAAK2oC,QAAQxjC,KAAK,IAAK6d,EAAOzC,cAC9B,MAAM,QAAE0oB,EAAO,OAAEC,GAAWlpC,KAAKqoC,SAC5BO,IACDK,GAAWA,EAAQjpC,KAAKuoC,cAAe9jB,GACvCzkB,KAAK2nB,WAAa3nB,KAAKuoC,eAE3BW,GAAUA,EAAOlpC,KAAKuoC,cAAe9jB,EAAK,EAE9CzkB,KAAKmpC,kBAAoB,CAACzmB,EAAO+B,KAC7BzkB,KAAKuoC,cAAgB7lB,EACrB1iB,KAAKwoC,kBAAoBY,GAAe3kB,EAAMzkB,KAAKoK,oBAEnDyV,GAAM5Q,OAAOjP,KAAKyoC,aAAa,EAAK,EAExCzoC,KAAKqpC,gBAAkB,CAAC3mB,EAAO+B,KAE3B,GADAzkB,KAAKspC,OACCtpC,KAAKuoC,gBAAiBvoC,KAAKwoC,kBAC7B,OACJ,MAAM,MAAEe,EAAK,aAAEC,GAAiBxpC,KAAKqoC,SAC/BoB,EAAUf,GAA0B,kBAAfhmB,EAAMjf,KAC3BzD,KAAKwoC,kBACLY,GAAe3kB,EAAMzkB,KAAKoK,oBAAqBpK,KAAK2oC,SACtD3oC,KAAK2nB,YAAc4hB,GACnBA,EAAM7mB,EAAO+mB,GAEjBD,GAAgBA,EAAa9mB,EAAO+mB,EAAQ,GAG3ChnB,GAAiBC,GAClB,OACJ1iB,KAAKqoC,SAAWA,EAChBroC,KAAKoK,mBAAqBA,EAC1BpK,KAAKsoC,cAAgBA,GAAiB5+B,OACtC,MACMggC,EAAcN,GADPtmB,GAAiBJ,GACW1iB,KAAKoK,qBACxC,MAAE4Y,GAAU0mB,GACZ,UAAEnpB,GAAcP,GACtBhgB,KAAK2oC,QAAU,CAAC,IAAK3lB,EAAOzC,cAC5B,MAAM,eAAEopB,GAAmBtB,EAC3BsB,GACIA,EAAejnB,EAAOgmB,GAAWgB,EAAa1pC,KAAK2oC,UACvD3oC,KAAK4pC,gBAAkBxmB,GAAKF,GAAgBljB,KAAKsoC,cAAe,cAAetoC,KAAKmpC,mBAAoBjmB,GAAgBljB,KAAKsoC,cAAe,YAAatoC,KAAKqpC,iBAAkBnmB,GAAgBljB,KAAKsoC,cAAe,gBAAiBtoC,KAAKqpC,iBAC9O,CACAQ,cAAAA,CAAexB,GACXroC,KAAKqoC,SAAWA,CACpB,CACAiB,GAAAA,GACItpC,KAAK4pC,iBAAmB5pC,KAAK4pC,kBAC7B7pB,GAAY/f,KAAKyoC,YACrB,EAEJ,SAASW,GAAe3kB,EAAMra,GAC1B,OAAOA,EAAqB,CAAE4Y,MAAO5Y,EAAmBqa,EAAKzB,QAAWyB,CAC5E,CACA,SAASqlB,GAAcjhC,EAAGC,GACtB,MAAO,CAAEhF,EAAG+E,EAAE/E,EAAIgF,EAAEhF,EAAGC,EAAG8E,EAAE9E,EAAI+E,EAAE/E,EACtC,CACA,SAAS2kC,GAAUj7B,EAAYk7B,GAAS,IAApB,MAAE3lB,GAAOvV,EACzB,MAAO,CACHuV,QACA1C,MAAOwpB,GAAc9mB,EAAO+mB,GAAgBpB,IAC5ChvB,OAAQmwB,GAAc9mB,EAAOgnB,GAAiBrB,IAC9Chf,SAAUtY,GAAYs3B,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQnhC,OAAS,EACpC,CACA,SAAS6J,GAAYs3B,EAAS1H,GAC1B,GAAI0H,EAAQnhC,OAAS,EACjB,MAAO,CAAE1D,EAAG,EAAGC,EAAG,GAEtB,IAAI0D,EAAIkhC,EAAQnhC,OAAS,EACrByiC,EAAmB,KACvB,MAAMC,EAAYH,GAAgBpB,GAClC,KAAOlhC,GAAK,IACRwiC,EAAmBtB,EAAQlhC,KACvByiC,EAAU3pB,UAAY0pB,EAAiB1pB,UACvCuJ,GAAsBmX,MAG1Bx5B,IAEJ,IAAKwiC,EACD,MAAO,CAAEnmC,EAAG,EAAGC,EAAG,GAEtB,MAAMy3B,EAAOxR,GAAsBkgB,EAAU3pB,UAAY0pB,EAAiB1pB,WAC1E,GAAa,IAATib,EACA,MAAO,CAAE13B,EAAG,EAAGC,EAAG,GAEtB,MAAMsZ,EAAkB,CACpBvZ,GAAIomC,EAAUpmC,EAAImmC,EAAiBnmC,GAAK03B,EACxCz3B,GAAImmC,EAAUnmC,EAAIkmC,EAAiBlmC,GAAKy3B,GAQ5C,OANIne,EAAgBvZ,IAAMw0B,MACtBjb,EAAgBvZ,EAAI,GAEpBuZ,EAAgBtZ,IAAMu0B,MACtBjb,EAAgBtZ,EAAI,GAEjBsZ,CACX,CCpJA,SAAS8sB,GAAWC,GAChB,OAAOA,EAAKn4B,IAAMm4B,EAAKp4B,GAC3B,CACA,SAASq4B,GAAO3qC,GAAuC,IAAhCK,EAAMqI,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGkiC,EAAWliC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAO8J,KAAKma,IAAI3sB,EAAQK,IAAWuqC,CACvC,CACA,SAASC,GAAcjqB,EAAOnI,EAAQpY,GAAsB,IAAd2Z,EAAMtR,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,GACnDkY,EAAM5G,OAASA,EACf4G,EAAMkqB,YAAchtB,GAAIrF,EAAOnG,IAAKmG,EAAOlG,IAAKqO,EAAM5G,QACtD4G,EAAM/N,MAAQ43B,GAAWpqC,GAAUoqC,GAAWhyB,IAC1CkyB,GAAO/pB,EAAM/N,MAAO,EAAG,OAAWye,MAAM1Q,EAAM/N,UAC9C+N,EAAM/N,MAAQ,GAClB+N,EAAMmqB,UACFjtB,GAAIzd,EAAOiS,IAAKjS,EAAOkS,IAAKqO,EAAM5G,QAAU4G,EAAMkqB,aAClDH,GAAO/pB,EAAMmqB,YAAczZ,MAAM1Q,EAAMmqB,cACvCnqB,EAAMmqB,UAAY,EAC1B,CACA,SAASC,GAAapqB,EAAOnI,EAAQpY,EAAQ2Z,GACzC6wB,GAAcjqB,EAAMxc,EAAGqU,EAAOrU,EAAG/D,EAAO+D,EAAG4V,EAASA,EAAOlD,aAAUtX,GACrEqrC,GAAcjqB,EAAMvc,EAAGoU,EAAOpU,EAAGhE,EAAOgE,EAAG2V,EAASA,EAAOjD,aAAUvX,EACzE,CACA,SAASyrC,GAAiB5qC,EAAQ6qC,EAAUp8B,GACxCzO,EAAOiS,IAAMxD,EAAOwD,IAAM44B,EAAS54B,IACnCjS,EAAOkS,IAAMlS,EAAOiS,IAAMm4B,GAAWS,EACzC,CAKA,SAASC,GAAyB9qC,EAAQmN,EAAQsB,GAC9CzO,EAAOiS,IAAM9E,EAAO8E,IAAMxD,EAAOwD,IACjCjS,EAAOkS,IAAMlS,EAAOiS,IAAMm4B,GAAWj9B,EACzC,CACA,SAAS49B,GAAqB/qC,EAAQmN,EAAQsB,GAC1Cq8B,GAAyB9qC,EAAO+D,EAAGoJ,EAAOpJ,EAAG0K,EAAO1K,GACpD+mC,GAAyB9qC,EAAOgE,EAAGmJ,EAAOnJ,EAAGyK,EAAOzK,EACxD,CCZA,SAASgnC,GAA4BX,EAAMp4B,EAAKC,GAC5C,MAAO,CACHD,SAAa9S,IAAR8S,EAAoBo4B,EAAKp4B,IAAMA,OAAM9S,EAC1C+S,SAAa/S,IAAR+S,EACCm4B,EAAKn4B,IAAMA,GAAOm4B,EAAKn4B,IAAMm4B,EAAKp4B,UAClC9S,EAEd,CAcA,SAAS8rC,GAA4BC,EAAYC,GAC7C,IAAIl5B,EAAMk5B,EAAgBl5B,IAAMi5B,EAAWj5B,IACvCC,EAAMi5B,EAAgBj5B,IAAMg5B,EAAWh5B,IAO3C,OAJIi5B,EAAgBj5B,IAAMi5B,EAAgBl5B,IACtCi5B,EAAWh5B,IAAMg5B,EAAWj5B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMk5B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHv5B,IAAKw5B,GAAoBH,EAAaC,GACtCr5B,IAAKu5B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAMMC,GAAcA,KAAA,CAChB5nC,EAPoB,CACpB2mC,UAAW,EACXl4B,MAAO,EACPmH,OAAQ,EACR8wB,YAAa,GAIbzmC,EARoB,CACpB0mC,UAAW,EACXl4B,MAAO,EACPmH,OAAQ,EACR8wB,YAAa,KAOXmB,GAAYA,KAAA,CACd7nC,EAFe,CAASkO,IAAK,EAAGC,IAAK,GAGrClO,EAHe,CAASiO,IAAK,EAAGC,IAAK,KCVzC,SAAS25B,GAASvtC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASwtC,GAAuBp+B,GAAgC,IAA/B,IAAEiH,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAASnH,EAC1D,MAAO,CACH3J,EAAG,CAAEkO,IAAK6C,EAAM5C,IAAK0C,GACrB5Q,EAAG,CAAEiO,IAAK0C,EAAKzC,IAAK2C,GAE5B,CCVA,SAASk3B,GAAgBv5B,GACrB,YAAiBrT,IAAVqT,GAAiC,IAAVA,CAClC,CACA,SAASw5B,GAAQt+B,GAA4B,IAA3B,MAAE8E,EAAK,OAAEqD,EAAM,OAAEC,GAAQpI,EACvC,OAASq+B,GAAgBv5B,KACpBu5B,GAAgBl2B,KAChBk2B,GAAgBj2B,EACzB,CACA,SAASwB,GAAasE,GAClB,OAAQowB,GAASpwB,IACbqwB,GAAerwB,IACfA,EAAOpK,GACPoK,EAAOnG,QACPmG,EAAOlG,SACPkG,EAAOjG,OACf,CACA,SAASs2B,GAAerwB,GACpB,OAAOswB,GAActwB,EAAO7X,IAAMmoC,GAActwB,EAAO5X,EAC3D,CACA,SAASkoC,GAAcvsC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASwsC,GAAWlpB,EAAOzQ,EAAOi4B,GAG9B,OAAOA,EADQj4B,GADYyQ,EAAQwnB,EAGvC,CAIA,SAAS2B,GAAgBnpB,EAAOynB,EAAWl4B,EAAOi4B,EAAa4B,GAI3D,YAHiBltC,IAAbktC,IACAppB,EAAQkpB,GAAWlpB,EAAOopB,EAAU5B,IAEjC0B,GAAWlpB,EAAOzQ,EAAOi4B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAASriC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGmK,EAAKnK,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGoiC,EAAWpiC,UAAAZ,OAAA,EAAAY,UAAA,QAAAlJ,EAAEktC,EAAQhkC,UAAAZ,OAAA,EAAAY,UAAA,QAAAlJ,EACzEkrC,EAAKp4B,IAAMm6B,GAAgB/B,EAAKp4B,IAAKy4B,EAAWl4B,EAAOi4B,EAAa4B,GACpEhC,EAAKn4B,IAAMk6B,GAAgB/B,EAAKn4B,IAAKw4B,EAAWl4B,EAAOi4B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAG9+B,GAAY,IAAV,EAAE3J,EAAC,EAAEC,GAAG0J,EAChC4+B,GAAeE,EAAIzoC,EAAGA,EAAE2mC,UAAW3mC,EAAEyO,MAAOzO,EAAE0mC,aAC9C6B,GAAeE,EAAIxoC,EAAGA,EAAE0mC,UAAW1mC,EAAEwO,MAAOxO,EAAEymC,YAClD,CAuDA,SAASgC,GAAcj6B,GACnB,OAAIk6B,OAAOC,UAAUn6B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASo6B,GAAcvC,EAAMl0B,GACzBk0B,EAAKp4B,IAAMo4B,EAAKp4B,IAAMkE,EACtBk0B,EAAKn4B,IAAMm4B,EAAKn4B,IAAMiE,CAC1B,CAMA,SAAS02B,GAAcxC,EAAMyC,EAAU78B,GAA8B,IAA3B5M,EAAK0pC,EAAUC,GAAU/8B,EAC/D,MAAMg9B,OAAuC9tC,IAA1B2tC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAchtB,GAAI4sB,EAAKp4B,IAAKo4B,EAAKn4B,IAAK+6B,GAE5CX,GAAejC,EAAMyC,EAAWzpC,GAAMypC,EAAWC,GAAWtC,EAAaqC,EAAWt6B,MACxF,CAIA,MAAM06B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKz6B,GACvB86B,GAAcL,EAAIzoC,EAAGgO,EAAWm7B,IAChCL,GAAcL,EAAIxoC,EAAG+N,EAAWo7B,GACpC,CCpHA,SAASE,GAAmBx9B,EAAUw5B,GAClC,OAAOyC,GHeX,SAA4B7oB,EAAOomB,GAC/B,IAAKA,EACD,OAAOpmB,EACX,MAAMqqB,EAAUjE,EAAe,CAAEtlC,EAAGkf,EAAMnO,KAAM9Q,EAAGif,EAAMtO,MACnD44B,EAAclE,EAAe,CAAEtlC,EAAGkf,EAAMrO,MAAO5Q,EAAGif,EAAMpO,SAC9D,MAAO,CACHF,IAAK24B,EAAQtpC,EACb8Q,KAAMw4B,EAAQvpC,EACd8Q,OAAQ04B,EAAYvpC,EACpB4Q,MAAO24B,EAAYxpC,EAE3B,CG1BmCypC,CAAmB39B,EAASoS,wBAAyBonB,GACxF,CCJA,MAAMoE,GAAmB//B,IAAiB,IAAhB,QAAEpM,GAASoM,EACjC,OAAOpM,EAAUA,EAAQosC,cAAcC,YAAc,IAAI,ECiBvDC,GAAsB,IAAIvoB,QAKhC,MAAMwoB,GACFznC,WAAAA,CAAYoI,GAIRvO,KAAK6tC,eAAiB,KACtB7tC,KAAK8tC,YAAa,EAClB9tC,KAAK+tC,iBAAmB,KACxB/tC,KAAKwqC,YAAc,CAAE1mC,EAAG,EAAGC,EAAG,GAI9B/D,KAAKguC,aAAc,EACnBhuC,KAAKiuC,uBAAwB,EAI7BjuC,KAAKkuC,QAAUvC,KACf3rC,KAAKuO,cAAgBA,CACzB,CACAhD,KAAAA,CAAM4iC,GAA4C,IAA/B,aAAEC,GAAe,GAAOhmC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEsG,GAAoB1O,KAAKuO,cACjC,GAAIG,IAAiD,IAA9BA,EAAgBq5B,UACnC,OAuFJ/nC,KAAKquC,WAAa,IAAIjG,GAAW+F,EAAa,CAC1CxE,eAvFoBjnB,IAGpB1iB,KAAKsuC,gBACDF,GACApuC,KAAKouC,aAAatrB,GAAiBJ,EAAO,QAAQM,MACtD,EAkFAimB,QAhFYA,CAACvmB,EAAO+B,KAEpB,MAAM,KAAE7X,EAAI,gBAAE2hC,EAAe,YAAEC,GAAgBxuC,KAAK0kB,WACpD,GAAI9X,IAAS2hC,IACLvuC,KAAK6tC,gBACL7tC,KAAK6tC,iBACT7tC,KAAK6tC,eAAiBhqB,GAAcjX,IAE/B5M,KAAK6tC,gBACN,OAER7tC,KAAK8tC,YAAa,EAClB9tC,KAAK+tC,iBAAmB,KACxB/tC,KAAKyuC,qBACDzuC,KAAKuO,cAAc4N,aACnBnc,KAAKuO,cAAc4N,WAAWuyB,oBAAqB,EACnD1uC,KAAKuO,cAAc4N,WAAWpc,YAASb,GAK3C0sC,IAAUxB,IACN,IAAI/oC,EAAUrB,KAAK2uC,mBAAmBvE,GAAM1kC,OAAS,EAIrD,GAAI0N,EAAQvC,KAAKxP,GAAU,CACvB,MAAM,WAAE8a,GAAenc,KAAKuO,cAC5B,GAAI4N,GAAcA,EAAWjP,OAAQ,CACjC,MAAM0hC,EAAezyB,EAAWjP,OAAO2hC,UAAUzE,GACjD,GAAIwE,EAAc,CAEdvtC,EADe8oC,GAAWyE,IACNv8B,WAAWhR,GAAW,IAC9C,CACJ,CACJ,CACArB,KAAKwqC,YAAYJ,GAAQ/oC,CAAO,IAGhCmtC,GACA3uB,GAAM5Q,QAAO,IAAMu/B,EAAY9rB,EAAO+B,KAAO,GAAO,GAExD,MAAM,eAAErV,GAAmBpP,KAAKuO,cAChCa,GAAkBA,EAAewV,UAAU,aAAa,EAAK,EAsC7DskB,OApCWA,CAACxmB,EAAO+B,KAEnB,MAAM,gBAAE8pB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYhvC,KAAK0kB,WAE9E,IAAK6pB,IAAoBvuC,KAAK6tC,eAC1B,OACJ,MAAM,OAAEl0B,GAAW8K,EAEnB,GAAIqqB,GAA+C,OAA1B9uC,KAAK+tC,iBAM1B,OALA/tC,KAAK+tC,iBAoVrB,SAA6Bp0B,GAA4B,IAApBs1B,EAAa7mC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,GAC7Cq0B,EAAY,KACZvqB,KAAKma,IAAI1S,EAAO5V,GAAKkrC,EACrBxS,EAAY,IAEPvqB,KAAKma,IAAI1S,EAAO7V,GAAKmrC,IAC1BxS,EAAY,KAEhB,OAAOA,CACX,CA7VwCyS,CAAoBv1B,QAEd,OAA1B3Z,KAAK+tC,kBACLgB,GAAmBA,EAAgB/uC,KAAK+tC,mBAKhD/tC,KAAKmvC,WAAW,IAAK1qB,EAAKzB,MAAOrJ,GACjC3Z,KAAKmvC,WAAW,IAAK1qB,EAAKzB,MAAOrJ,GAOjC3Z,KAAKuO,cAActN,SAKnB+tC,GAAUA,EAAOtsB,EAAO+B,EAAK,EAO7B+kB,aALiBA,CAAC9mB,EAAO+B,IAASzkB,KAAKk4B,KAAKxV,EAAO+B,IAMpD,CACCra,mBAAoBpK,KAAKuO,cAAc6gC,wBACvC9G,cAAekF,GAAiBxtC,KAAKuO,gBAE7C,CACA2pB,IAAAA,CAAKxV,EAAO+B,GACR,MAAMqpB,EAAa9tC,KAAK8tC,WAExB,GADA9tC,KAAK8f,UACAguB,EACD,OACJ,MAAM,SAAEnkB,GAAalF,EACrBzkB,KAAKwiC,eAAe7Y,GACpB,MAAM,UAAE0lB,GAAcrvC,KAAK0kB,WACvB2qB,GACAxvB,GAAM5Q,QAAO,IAAMogC,EAAU3sB,EAAO+B,IAE5C,CACA3E,MAAAA,GACI9f,KAAK8tC,YAAa,EAClB,MAAM,WAAE3xB,EAAU,eAAE/M,GAAmBpP,KAAKuO,cACxC4N,IACAA,EAAWuyB,oBAAqB,GAEpC1uC,KAAKquC,YAAcruC,KAAKquC,WAAW/E,MACnCtpC,KAAKquC,gBAAanvC,EAClB,MAAM,gBAAEqvC,GAAoBvuC,KAAK0kB,YAC5B6pB,GAAmBvuC,KAAK6tC,iBACzB7tC,KAAK6tC,iBACL7tC,KAAK6tC,eAAiB,MAE1Bz+B,GAAkBA,EAAewV,UAAU,aAAa,EAC5D,CACAuqB,UAAAA,CAAW/E,EAAMkF,EAAQ31B,GACrB,MAAM,KAAE/M,GAAS5M,KAAK0kB,WAEtB,IAAK/K,IAAW41B,GAAWnF,EAAMx9B,EAAM5M,KAAK+tC,kBACxC,OACJ,MAAMyB,EAAYxvC,KAAK2uC,mBAAmBvE,GAC1C,IAAI9gB,EAAOtpB,KAAKwqC,YAAYJ,GAAQzwB,EAAOywB,GAEvCpqC,KAAKguC,aAAehuC,KAAKguC,YAAY5D,KACrC9gB,ER7KZ,SAA0BtG,EAAKvV,EAAgBygC,GAAS,IAAvB,IAAEl8B,EAAG,IAAEC,GAAKxE,EASzC,YARYvO,IAAR8S,GAAqBgR,EAAQhR,EAE7BgR,EAAQkrB,EAAU1wB,GAAIxL,EAAKgR,EAAOkrB,EAAQl8B,KAAOE,KAAKD,IAAI+Q,EAAOhR,QAEpD9S,IAAR+S,GAAqB+Q,EAAQ/Q,IAElC+Q,EAAQkrB,EAAU1wB,GAAIvL,EAAK+Q,EAAOkrB,EAAQj8B,KAAOC,KAAKF,IAAIgR,EAAO/Q,IAE9D+Q,CACX,CQmKmBysB,CAAiBnmB,EAAMtpB,KAAKguC,YAAY5D,GAAOpqC,KAAKkuC,QAAQ9D,KAEvEoF,EAAUvvC,IAAIqpB,EAClB,CACAmlB,kBAAAA,GACI,IAAIj1B,EACJ,MAAM,gBAAEk2B,EAAe,YAAErE,GAAgBrrC,KAAK0kB,WACxCxX,EAASlN,KAAKuO,cAAc4N,aAC7Bnc,KAAKuO,cAAc4N,WAAWjP,OAC7BlN,KAAKuO,cAAc4N,WAAWwzB,SAAQ,GACG,QAAxCn2B,EAAKxZ,KAAKuO,cAAc4N,kBAA+B,IAAP3C,OAAgB,EAASA,EAAGtM,OAC7E0iC,EAAkB5vC,KAAKguC,YACzB0B,GAAmBxkC,EAAYwkC,GAC1B1vC,KAAKguC,cACNhuC,KAAKguC,YAAchuC,KAAK6vC,yBAKxB7vC,KAAKguC,eADL0B,IAAmBxiC,IRnKnC,SAAiC2hC,EAAS7+B,GAAgC,IAA9B,IAAE0E,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAO3E,EACpE,MAAO,CACHlM,EAAGinC,GAA4B8D,EAAU/qC,EAAG+Q,EAAMF,GAClD5Q,EAAGgnC,GAA4B8D,EAAU9qC,EAAG2Q,EAAKE,GAEzD,CQ+JmCk7B,CAAwB5iC,EAAO2hC,UAAWa,GAMrE1vC,KAAKkuC,QR5Gb,WAA0D,IAA9B7C,EAAWjjC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG+iC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHrnC,EAAGsnC,GAAmBC,EAAa,OAAQ,SAC3CtnC,EAAGqnC,GAAmBC,EAAa,MAAO,UAElD,CQiGuB0E,CAAmB1E,GAK9BuE,IAAoB5vC,KAAKguC,aACzB9gC,GACAlN,KAAKguC,cACJhuC,KAAKiuC,uBACNrC,IAAUxB,IACFpqC,KAAK2uC,mBAAmBvE,KACxBpqC,KAAKguC,YAAY5D,GRrIrC,SAA+Bl9B,EAAQ8gC,GACnC,MAAMgC,EAAsB,CAAC,EAO7B,YANwB9wC,IAApB8uC,EAAYh8B,MACZg+B,EAAoBh+B,IAAMg8B,EAAYh8B,IAAM9E,EAAO8E,UAE/B9S,IAApB8uC,EAAY/7B,MACZ+9B,EAAoB/9B,IAAM+7B,EAAY/7B,IAAM/E,EAAO8E,KAEhDg+B,CACX,CQ4H6CC,CAAsB/iC,EAAO2hC,UAAUzE,GAAOpqC,KAAKguC,YAAY5D,IAC5F,GAGZ,CACAyF,qBAAAA,GACI,MAAQH,gBAAiB1B,EAAW,yBAAEkC,GAA6BlwC,KAAK0kB,WACxE,IAAKspB,IAAgB9iC,EAAY8iC,GAC7B,OAAO,EACX,MAAMmC,EAAqBnC,EAAY3sC,QACvCwoB,GAAiC,OAAvBsmB,EAA6B,0GACvC,MAAM,WAAEh0B,GAAenc,KAAKuO,cAE5B,IAAK4N,IAAeA,EAAWjP,OAC3B,OAAO,EACX,MAAMkjC,EFpOd,SAAwBn0B,EAASo0B,EAAoBjmC,GACjD,MAAMkmC,EAAclD,GAAmBnxB,EAAS7R,IAC1C,OAAEmmC,GAAWF,EAKnB,OAJIE,IACA5D,GAAc2D,EAAYxsC,EAAGysC,EAAO52B,OAAO7V,GAC3C6oC,GAAc2D,EAAYvsC,EAAGwsC,EAAO52B,OAAO5V,IAExCusC,CACX,CE4N+BE,CAAeL,EAAoBh0B,EAAWyJ,KAAM5lB,KAAKuO,cAAc6gC,yBAC9F,IAAIqB,ER9KZ,SAAiC5B,EAAWuB,GACxC,MAAO,CACHtsC,EAAGknC,GAA4B6D,EAAU/qC,EAAGssC,EAAetsC,GAC3DC,EAAGinC,GAA4B6D,EAAU9qC,EAAGqsC,EAAersC,GAEnE,CQyKkC2sC,CAAwBv0B,EAAWjP,OAAO2hC,UAAWuB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,ELtOpC,SAAgClgC,GAAW,IAAV,EAAElM,EAAC,EAAEC,GAAGiM,EACrC,MAAO,CAAE0E,IAAK3Q,EAAEiO,IAAK2C,MAAO7Q,EAAEmO,IAAK2C,OAAQ7Q,EAAEkO,IAAK4C,KAAM/Q,EAAEkO,IAC9D,CKoO6D4+B,CAAwBH,IACzEzwC,KAAKiuC,wBAA0B0C,EAC3BA,IACAF,EAAsB5E,GAAwB8E,GAEtD,CACA,OAAOF,CACX,CACAjO,cAAAA,CAAe7Y,GACX,MAAM,KAAE/c,EAAI,aAAEikC,EAAY,YAAExF,EAAW,eAAEyF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyBhxC,KAAK0kB,WACnGspB,EAAchuC,KAAKguC,aAAe,CAAC,EACnCiD,EAAqBrF,IAAUxB,IACjC,IAAKmF,GAAWnF,EAAMx9B,EAAM5M,KAAK+tC,kBAC7B,OAEJ,IAAIjvB,EAAckvB,GAAeA,EAAY5D,IAAU,CAAC,EACpD2G,IACAjyB,EAAa,CAAE9M,IAAK,EAAGC,IAAK,IAOhC,MAAMmlB,EAAkBiU,EAAc,IAAM,IACtClU,EAAgBkU,EAAc,GAAK,IACnCrU,EAAU,CACZvzB,KAAM,UACNkmB,SAAUknB,EAAelnB,EAASygB,GAAQ,EAC1ChT,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACRgb,KACAhyB,GAKP,OAAO9e,KAAKkxC,wBAAwB9G,EAAMpT,EAAQ,IAGtD,OAAO2C,QAAQrT,IAAI2qB,GAAoB3V,KAAK0V,EAChD,CACAE,uBAAAA,CAAwB9G,EAAMtrB,GAC1B,MAAM0wB,EAAYxvC,KAAK2uC,mBAAmBvE,GAC1C,OAAOoF,EAAUjkC,MAAMwzB,GAAmBqL,EAAMoF,EAAW,EAAG1wB,GAClE,CACAwvB,aAAAA,GACI1C,IAAUxB,GAASpqC,KAAK2uC,mBAAmBvE,GAAMlS,QACrD,CAOAyW,kBAAAA,CAAmBvE,GACf,MAAM+G,EAAU,QAAU/G,EAAKptB,cACzB5a,EAAQpC,KAAKuO,cAAcmW,WAC3B0sB,EAAsBhvC,EAAM+uC,GAClC,OAAOC,GAEDpxC,KAAKuO,cAAc+0B,SAAS8G,GAAOhoC,EAAM6J,QAAU7J,EAAM6J,QAAQm+B,QAAQlrC,IAAc,EACjG,CACAkvC,YAAAA,CAAaprB,GACT4oB,IAAUxB,IACN,MAAM,KAAEx9B,GAAS5M,KAAK0kB,WAEtB,IAAK6qB,GAAWnF,EAAMx9B,EAAM5M,KAAK+tC,kBAC7B,OACJ,MAAM,WAAE5xB,GAAenc,KAAKuO,cACtBihC,EAAYxvC,KAAK2uC,mBAAmBvE,GAC1C,GAAIjuB,GAAcA,EAAWjP,OAAQ,CACjC,MAAM,IAAE8E,EAAG,IAAEC,GAAQkK,EAAWjP,OAAO2hC,UAAUzE,GACjDoF,EAAUvvC,IAAI+iB,EAAMonB,GAAQ5sB,GAAIxL,EAAKC,EAAK,IAC9C,IAER,CAMAo/B,8BAAAA,GACI,IAAKrxC,KAAKuO,cAAclN,QACpB,OACJ,MAAM,KAAEuL,EAAI,gBAAE8iC,GAAoB1vC,KAAK0kB,YACjC,WAAEvI,GAAenc,KAAKuO,cAC5B,IAAKrD,EAAYwkC,KAAqBvzB,IAAenc,KAAKguC,YACtD,OAKJhuC,KAAKsuC,gBAKL,MAAMgD,EAAc,CAAExtC,EAAG,EAAGC,EAAG,GAC/B6nC,IAAUxB,IACN,MAAMoF,EAAYxvC,KAAK2uC,mBAAmBvE,GAC1C,GAAIoF,EAAW,CACX,MAAMj1B,EAASi1B,EAAU9pC,MACzB4rC,EAAYlH,GRpR5B,SAAoBjyB,EAAQpY,GACxB,IAAI2Z,EAAS,GACb,MAAM63B,EAAepH,GAAWhyB,GAC1Bq5B,EAAerH,GAAWpqC,GAOhC,OANIyxC,EAAeD,EACf73B,EAASmV,GAAS9uB,EAAOiS,IAAKjS,EAAOkS,IAAMs/B,EAAcp5B,EAAOnG,KAE3Du/B,EAAeC,IACpB93B,EAASmV,GAAS1W,EAAOnG,IAAKmG,EAAOlG,IAAMu/B,EAAczxC,EAAOiS,MAE7DD,EAAM,EAAG,EAAG2H,EACvB,CQyQoCD,CAAW,CAAEzH,IAAKuI,EAAQtI,IAAKsI,GAAUva,KAAKguC,YAAY5D,GAClF,KAKJ,MAAM,kBAAEnzB,GAAsBjX,KAAKuO,cAAcmW,WACjD1kB,KAAKuO,cAAclN,QAAQ6V,MAAMpF,UAAYmF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNkF,EAAWyJ,MAAQzJ,EAAWyJ,KAAK6rB,eACnCt1B,EAAWu1B,eACX1xC,KAAKyuC,qBAKL7C,IAAUxB,IACN,IAAKmF,GAAWnF,EAAMx9B,EAAM,MACxB,OAIJ,MAAM4iC,EAAYxvC,KAAK2uC,mBAAmBvE,IACpC,IAAEp4B,EAAG,IAAEC,GAAQjS,KAAKguC,YAAY5D,GACtCoF,EAAUvvC,IAAIud,GAAIxL,EAAKC,EAAKq/B,EAAYlH,IAAO,GAEvD,CACAuH,YAAAA,GACI,IAAK3xC,KAAKuO,cAAclN,QACpB,OACJssC,GAAoB1tC,IAAID,KAAKuO,cAAevO,MAC5C,MAIM4xC,EAAsB1uB,GAJZljB,KAAKuO,cAAclN,QAIkB,eAAgBqhB,IACjE,MAAM,KAAE9V,EAAI,aAAE8L,GAAe,GAAS1Y,KAAK0kB,WAC3C9X,GAAQ8L,GAAgB1Y,KAAKuL,MAAMmX,EAAM,IAEvCmvB,EAAyBA,KAC3B,MAAM,gBAAEnC,GAAoB1vC,KAAK0kB,WAC7BxZ,EAAYwkC,KACZ1vC,KAAKguC,YAAchuC,KAAK6vC,wBAC5B,GAEE,WAAE1zB,GAAenc,KAAKuO,cACtBujC,EAA4B31B,EAAWoG,iBAAiB,UAAWsvB,GACrE11B,IAAeA,EAAWjP,SAC1BiP,EAAWyJ,MAAQzJ,EAAWyJ,KAAK6rB,eACnCt1B,EAAWu1B,gBAEfG,IAKA,MAAME,EAAqB5vB,GAAYzY,OAAQ,UAAU,IAAM1J,KAAKqxC,mCAK9DW,EAA2B71B,EAAWoG,iBAAiB,aAAc9U,IAAiC,IAAhC,MAAE6S,EAAK,iBAAE2xB,GAAkBxkC,EAC/FzN,KAAK8tC,YAAcmE,IACnBrG,IAAUxB,IACN,MAAMrH,EAAc/iC,KAAK2uC,mBAAmBvE,GACvCrH,IAEL/iC,KAAKwqC,YAAYJ,IAAS9pB,EAAM8pB,GAAMK,UACtC1H,EAAY9iC,IAAI8iC,EAAYr9B,MAAQ4a,EAAM8pB,GAAMK,WAAU,IAE9DzqC,KAAKuO,cAActN,SACvB,IAEJ,MAAO,KACH8wC,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACAttB,QAAAA,GACI,MAAMtiB,EAAQpC,KAAKuO,cAAcmW,YAC3B,KAAE9X,GAAO,EAAK,kBAAEkiC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEmB,GAAkB,EAAK,YAAErE,EAAcF,GAAc,aAAE0F,GAAe,GAAUzuC,EAC1J,MAAO,IACAA,EACHwK,OACAkiC,oBACAP,kBACAmB,kBACArE,cACAwF,eAER,EAEJ,SAAStB,GAAW9S,EAAW7vB,EAAMmhC,GACjC,QAAkB,IAATnhC,GAAiBA,IAAS6vB,KACT,OAArBsR,GAA6BA,IAAqBtR,EAC3D,CCtbA,MAAMyV,GAAgB7vB,GAAY,CAACK,EAAO+B,KAClCpC,GACAxC,GAAM5Q,QAAO,IAAMoT,EAAQK,EAAO+B,IACtC,ECLJ,MAAM0tB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnI,GAC7B,OAAIA,EAAKn4B,MAAQm4B,EAAKp4B,IACX,EACHugC,GAAUnI,EAAKn4B,IAAMm4B,EAAKp4B,KAAQ,GAC9C,CAQA,MAAMwgC,GAAsB,CACxBC,QAASA,CAACl4B,EAAQ4J,KACd,IAAKA,EAAKpkB,OACN,OAAOwa,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIlH,GAAGxC,KAAK0J,GAIR,OAAOA,EAHPA,EAASlI,WAAWkI,EAK5B,CAKA,MAAMzW,EAAIwuC,GAAgB/3B,EAAQ4J,EAAKpkB,OAAO+D,GACxCC,EAAIuuC,GAAgB/3B,EAAQ4J,EAAKpkB,OAAOgE,GAC9C,MAAO,GAAPmP,OAAUpP,EAAC,MAAAoP,OAAKnP,EAAC,OCjCnB2uC,GAAmB,CACrBD,QAASA,CAACl4B,EAAM9M,KAAqC,IAAnC,UAAEklC,EAAS,gBAAEC,GAAiBnlC,EAC5C,MAAMolC,EAAWt4B,EACXu4B,EAAShiB,GAAQ1e,MAAMmI,GAE7B,GAAIu4B,EAAOtrC,OAAS,EAChB,OAAOqrC,EACX,MAAMlhB,EAAWb,GAAQJ,kBAAkBnW,GACrCZ,EAA8B,kBAAdm5B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB9uC,EAAEyO,MAAQogC,EAAU7uC,EAC7CkvC,EAASJ,EAAgB7uC,EAAEwO,MAAQogC,EAAU5uC,EACnD+uC,EAAO,EAAIn5B,IAAWo5B,EACtBD,EAAO,EAAIn5B,IAAWq5B,EAOtB,MAAMC,EAAez1B,GAAIu1B,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAIn5B,KAClBm5B,EAAO,EAAIn5B,IAAWs5B,GAEQ,kBAAvBH,EAAO,EAAIn5B,KAClBm5B,EAAO,EAAIn5B,IAAWs5B,GACnBthB,EAASmhB,EAAO,GCpB/B,MAAMI,WAAiCC,EAAAA,UAMnChrC,iBAAAA,GACI,MAAM,cAAEoG,EAAa,YAAE6kC,EAAW,kBAAEC,EAAiB,SAAEjlC,GAAapO,KAAKoC,OACnE,WAAE+Z,GAAe5N,EhJjB/B,IAA2B+kC,IgJkBDC,GhJjBtB30C,OAAOyZ,OAAOvH,EAAiBwiC,GgJkBvBn3B,IACIi3B,EAAYI,OACZJ,EAAYI,MAAMn0B,IAAIlD,GACtBk3B,GAAqBA,EAAkBzxC,UAAYwM,GACnDilC,EAAkBzxC,SAASua,GAE/BA,EAAWyJ,KAAK6tB,YAChBt3B,EAAWoG,iBAAiB,qBAAqB,KAC7CviB,KAAK0zC,cAAc,IAEvBv3B,EAAWw3B,WAAW,IACfx3B,EAAW1Z,QACdulC,eAAgBA,IAAMhoC,KAAK0zC,kBAGnCvB,GAAsBE,gBAAiB,CAC3C,CACAuB,uBAAAA,CAAwBh3B,GACpB,MAAM,iBAAEi3B,EAAgB,cAAEtlC,EAAa,KAAE3B,EAAI,UAAEm7B,GAAc/nC,KAAKoC,MAC5D+Z,EAAa5N,EAAc4N,WACjC,OAAKA,GASLA,EAAW4rB,UAAYA,EACnBn7B,GACAgQ,EAAUi3B,mBAAqBA,QACV30C,IAArB20C,EACA13B,EAAW23B,aAGX9zC,KAAK0zC,eAEL92B,EAAUmrB,YAAcA,IACpBA,EACA5rB,EAAW43B,UAEL53B,EAAW63B,YAMjBn0B,GAAMyhB,YAAW,KACb,MAAM2S,EAAQ93B,EAAW+3B,WACpBD,GAAUA,EAAME,QAAQ3sC,QACzBxH,KAAK0zC,cACT,KAIL,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAEj4B,GAAenc,KAAKoC,MAAMmM,cAC9B4N,IACAA,EAAWyJ,KAAK6tB,YAChBY,gBAAe,MACNl4B,EAAWm4B,kBAAoBn4B,EAAWo4B,UAC3Cv0C,KAAK0zC,cACT,IAGZ,CACAc,oBAAAA,GACI,MAAM,cAAEjmC,EAAa,YAAE6kC,EAAaC,kBAAmBoB,GAAoBz0C,KAAKoC,OAC1E,WAAE+Z,GAAe5N,EACnB4N,IACAA,EAAWu4B,4BACPtB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMj0B,OAAOpD,GACzBs4B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWx4B,GAEtC,CACAu3B,YAAAA,GACI,MAAM,aAAEA,GAAiB1zC,KAAKoC,MAC9BsxC,GAAgBA,GACpB,CACAzyC,MAAAA,GACI,OAAO,IACX,EAEJ,SAASiN,GAAc9L,GACnB,MAAO2lC,EAAW2L,GCnFtB,WACI,MAAMrtC,GAAU+F,EAAAA,EAAAA,YAAW5B,GAC3B,GAAgB,OAAZnE,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE0hC,EAAS,eAAEC,EAAc,SAAEpmC,GAAayE,EAG1C6J,GAAK0kC,EAAAA,EAAAA,SAGX,OAFA3rC,EAAAA,EAAAA,YAAU,IAAMrH,EAASsO,IAAK,KAEtB63B,GAAaC,EAAiB,EAAC,EADlB0L,IAAM1L,GAAkBA,EAAe93B,IACE,EAAC,EACnE,CDwEsC2kC,GAC5BzB,GAAchnC,EAAAA,EAAAA,YAAWiB,GAC/B,OAAQ8lC,EAAAA,cAA6BD,GAA0B,IAAK9wC,EAAOgxC,YAAaA,EAAaC,mBAAmBjnC,EAAAA,EAAAA,YAAWkB,GAA2By6B,UAAWA,EAAW2L,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3Bv/B,aAAc,IACPw+B,GACHsC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR5gC,oBAAqBs+B,GACrBr+B,qBAAsBq+B,GACtBn+B,uBAAwBm+B,GACxBp+B,wBAAyBo+B,GACzBuC,UAAWrC,IEzHTsC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQxtC,OACrB0tC,GAAYx1C,GAA2B,kBAAVA,EAAqB2S,WAAW3S,GAASA,EACtEy1C,GAAQz1C,GAA2B,kBAAVA,GAAsB2T,GAAGxC,KAAKnR,GA0C7D,SAAS01C,GAAUz5B,EAAQ05B,GACvB,YAA8Bn2C,IAAvByc,EAAO05B,GACR15B,EAAO05B,GACP15B,EAAO3H,YACjB,CAwBA,MAAMshC,GAAkBC,GAAS,EAAG,GAAKxqB,IACnCyqB,GAAmBD,GAAS,GAAK,IAAMv2B,IAC7C,SAASu2B,GAASvjC,EAAKC,EAAKmY,GACxB,OAAQhhB,GAEAA,EAAI4I,EACG,EACP5I,EAAI6I,EACG,EACJmY,EAAOyE,GAAS7c,EAAKC,EAAK7I,GAEzC,CCrFA,SAASqsC,GAAarL,EAAMsL,GACxBtL,EAAKp4B,IAAM0jC,EAAW1jC,IACtBo4B,EAAKn4B,IAAMyjC,EAAWzjC,GAC1B,CAMA,SAAS0jC,GAAYpJ,EAAKqJ,GACtBH,GAAalJ,EAAIzoC,EAAG8xC,EAAU9xC,GAC9B2xC,GAAalJ,EAAIxoC,EAAG6xC,EAAU7xC,EAClC,CCVA,SAAS8xC,GAAiB7yB,EAAOynB,EAAWl4B,EAAOi4B,EAAa4B,GAM5D,OAJAppB,EAAQkpB,GADRlpB,GAASynB,EACiB,EAAIl4B,EAAOi4B,QACpBtrC,IAAbktC,IACAppB,EAAQkpB,GAAWlpB,EAAO,EAAIopB,EAAU5B,IAErCxnB,CACX,CAsBA,SAAS8yB,GAAqB1L,EAAMyC,EAAUp/B,EAA8BiM,EAAQq8B,GAAY,IAA/C3yC,EAAK0pC,EAAUC,GAAUt/B,GAlB1E,SAAyB28B,GAA8F,IAAxFK,EAASriC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGmK,EAAKnK,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAAGsR,EAAMtR,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,GAAKgkC,EAAQhkC,UAAAZ,OAAA,EAAAY,UAAA,QAAAlJ,EAAEw2C,EAAUttC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAGgiC,EAAM2L,EAAU3tC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAGgiC,EACzGh3B,EAAQvC,KAAK45B,KACbA,EAAYp4B,WAAWo4B,GAEvBA,EADyBjtB,GAAIu4B,EAAW/jC,IAAK+jC,EAAW9jC,IAAKw4B,EAAY,KAC1CsL,EAAW/jC,KAE9C,GAAyB,kBAAdy4B,EACP,OACJ,IAAID,EAAchtB,GAAIk4B,EAAW1jC,IAAK0jC,EAAWzjC,IAAKyH,GAClD0wB,IAASsL,IACTlL,GAAeC,GACnBL,EAAKp4B,IAAM6jC,GAAiBzL,EAAKp4B,IAAKy4B,EAAWl4B,EAAOi4B,EAAa4B,GACrEhC,EAAKn4B,IAAM4jC,GAAiBzL,EAAKn4B,IAAKw4B,EAAWl4B,EAAOi4B,EAAa4B,EACzE,CAMI4J,CAAgB5L,EAAMyC,EAAWzpC,GAAMypC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWt6B,MAAOmH,EAAQq8B,EAClH,CAIA,MAAM9I,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS+I,GAAoB1J,EAAKM,EAAY+I,EAAWM,GACrDJ,GAAqBvJ,EAAIzoC,EAAG+oC,EAAYI,GAAO2I,EAAYA,EAAU9xC,OAAI5E,EAAWg3C,EAAYA,EAAUpyC,OAAI5E,GAC9G42C,GAAqBvJ,EAAIxoC,EAAG8oC,EAAYK,GAAO0I,EAAYA,EAAU7xC,OAAI7E,EAAWg3C,EAAYA,EAAUnyC,OAAI7E,EAClH,CCjDA,SAASi3C,GAAgB71B,GACrB,OAA2B,IAApBA,EAAMmqB,WAAmC,IAAhBnqB,EAAM/N,KAC1C,CACA,SAAS6jC,GAAY91B,GACjB,OAAO61B,GAAgB71B,EAAMxc,IAAMqyC,GAAgB71B,EAAMvc,EAC7D,CAOA,SAASsyC,GAAiBxtC,EAAGC,GACzB,OAAQoJ,KAAKQ,MAAM7J,EAAE/E,EAAEkO,OAASE,KAAKQ,MAAM5J,EAAEhF,EAAEkO,MAC3CE,KAAKQ,MAAM7J,EAAE/E,EAAEmO,OAASC,KAAKQ,MAAM5J,EAAEhF,EAAEmO,MACvCC,KAAKQ,MAAM7J,EAAE9E,EAAEiO,OAASE,KAAKQ,MAAM5J,EAAE/E,EAAEiO,MACvCE,KAAKQ,MAAM7J,EAAE9E,EAAEkO,OAASC,KAAKQ,MAAM5J,EAAE/E,EAAEkO,IAC/C,CACA,SAASqkC,GAAY/J,GACjB,OAAOpC,GAAWoC,EAAIzoC,GAAKqmC,GAAWoC,EAAIxoC,EAC9C,CCpBA,MAAMwyC,GACFpwC,WAAAA,GACInG,KAAKm0C,QAAU,EACnB,CACA90B,GAAAA,CAAI8E,GACAmc,GAActgC,KAAKm0C,QAAShwB,GAC5BA,EAAKqyB,gBACT,CACAj3B,MAAAA,CAAO4E,GAKH,GAJAqc,GAAWxgC,KAAKm0C,QAAShwB,GACrBA,IAASnkB,KAAKy2C,WACdz2C,KAAKy2C,cAAWv3C,GAEhBilB,IAASnkB,KAAK02C,KAAM,CACpB,MAAMD,EAAWz2C,KAAKm0C,QAAQn0C,KAAKm0C,QAAQ3sC,OAAS,GAChDivC,GACAz2C,KAAK+zC,QAAQ0C,EAErB,CACJ,CACAzC,QAAAA,CAAS7vB,GACL,MAAMwyB,EAAc32C,KAAKm0C,QAAQyC,WAAWC,GAAW1yB,IAAS0yB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIhvC,EAAIkvC,EAAalvC,GAAK,EAAGA,IAAK,CACnC,MAAMovC,EAAS72C,KAAKm0C,QAAQ1sC,GAC5B,IAAyB,IAArBovC,EAAO9O,UAAqB,CAC5B0O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAz2C,KAAK+zC,QAAQ0C,IACN,EAKf,CACA1C,OAAAA,CAAQ5vB,EAAM2yB,GACV,MAAML,EAAWz2C,KAAK02C,KACtB,GAAIvyB,IAASsyB,IAEbz2C,KAAKy2C,SAAWA,EAChBz2C,KAAK02C,KAAOvyB,EACZA,EAAK4yB,OACDN,GAAU,CACVA,EAAS7mC,UAAY6mC,EAASD,iBAC9BryB,EAAKqyB,iBACLryB,EAAK6yB,WAAaP,EACdK,IACA3yB,EAAK6yB,WAAWC,iBAAkB,GAElCR,EAASS,WACT/yB,EAAK+yB,SAAWT,EAASS,SACzB/yB,EAAK+yB,SAASlgC,aACVy/B,EAASU,iBAAmBV,EAASz/B,cAEzCmN,EAAKyB,MAAQzB,EAAKyB,KAAKwxB,aACvBjzB,EAAKkzB,eAAgB,GAEzB,MAAM,UAAEC,GAAcnzB,EAAK1hB,SACT,IAAd60C,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACIx3C,KAAKm0C,QAAQ70C,SAAS6kB,IAClB,MAAM,QAAE1hB,EAAO,aAAEg1C,GAAiBtzB,EAClC1hB,EAAQulC,gBAAkBvlC,EAAQulC,iBAC9ByP,GACAA,EAAah1C,QAAQulC,gBACjByP,EAAah1C,QAAQulC,gBAC7B,GAER,CACAwO,cAAAA,GACIx2C,KAAKm0C,QAAQ70C,SAAS6kB,IAClBA,EAAKvU,UAAYuU,EAAKqyB,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQ13C,KAAK02C,MAAQ12C,KAAK02C,KAAKQ,WACvBl3C,KAAK02C,KAAKQ,cAAWh4C,EAE7B,EC5GJ,SAASy4C,GAAyBr3B,EAAOqyB,EAAWiF,GAChD,IAAI9lC,EAAY,GAOhB,MAAM+lC,EAAav3B,EAAMxc,EAAE2mC,UAAYkI,EAAU7uC,EAC3Cg0C,EAAax3B,EAAMvc,EAAE0mC,UAAYkI,EAAU5uC,EAWjD,IAVI8zC,GAAcC,KACdhmC,EAAY,eAAHoB,OAAkB2kC,EAAU,QAAA3kC,OAAO4kC,EAAU,YAMtC,IAAhBnF,EAAU7uC,GAA2B,IAAhB6uC,EAAU5uC,IAC/B+N,GAAa,SAAJoB,OAAa,EAAIy/B,EAAU7uC,EAAC,MAAAoP,OAAK,EAAIy/B,EAAU5uC,EAAC,OAEzD6zC,EAAiB,CACjB,MAAM,OAAEpiC,EAAM,QAAEC,EAAO,QAAEC,GAAYkiC,EACjCpiC,IACA1D,GAAa,UAAJoB,OAAcsC,EAAM,UAC7BC,IACA3D,GAAa,WAAJoB,OAAeuC,EAAO,UAC/BC,IACA5D,GAAa,WAAJoB,OAAewC,EAAO,SACvC,CAKA,MAAMqiC,EAAgBz3B,EAAMxc,EAAEyO,MAAQogC,EAAU7uC,EAC1Ck0C,EAAgB13B,EAAMvc,EAAEwO,MAAQogC,EAAU5uC,EAIhD,OAHsB,IAAlBg0C,GAAyC,IAAlBC,IACvBlmC,GAAa,SAAJoB,OAAa6kC,EAAa,MAAA7kC,OAAK8kC,EAAa,MAElDlmC,GAAa,MACxB,CCvCA,MAAMmmC,GAAiBA,CAACpvC,EAAGC,IAAMD,EAAEqvC,MAAQpvC,EAAEovC,MCG7C,MAAMC,GACFhyC,WAAAA,GACInG,KAAK8b,SAAW,GAChB9b,KAAKo4C,SAAU,CACnB,CACA/4B,GAAAA,CAAIyF,GACAwb,GAActgC,KAAK8b,SAAUgJ,GAC7B9kB,KAAKo4C,SAAU,CACnB,CACA74B,MAAAA,CAAOuF,GACH0b,GAAWxgC,KAAK8b,SAAUgJ,GAC1B9kB,KAAKo4C,SAAU,CACnB,CACA94C,OAAAA,CAAQjB,GACJ2B,KAAKo4C,SAAWp4C,KAAK8b,SAASopB,KAAK+S,IACnCj4C,KAAKo4C,SAAU,EACfp4C,KAAK8b,SAASxc,QAAQjB,EAC1B,ECMJ,MAAMg6C,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIroC,GAAK,EAKT,MAAMsoC,GAAsB,CACxB/0C,KAAM,kBACNg1C,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoBnrC,GAA6F,IAA5F,qBAAEorC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBxrC,EACpH,OAAO,MACHtH,WAAAA,GAAuH,IAA3G6Q,EAAY5O,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoG,EAAMpG,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAqB,OAAlB0wC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlG94C,KAAKkQ,GAAKA,KAIVlQ,KAAKk5C,YAAc,EAOnBl5C,KAAK8b,SAAW,IAAI7K,IAKpBjR,KAAKyC,QAAU,CAAC,EAMhBzC,KAAKm5C,iBAAkB,EACvBn5C,KAAK0uC,oBAAqB,EAO1B1uC,KAAKq3C,eAAgB,EAKrBr3C,KAAKo5C,mBAAoB,EAKzBp5C,KAAKq5C,yBAA0B,EAK/Br5C,KAAKs5C,kBAAmB,EAIxBt5C,KAAKu5C,uBAAwB,EAC7Bv5C,KAAKw5C,uBAAwB,EAK7Bx5C,KAAKo3C,YAAa,EAIlBp3C,KAAKy5C,OAAQ,EAKbz5C,KAAK05C,YAAa,EAIlB15C,KAAK25C,sBAAuB,EAS5B35C,KAAK2yC,UAAY,CAAE7uC,EAAG,EAAGC,EAAG,GAI5B/D,KAAK45C,cAAgB,IAAI/6C,IACzBmB,KAAK65C,iBAAkB,EAEvB75C,KAAK85C,iBAAkB,EACvB95C,KAAK+5C,2BAA4B,EACjC/5C,KAAKg6C,kBAAoB,KACjBh6C,KAAKo3C,aACLp3C,KAAKo3C,YAAa,EAClBp3C,KAAKi6C,oBACT,EAOJj6C,KAAKk6C,iBAAmB,KCnJpC,IAAgBC,EDoJAn6C,KAAK+5C,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ34C,KAAKo6C,MAAM96C,QAAQ+6C,IACnBr6C,KAAKo6C,MAAM96C,QAAQg7C,IACnBt6C,KAAKo6C,MAAM96C,QAAQi7C,IACnBv6C,KAAKo6C,MAAM96C,QAAQk7C,IChKnBL,EDiKO3B,GChKf9uC,OAAO+wC,aACP/wC,OAAO+wC,YAAYC,OAAOP,ED+JS,EAE/Bn6C,KAAK26C,cAAe,EACpB36C,KAAK46C,WAAY,EACjB56C,KAAK66C,kBAAoB,EAKzB76C,KAAK86C,YAAc,IAAIj8C,IACvBmB,KAAKgX,aAAeA,EACpBhX,KAAK4lB,KAAOpX,EAASA,EAAOoX,MAAQpX,EAASxO,KAC7CA,KAAK+6C,KAAOvsC,EAAS,IAAIA,EAAOusC,KAAMvsC,GAAU,GAChDxO,KAAKwO,OAASA,EACdxO,KAAKk4C,MAAQ1pC,EAASA,EAAO0pC,MAAQ,EAAI,EACzC,IAAK,IAAIzwC,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAClCzH,KAAK+6C,KAAKtzC,GAAGkyC,sBAAuB,EAEpC35C,KAAK4lB,OAAS5lB,OACdA,KAAKo6C,MAAQ,IAAIjC,GACzB,CACA51B,gBAAAA,CAAiB3hB,EAAMyhB,GAInB,OAHKriB,KAAK45C,cAAcnpC,IAAI7P,IACxBZ,KAAK45C,cAAc35C,IAAIW,EAAM,IAAI6/B,IAE9BzgC,KAAK45C,cAAcl0C,IAAI9E,GAAMye,IAAIgD,EAC5C,CACA24B,eAAAA,CAAgBp6C,GACZ,MAAMq6C,EAAsBj7C,KAAK45C,cAAcl0C,IAAI9E,GAAM,QAAAyiB,EAAAjb,UAAAZ,OADpCnD,EAAI,IAAA+G,MAAAiY,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJlf,EAAIkf,EAAA,GAAAnb,UAAAmb,GAEzB03B,GAAuBA,EAAoBta,UAAUt8B,EACzD,CACA62C,YAAAA,CAAat6C,GACT,OAAOZ,KAAK45C,cAAcnpC,IAAI7P,EAClC,CAIAiP,KAAAA,CAAMD,GAAqD,IAA3CynC,EAAajvC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAGpI,KAAK4lB,KAAKi0B,gBACtC,GAAI75C,KAAK4P,SACL,OExMhB,IAAsBqM,EFyMVjc,KAAKy5C,OEzMKx9B,EFyMgBrM,aExMRurC,YAAkC,QAApBl/B,EAAQgG,QFyMxCjiB,KAAK4P,SAAWA,EAChB,MAAM,SAAExB,EAAQ,OAAElB,EAAM,cAAEqB,GAAkBvO,KAAKyC,QASjD,GARI8L,IAAkBA,EAAclN,SAChCkN,EAAcsB,MAAMD,GAExB5P,KAAK4lB,KAAKw0B,MAAM/6B,IAAIrf,MACpBA,KAAKwO,QAAUxO,KAAKwO,OAAOsN,SAASuD,IAAIrf,MACpCq3C,IAAkBnqC,GAAUkB,KAC5BpO,KAAKq3C,eAAgB,GAErBwB,EAAsB,CACtB,IAAIuC,EACJ,MAAMC,EAAsBA,IAAOr7C,KAAK4lB,KAAK4zB,uBAAwB,EACrEX,EAAqBjpC,GAAU,KAC3B5P,KAAK4lB,KAAK4zB,uBAAwB,EAClC4B,GAAeA,IACfA,EGrNpB,SAAe/8C,EAAUi9C,GACrB,MAAM/vC,EAAQiW,YAAYriB,MACpBo8C,EAAe9tC,IAAmB,IAAlB,UAAE8S,GAAW9S,EAC/B,MAAMktB,EAAUpa,EAAYhV,EACxBovB,GAAW2gB,IACXv7B,GAAYw7B,GACZl9C,EAASs8B,EAAU2gB,GACvB,EAGJ,OADAz7B,GAAMiC,KAAKy5B,GAAc,GAClB,IAAMx7B,GAAYw7B,EAC7B,CH0MkCziB,CAAMuiB,EAAqB,KACrClJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CpyC,KAAKo6C,MAAM96C,QAAQk8C,IACvB,GAER,CACIptC,GACApO,KAAK4lB,KAAK61B,mBAAmBrtC,EAAUpO,OAGd,IAAzBA,KAAKyC,QAAQkJ,SACb4C,IACCH,GAAYlB,IACblN,KAAKuiB,iBAAiB,aAAavS,IAA+E,IAA9E,MAAEsQ,EAAK,iBAAE2xB,EAAgB,yBAAEyJ,EAA0BxuC,OAAQyuC,GAAY3rC,EACzG,GAAIhQ,KAAK47C,yBAGL,OAFA57C,KAAKD,YAASb,OACdc,KAAK67C,oBAAiB38C,GAI1B,MAAM48C,EAAmB97C,KAAKyC,QAAQqc,YAClCvQ,EAAc+uB,wBACdye,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B1tC,EAAcmW,WAKvEw3B,GAAiBl8C,KAAKm8C,eACvB9F,GAAiBr2C,KAAKm8C,aAAcR,IACrCD,EAMEU,GAAgCnK,GAAoByJ,EAC1D,GAAI17C,KAAKyC,QAAQ45C,YACZr8C,KAAKg3C,YAAch3C,KAAKg3C,WAAWpnC,UACpCwsC,GACCnK,IACIiK,IAAkBl8C,KAAKs0C,kBAAoB,CAC5Ct0C,KAAKg3C,aACLh3C,KAAKy3C,aAAez3C,KAAKg3C,WACzBh3C,KAAKy3C,aAAaA,kBAAev4C,GAErCc,KAAKs8C,mBAAmBh8B,EAAO87B,GAC/B,MAAMG,EAAmB,IAClBzd,GAAmBgd,EAAkB,UACxC1iB,OAAQ4iB,EACR1iB,WAAY2iB,IAEZ1tC,EAAck2B,oBACdzkC,KAAKyC,QAAQ45C,cACbE,EAAiBzjB,MAAQ,EACzByjB,EAAiB94C,MAAO,GAE5BzD,KAAKwiC,eAAe+Z,EACxB,MAOStK,GACDuJ,GAAgBx7C,MAEhBA,KAAKu0C,UAAYv0C,KAAKyC,QAAQulC,gBAC9BhoC,KAAKyC,QAAQulC,iBAGrBhoC,KAAKm8C,aAAeR,CAAS,GAGzC,CACA7rC,OAAAA,GACI9P,KAAKyC,QAAQ2L,UAAYpO,KAAK8zC,aAC9B9zC,KAAK4lB,KAAKw0B,MAAM76B,OAAOvf,MACvB,MAAMi0C,EAAQj0C,KAAKk0C,WACnBD,GAASA,EAAM10B,OAAOvf,MACtBA,KAAKwO,QAAUxO,KAAKwO,OAAOsN,SAASnc,OAAOK,MAC3CA,KAAK4P,cAAW1Q,EAChB6gB,GAAY/f,KAAKk6C,iBACrB,CAEAsC,WAAAA,GACIx8C,KAAKu5C,uBAAwB,CACjC,CACAkD,aAAAA,GACIz8C,KAAKu5C,uBAAwB,CACjC,CACAmD,eAAAA,GACI,OAAO18C,KAAKu5C,uBAAyBv5C,KAAKw5C,qBAC9C,CACAoC,sBAAAA,GACI,OAAQ57C,KAAK0uC,oBACR1uC,KAAKwO,QAAUxO,KAAKwO,OAAOotC,2BAC5B,CACR,CAEAe,WAAAA,GACQ38C,KAAK08C,oBAET18C,KAAKo3C,YAAa,EAClBp3C,KAAKo6C,OAASp6C,KAAKo6C,MAAM96C,QAAQs9C,IACjC58C,KAAKk5C,cACT,CACA2D,oBAAAA,GACI,MAAM,cAAEtuC,GAAkBvO,KAAKyC,QAC/B,OAAO8L,GAAiBA,EAAcmW,WAAWzN,iBACrD,CACA68B,UAAAA,GAAyC,IAA9BgJ,IAAqB10C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GAE5B,GADApI,KAAK4lB,KAAKi0B,iBAAkB,EACxB75C,KAAK4lB,KAAK82B,kBAEV,YADA18C,KAAKyC,QAAQulC,gBAAkBhoC,KAAKyC,QAAQulC,kBAIhD,IADChoC,KAAK4lB,KAAKwxB,YAAcp3C,KAAK4lB,KAAK+2B,cAC/B38C,KAAKq3C,cACL,OACJr3C,KAAKq3C,eAAgB,EACrB,IAAK,IAAI5vC,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAAK,CACvC,MAAM0c,EAAOnkB,KAAK+6C,KAAKtzC,GACvB0c,EAAKw1B,sBAAuB,EAC5Bx1B,EAAKstB,aAAa,YACdttB,EAAK1hB,QAAQ45C,YACbl4B,EAAK2vB,YAAW,EAExB,CACA,MAAM,SAAE1lC,EAAQ,OAAElB,GAAWlN,KAAKyC,QAClC,QAAiBvD,IAAbkP,IAA2BlB,EAC3B,OACJ,MAAM+J,EAAoBjX,KAAK68C,uBAC/B78C,KAAK+8C,2BAA6B9lC,EAC5BA,EAAkBjX,KAAKgX,aAAc,SACrC9X,EACNc,KAAKg9C,iBACLF,GAAyB98C,KAAKg7C,gBAAgB,aAClD,CACA/rC,MAAAA,GACIjP,KAAK85C,iBAAkB,EAKvB,GAJyB95C,KAAK08C,kBAQ1B,OAHA18C,KAAKy8C,gBACLz8C,KAAKi6C,yBACLj6C,KAAKo6C,MAAM96C,QAAQ29C,IAGlBj9C,KAAKo3C,YACNp3C,KAAKo6C,MAAM96C,QAAQ49C,IAEvBl9C,KAAKo3C,YAAa,EAIlBp3C,KAAKo6C,MAAM96C,QAAQ69C,IAKnBn9C,KAAKo6C,MAAM96C,QAAQoyC,IAKnB1xC,KAAKo6C,MAAM96C,QAAQ89C,IACnBp9C,KAAKi6C,oBAML,MAAM96C,EAAMqiB,YAAYriB,MACxB6gB,GAAUM,MAAQvO,EAAM,EAAG,IAAO,GAAI5S,EAAM6gB,GAAUO,WACtDP,GAAUO,UAAYphB,EACtB6gB,GAAUQ,cAAe,EACzBP,GAAMhR,OAAOqQ,QAAQU,IACrBC,GAAMo9B,UAAU/9B,QAAQU,IACxBC,GAAMhf,OAAOqe,QAAQU,IACrBA,GAAUQ,cAAe,CAC7B,CACAizB,SAAAA,GACSzzC,KAAK85C,kBACN95C,KAAK85C,iBAAkB,EACvBzF,gBAAe,IAAMr0C,KAAKiP,WAElC,CACAgrC,iBAAAA,GACIj6C,KAAKo6C,MAAM96C,QAAQg+C,IACnBt9C,KAAK86C,YAAYx7C,QAAQi+C,GAC7B,CACAC,wBAAAA,GACSx9C,KAAK+5C,4BACN/5C,KAAK+5C,2BAA4B,EACjCl6B,GAAMw9B,UAAUr9C,KAAKk6C,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMI70B,GAAMyhB,YAAW,KACTthC,KAAKq3C,cACLr3C,KAAK4lB,KAAK6tB,YAGVzzC,KAAK4lB,KAAKo0B,mBACd,GAER,CAIAgD,cAAAA,IACQh9C,KAAKk3C,UAAal3C,KAAK4P,WAE3B5P,KAAKk3C,SAAWl3C,KAAK2vC,UACzB,CACA+B,YAAAA,GACI,IAAK1xC,KAAK4P,SACN,OAGJ,GADA5P,KAAKyxC,iBACCzxC,KAAKyC,QAAQg7C,sBAAuBz9C,KAAKu0C,YAC1Cv0C,KAAKq3C,cACN,OASJ,GAAIr3C,KAAKg3C,aAAeh3C,KAAKg3C,WAAWpnC,SACpC,IAAK,IAAInI,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAAK,CAC1BzH,KAAK+6C,KAAKtzC,GAClBgqC,cACT,CAEJ,MAAMiM,EAAa19C,KAAKkN,OACxBlN,KAAKkN,OAASlN,KAAK2vC,SAAQ,GAC3B3vC,KAAK29C,gBAAkBhS,KACvB3rC,KAAKq3C,eAAgB,EACrBr3C,KAAK4yC,qBAAkB1zC,EACvBc,KAAKg7C,gBAAgB,UAAWh7C,KAAKkN,OAAO2hC,WAC5C,MAAM,cAAEtgC,GAAkBvO,KAAKyC,QAC/B8L,GACIA,EAAcoyB,OAAO,gBAAiB3gC,KAAKkN,OAAO2hC,UAAW6O,EAAaA,EAAW7O,eAAY3vC,EACzG,CACAuyC,YAAAA,GAAgC,IAAnBmM,EAAKx1C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,UACby1C,EAAmB/xC,QAAQ9L,KAAKyC,QAAQq7C,cAAgB99C,KAAK4P,UAC7D5P,KAAKuwC,QACLvwC,KAAKuwC,OAAO2I,cAAgBl5C,KAAK4lB,KAAKszB,aACtCl5C,KAAKuwC,OAAOqN,QAAUA,IACtBC,GAAmB,GAEnBA,IACA79C,KAAKuwC,OAAS,CACV2I,YAAal5C,KAAK4lB,KAAKszB,YACvB0E,QACAG,OAAQ/E,EAAkBh5C,KAAK4P,UAC/B+J,OAAQo/B,EAAc/4C,KAAK4P,WAGvC,CACAqpC,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM+E,EAAmBh+C,KAAKq3C,eAAiBr3C,KAAK25C,qBAC9CsE,EAAgBj+C,KAAK4yC,kBAAoBwD,GAAYp2C,KAAK4yC,iBAC1D37B,EAAoBjX,KAAK68C,uBACzBqB,EAAyBjnC,EACzBA,EAAkBjX,KAAKgX,aAAc,SACrC9X,EACAi/C,EAA8BD,IAA2Bl+C,KAAK+8C,2BAChEiB,IACCC,GACG5mC,GAAarX,KAAKgX,eAClBmnC,KACJlF,EAAej5C,KAAK4P,SAAUsuC,GAC9Bl+C,KAAK25C,sBAAuB,EAC5B35C,KAAKw2C,iBAEb,CACA7G,OAAAA,GAAgC,IAAxByO,IAAeh2C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GACnB,MAAMi2C,EAAUr+C,KAAKwwC,iBACrB,IAAI3B,EAAY7uC,KAAKs+C,oBAAoBD,GA+8BrD,IAAkB9R,EAr8BN,OAJI6R,IACAvP,EAAY7uC,KAAKo+C,gBAAgBvP,IAy8B7C0P,IADchS,EAt8BGsC,GAu8BH/qC,GACdy6C,GAAUhS,EAAIxoC,GAv8BC,CACHm1C,YAAal5C,KAAK4lB,KAAKszB,YACvBsF,YAAaH,EACbxP,YACA73B,aAAc,CAAC,EACfmB,OAAQnY,KAAKkQ,GAErB,CACAsgC,cAAAA,GACI,MAAM,cAAEjiC,GAAkBvO,KAAKyC,QAC/B,IAAK8L,EACD,OAAOo9B,KACX,MAAMY,EAAMh+B,EAAc6+B,sBAEpB,OAAEmD,GAAWvwC,KAAK4lB,KAKxB,OAJI2qB,IACA5D,GAAcJ,EAAIzoC,EAAGysC,EAAO52B,OAAO7V,GACnC6oC,GAAcJ,EAAIxoC,EAAGwsC,EAAO52B,OAAO5V,IAEhCwoC,CACX,CACA+R,mBAAAA,CAAoB/R,GAChB,MAAMkS,EAAmB9S,KACzBgK,GAAY8I,EAAkBlS,GAK9B,IAAK,IAAI9kC,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAAK,CACvC,MAAM0c,EAAOnkB,KAAK+6C,KAAKtzC,IACjB,OAAE8oC,EAAM,QAAE9tC,GAAY0hB,EAC5B,GAAIA,IAASnkB,KAAK4lB,MAAQ2qB,GAAU9tC,EAAQq7C,aAAc,CAKtD,GAAIvN,EAAOwN,OAAQ,CACfpI,GAAY8I,EAAkBlS,GAC9B,MAAQgE,OAAQmO,GAAe1+C,KAAK4lB,KAKhC84B,IACA/R,GAAc8R,EAAiB36C,GAAI46C,EAAW/kC,OAAO7V,GACrD6oC,GAAc8R,EAAiB16C,GAAI26C,EAAW/kC,OAAO5V,GAE7D,CACA4oC,GAAc8R,EAAiB36C,EAAGysC,EAAO52B,OAAO7V,GAChD6oC,GAAc8R,EAAiB16C,EAAGwsC,EAAO52B,OAAO5V,EACpD,CACJ,CACA,OAAO06C,CACX,CACAE,cAAAA,CAAepS,GAA4B,IAAvBqS,EAAax2C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAC7B,MAAMy2C,EAAiBlT,KACvBgK,GAAYkJ,EAAgBtS,GAC5B,IAAK,IAAI9kC,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAAK,CACvC,MAAM0c,EAAOnkB,KAAK+6C,KAAKtzC,IAClBm3C,GACDz6B,EAAK1hB,QAAQq7C,cACb35B,EAAKosB,QACLpsB,IAASA,EAAKyB,MACdunB,GAAa0R,EAAgB,CACzB/6C,GAAIqgB,EAAKosB,OAAO52B,OAAO7V,EACvBC,GAAIogB,EAAKosB,OAAO52B,OAAO5V,IAG1BsT,GAAa8M,EAAKnN,eAEvBm2B,GAAa0R,EAAgB16B,EAAKnN,aACtC,CAIA,OAHIK,GAAarX,KAAKgX,eAClBm2B,GAAa0R,EAAgB7+C,KAAKgX,cAE/B6nC,CACX,CACAT,eAAAA,CAAgB7R,GACZ,MAAMuS,EAAsBnT,KAC5BgK,GAAYmJ,EAAqBvS,GACjC,IAAK,IAAI9kC,EAAI,EAAGA,EAAIzH,KAAK+6C,KAAKvzC,OAAQC,IAAK,CACvC,MAAM0c,EAAOnkB,KAAK+6C,KAAKtzC,GACvB,IAAK0c,EAAKvU,SACN,SACJ,IAAKyH,GAAa8M,EAAKnN,cACnB,SACJ+0B,GAAS5nB,EAAKnN,eAAiBmN,EAAK64B,iBACpC,MAAM9G,EAAYvK,KAElBgK,GAAYO,EADI/xB,EAAKqsB,kBAErByF,GAAoB6I,EAAqB36B,EAAKnN,aAAcmN,EAAK+yB,SAAW/yB,EAAK+yB,SAASrI,eAAY3vC,EAAWg3C,EACrH,CAIA,OAHI7+B,GAAarX,KAAKgX,eAClBi/B,GAAoB6I,EAAqB9+C,KAAKgX,cAE3C8nC,CACX,CACAC,cAAAA,CAAez+B,GACXtgB,KAAKg/C,YAAc1+B,EACnBtgB,KAAK4lB,KAAK43B,2BACVx9C,KAAKo5C,mBAAoB,CAC7B,CACAzF,UAAAA,CAAWlxC,GACPzC,KAAKyC,QAAU,IACRzC,KAAKyC,WACLA,EACH60C,eAAiCp4C,IAAtBuD,EAAQ60C,WAA0B70C,EAAQ60C,UAE7D,CACA2F,iBAAAA,GACIj9C,KAAKuwC,YAASrxC,EACdc,KAAKkN,YAAShO,EACdc,KAAKk3C,cAAWh4C,EAChBc,KAAK+8C,gCAA6B79C,EAClCc,KAAKg/C,iBAAc9/C,EACnBc,KAAKD,YAASb,EACdc,KAAKq3C,eAAgB,CACzB,CACA4H,kCAAAA,GACSj/C,KAAKk/C,gBAQNl/C,KAAKk/C,eAAeC,2BACpBn/B,GAAUO,WACVvgB,KAAKk/C,eAAe5E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B8E,EAAkBh3C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GACjC,IAAIoR,EAMJ,MAAMk9B,EAAO12C,KAAKq/C,UAClBr/C,KAAKo5C,oBAAsBp5C,KAAKo5C,kBAAoB1C,EAAK0C,mBACzDp5C,KAAKs5C,mBAAqBt5C,KAAKs5C,iBAAmB5C,EAAK4C,kBACvDt5C,KAAKq5C,0BAA4Br5C,KAAKq5C,wBAA0B3C,EAAK2C,yBACrE,MAAMiG,EAAWxzC,QAAQ9L,KAAKy3C,eAAiBz3C,OAAS02C,EAUxD,KALkB0I,GACbE,GAAYt/C,KAAKq5C,yBAClBr5C,KAAKo5C,oBACmB,QAAtB5/B,EAAKxZ,KAAKwO,cAA2B,IAAPgL,OAAgB,EAASA,EAAG4/B,oBAC5Dp5C,KAAKu/C,gCAEL,OACJ,MAAM,OAAEryC,EAAM,SAAEkB,GAAapO,KAAKyC,QAIlC,GAAKzC,KAAKkN,SAAYA,GAAUkB,GAAhC,CASA,GAPApO,KAAKm/C,yBAA2Bn/B,GAAUO,WAOrCvgB,KAAKg/C,cAAgBh/C,KAAK67C,eAAgB,CAE3C,MAAMqD,EAAiBl/C,KAAKw/C,6BACxBN,GACAA,EAAehyC,QACY,IAA3BlN,KAAK66C,mBACL76C,KAAKk/C,eAAiBA,EACtBl/C,KAAKi/C,qCACLj/C,KAAK67C,eAAiBlQ,KACtB3rC,KAAKy/C,qBAAuB9T,KAC5Bb,GAAqB9qC,KAAKy/C,qBAAsBz/C,KAAKkN,OAAO2hC,UAAWqQ,EAAehyC,OAAO2hC,WAC7F8G,GAAY31C,KAAK67C,eAAgB77C,KAAKy/C,uBAGtCz/C,KAAKk/C,eAAiBl/C,KAAK67C,oBAAiB38C,CAEpD,CAKA,GAAKc,KAAK67C,gBAAmB77C,KAAKg/C,YAAlC,CxB5qBZ,IAAyBj/C,EAAQ6qC,EAAUp8B,EwBqtB/B,GApCKxO,KAAKD,SACNC,KAAKD,OAAS4rC,KACd3rC,KAAK0/C,qBAAuB/T,MAK5B3rC,KAAK67C,gBACL77C,KAAKy/C,sBACLz/C,KAAKk/C,gBACLl/C,KAAKk/C,eAAen/C,QACpBC,KAAKi/C,qCxB5rBIl/C,EwB6rBOC,KAAKD,OxB7rBJ6qC,EwB6rBY5qC,KAAK67C,exB7rBPrtC,EwB6rBuBxO,KAAKk/C,eAAen/C,OxB5rBlF4qC,GAAiB5qC,EAAO+D,EAAG8mC,EAAS9mC,EAAG0K,EAAO1K,GAC9C6mC,GAAiB5qC,EAAOgE,EAAG6mC,EAAS7mC,EAAGyK,EAAOzK,IwBgsB7B/D,KAAKg/C,aACNlzC,QAAQ9L,KAAKy3C,cAEbz3C,KAAKD,OAASC,KAAK2+C,eAAe3+C,KAAKkN,OAAO2hC,WAG9C8G,GAAY31C,KAAKD,OAAQC,KAAKkN,OAAO2hC,WAEzCvC,GAActsC,KAAKD,OAAQC,KAAKg/C,cAMhCrJ,GAAY31C,KAAKD,OAAQC,KAAKkN,OAAO2hC,WAKrC7uC,KAAKu/C,+BAAgC,CACrCv/C,KAAKu/C,gCAAiC,EACtC,MAAML,EAAiBl/C,KAAKw/C,6BACxBN,GACApzC,QAAQozC,EAAezH,gBACnB3rC,QAAQ9L,KAAKy3C,gBAChByH,EAAez8C,QAAQq7C,cACxBoB,EAAen/C,QACY,IAA3BC,KAAK66C,mBACL76C,KAAKk/C,eAAiBA,EACtBl/C,KAAKi/C,qCACLj/C,KAAK67C,eAAiBlQ,KACtB3rC,KAAKy/C,qBAAuB9T,KAC5Bb,GAAqB9qC,KAAKy/C,qBAAsBz/C,KAAKD,OAAQm/C,EAAen/C,QAC5E41C,GAAY31C,KAAK67C,eAAgB77C,KAAKy/C,uBAGtCz/C,KAAKk/C,eAAiBl/C,KAAK67C,oBAAiB38C,CAEpD,CAIAs5C,GAAoBE,sBA/DV,CA9BA,CA8Fd,CACA8G,0BAAAA,GACI,GAAKx/C,KAAKwO,SACNu9B,GAAS/rC,KAAKwO,OAAOwI,gBACrBg1B,GAAehsC,KAAKwO,OAAOwI,cAG/B,OAAIhX,KAAKwO,OAAOmxC,eACL3/C,KAAKwO,OAGLxO,KAAKwO,OAAOgxC,4BAE3B,CACAG,YAAAA,GACI,OAAO7zC,SAAS9L,KAAK67C,gBACjB77C,KAAKg/C,aACLh/C,KAAKyC,QAAQ45C,aACbr8C,KAAKkN,OACb,CACAqtC,cAAAA,GACI,IAAI/gC,EACJ,MAAMk9B,EAAO12C,KAAKq/C,UACZC,EAAWxzC,QAAQ9L,KAAKy3C,eAAiBz3C,OAAS02C,EACxD,IAAIlS,GAAU,EAuBd,IAlBIxkC,KAAKo5C,oBAA6C,QAAtB5/B,EAAKxZ,KAAKwO,cAA2B,IAAPgL,OAAgB,EAASA,EAAG4/B,sBACtF5U,GAAU,GAMV8a,IACCt/C,KAAKq5C,yBAA2Br5C,KAAKs5C,oBACtC9U,GAAU,GAMVxkC,KAAKm/C,2BAA6Bn/B,GAAUO,YAC5CikB,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEt3B,EAAM,SAAEkB,GAAapO,KAAKyC,QAWlC,GANAzC,KAAKm5C,gBAAkBrtC,QAAS9L,KAAKwO,QAAUxO,KAAKwO,OAAO2qC,iBACvDn5C,KAAKs0C,kBACLt0C,KAAK4/C,kBACJ5/C,KAAKm5C,kBACNn5C,KAAKg/C,YAAch/C,KAAK67C,oBAAiB38C,IAExCc,KAAKkN,SAAYA,IAAUkB,EAC5B,OAKJunC,GAAY31C,KAAK29C,gBAAiB39C,KAAKkN,OAAO2hC,WAI9C,MAAMgR,EAAiB7/C,KAAK2yC,UAAU7uC,EAChCg8C,EAAiB9/C,KAAK2yC,UAAU5uC,GlBvyBlD,SAAyBwoC,EAAKoG,EAAWoN,GAAsC,IAA5BC,EAAkB53C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GACjE,MAAM63C,EAAaF,EAASv4C,OAC5B,IAAKy4C,EACD,OAGJ,IAAI97B,EACA7D,EAFJqyB,EAAU7uC,EAAI6uC,EAAU5uC,EAAI,EAG5B,IAAK,IAAI0D,EAAI,EAAGA,EAAIw4C,EAAYx4C,IAAK,CACjC0c,EAAO47B,EAASt4C,GAChB6Y,EAAQ6D,EAAKyuB,gBAKb,MAAMhjC,EAAWuU,EAAKvU,SAClBA,GACAA,EAASsH,OACkB,aAA3BtH,EAASsH,MAAMgpC,UAGfF,GACA77B,EAAK1hB,QAAQq7C,cACb35B,EAAKosB,QACLpsB,IAASA,EAAKyB,MACdunB,GAAaZ,EAAK,CACdzoC,GAAIqgB,EAAKosB,OAAO52B,OAAO7V,EACvBC,GAAIogB,EAAKosB,OAAO52B,OAAO5V,IAG3Buc,IAEAqyB,EAAU7uC,GAAKwc,EAAMxc,EAAEyO,MACvBogC,EAAU5uC,GAAKuc,EAAMvc,EAAEwO,MAEvB+5B,GAAcC,EAAKjsB,IAEnB0/B,GAAsB3oC,GAAa8M,EAAKnN,eACxCm2B,GAAaZ,EAAKpoB,EAAKnN,cAE/B,CAKA27B,EAAU7uC,EAAI0oC,GAAcmG,EAAU7uC,GACtC6uC,EAAU5uC,EAAIyoC,GAAcmG,EAAU5uC,EAC1C,CkB6vBYo8C,CAAgBngD,KAAK29C,gBAAiB39C,KAAK2yC,UAAW3yC,KAAK+6C,KAAMuE,IAK7D5I,EAAKxpC,QACJwpC,EAAK32C,QACgB,IAArBC,KAAK2yC,UAAU7uC,GAAgC,IAArB9D,KAAK2yC,UAAU5uC,IAC1C2yC,EAAK32C,OAAS22C,EAAKxpC,OAAO2hC,WAE9B,MAAM,OAAE9uC,GAAW22C,EACnB,IAAK32C,EAWD,YALIC,KAAKogD,sBACLpgD,KAAK4yC,gBAAkBlH,KACvB1rC,KAAKogD,oBAAsB,OAC3BpgD,KAAKw2C,mBAIRx2C,KAAK4yC,kBACN5yC,KAAK4yC,gBAAkBlH,KACvB1rC,KAAKqgD,6BAA+B3U,MAExC,MAAM4U,EAA0BtgD,KAAKogD,oBAUrC1V,GAAa1qC,KAAK4yC,gBAAiB5yC,KAAK29C,gBAAiB59C,EAAQC,KAAKgX,cACtEhX,KAAKogD,oBAAsBzI,GAAyB33C,KAAK4yC,gBAAiB5yC,KAAK2yC,WAC3E3yC,KAAKogD,sBAAwBE,GAC7BtgD,KAAK2yC,UAAU7uC,IAAM+7C,GACrB7/C,KAAK2yC,UAAU5uC,IAAM+7C,IACrB9/C,KAAK26C,cAAe,EACpB36C,KAAKw2C,iBACLx2C,KAAKg7C,gBAAgB,mBAAoBj7C,IAK7Cy4C,GAAoBG,wBACxB,CACApB,IAAAA,GACIv3C,KAAK46C,WAAY,CAErB,CACA7D,IAAAA,GACI/2C,KAAK46C,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlB+J,IAASn4C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GAEpB,GADApI,KAAKyC,QAAQ+zC,gBAAkBx2C,KAAKyC,QAAQ+zC,iBACxC+J,EAAW,CACX,MAAMtM,EAAQj0C,KAAKk0C,WACnBD,GAASA,EAAMuC,gBACnB,CACIx2C,KAAKy3C,eAAiBz3C,KAAKy3C,aAAa7nC,WACxC5P,KAAKy3C,kBAAev4C,EAE5B,CACAo9C,kBAAAA,CAAmBh8B,GAA6C,IAAtC87B,EAA4Bh0C,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAClD,MAAM8uC,EAAWl3C,KAAKk3C,SAChBsJ,EAAuBtJ,EACvBA,EAASlgC,aACT,CAAC,EACDypC,EAAc,IAAKzgD,KAAKgX,cACxBgoC,EAActT,KACf1rC,KAAKk/C,gBACLl/C,KAAKk/C,eAAez8C,QAAQ45C,aAC7Br8C,KAAK67C,eAAiB77C,KAAKy/C,0BAAuBvgD,GAEtDc,KAAKu/C,gCAAkCnD,EACvC,MAAMsE,EAAiB/U,KAGjBgV,GAFiBzJ,EAAWA,EAAS/+B,YAASjZ,MAC/Bc,KAAKkN,OAASlN,KAAKkN,OAAOiL,YAASjZ,GAElD+0C,EAAQj0C,KAAKk0C,WACb0M,GAAgB3M,GAASA,EAAME,QAAQ3sC,QAAU,EACjDq5C,EAAyB/0C,QAAQ60C,IAClCC,IAC0B,IAA3B5gD,KAAKyC,QAAQ60C,YACZt3C,KAAK+6C,KAAKnvC,KAAKk1C,KAEpB,IAAIC,EADJ/gD,KAAK66C,kBAAoB,EAEzB76C,KAAKghD,eAAkBzmC,IACnB,MAAMsU,EAAWtU,EAAS,IL36B1C,IAAmB1R,EAAGC,EK66CN8nB,EAAQjC,EAAMC,EAAIxlB,EAjgBlB63C,GAAajC,EAAYl7C,EAAGwc,EAAMxc,EAAG+qB,GACrCoyB,GAAajC,EAAYj7C,EAAGuc,EAAMvc,EAAG8qB,GACrC7uB,KAAK++C,eAAeC,GAChBh/C,KAAK67C,gBACL77C,KAAKy/C,sBACLz/C,KAAKkN,QACLlN,KAAKk/C,gBACLl/C,KAAKk/C,eAAehyC,SACpB49B,GAAqB4V,EAAgB1gD,KAAKkN,OAAO2hC,UAAW7uC,KAAKk/C,eAAehyC,OAAO2hC,WAyf3Fje,EAxfW5wB,KAAK67C,eAwfRltB,EAxfwB3uB,KAAKy/C,qBAwfvB7wB,EAxf6C8xB,EAwfzCt3C,EAxfyDylB,EAyfvFqyB,GAAQtwB,EAAO9sB,EAAG6qB,EAAK7qB,EAAG8qB,EAAG9qB,EAAGsF,GAChC83C,GAAQtwB,EAAO7sB,EAAG4qB,EAAK5qB,EAAG6qB,EAAG7qB,EAAGqF,GArfZ23C,IL17BLl4C,EK27Be7I,KAAK67C,eL37BjB/yC,EK27BiCi4C,EL17B3Cl4C,EAAE/E,EAAEkO,MAAQlJ,EAAEhF,EAAEkO,KACpBnJ,EAAE/E,EAAEmO,MAAQnJ,EAAEhF,EAAEmO,KAChBpJ,EAAE9E,EAAEiO,MAAQlJ,EAAE/E,EAAEiO,KAChBnJ,EAAE9E,EAAEkO,MAAQnJ,EAAE/E,EAAEkO,OKw7BAjS,KAAKo5C,mBAAoB,GAExB2H,IACDA,EAAqBpV,MACzBgK,GAAYoL,EAAoB/gD,KAAK67C,iBAErC8E,IACA3gD,KAAKm3C,gBAAkBsJ,ERj8B3C,SAAmB1gD,EAAQohD,EAAQzK,EAAM7nB,EAAUgyB,EAAwBD,GACnEC,GACA9gD,EAAOwW,QAAUiH,GAAI,OAEJte,IAAjBw3C,EAAKngC,QAAwBmgC,EAAKngC,QAAU,EAAG++B,GAAgBzmB,IAC/D9uB,EAAOqhD,YAAc5jC,QAAuBte,IAAnBiiD,EAAO5qC,QAAwB4qC,EAAO5qC,QAAU,EAAG,EAAGi/B,GAAiB3mB,KAE3F+xB,IACL7gD,EAAOwW,QAAUiH,QAAuBte,IAAnBiiD,EAAO5qC,QAAwB4qC,EAAO5qC,QAAU,OAAoBrX,IAAjBw3C,EAAKngC,QAAwBmgC,EAAKngC,QAAU,EAAGsY,IAK3H,IAAK,IAAIpnB,EAAI,EAAGA,EAAIwtC,GAAYxtC,IAAK,CACjC,MAAM45C,EAAc,SAAHnuC,OAAY8hC,GAAQvtC,GAAE,UACvC,IAAI65C,EAAelM,GAAU+L,EAAQE,GACjCE,EAAanM,GAAUsB,EAAM2K,QACZniD,IAAjBoiD,QAA6CpiD,IAAfqiD,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACApM,GAAKmM,KAAkBnM,GAAKoM,IAE5BxhD,EAAOshD,GAAenvC,KAAKD,IAAIuL,GAAI03B,GAASoM,GAAepM,GAASqM,GAAa1yB,GAAW,IACxFzb,EAAQvC,KAAK0wC,IAAenuC,EAAQvC,KAAKywC,MACzCvhD,EAAOshD,IAAgB,MAI3BthD,EAAOshD,GAAeE,EAE9B,EAIIJ,EAAO3rC,QAAUkhC,EAAKlhC,UACtBzV,EAAOyV,OAASgI,GAAI2jC,EAAO3rC,QAAU,EAAGkhC,EAAKlhC,QAAU,EAAGqZ,GAElE,CQ05BoB2yB,CAAUf,EAAaD,EAAsBxgD,KAAKgX,aAAc6X,EAAUgyB,EAAwBD,IAEtG5gD,KAAK4lB,KAAK43B,2BACVx9C,KAAKw2C,iBACLx2C,KAAK66C,kBAAoBhsB,CAAQ,EAErC7uB,KAAKghD,eAAehhD,KAAKyC,QAAQ45C,WAAa,IAAO,EACzD,CACA7Z,cAAAA,CAAe//B,GACXzC,KAAKg7C,gBAAgB,kBACrBh7C,KAAKs0C,kBAAoBt0C,KAAKs0C,iBAAiBpc,OAC3Cl4B,KAAKy3C,cAAgBz3C,KAAKy3C,aAAanD,kBACvCt0C,KAAKy3C,aAAanD,iBAAiBpc,OAEnCl4B,KAAK4/C,mBACL7/B,GAAY/f,KAAK4/C,kBACjB5/C,KAAK4/C,sBAAmB1gD,GAO5Bc,KAAK4/C,iBAAmB//B,GAAM5Q,QAAO,KACjCkjC,GAAsBC,wBAAyB,EAC/CpyC,KAAKs0C,iBIj+BrB,SAA4B50C,EAAOyzB,EAAW1wB,GAC1C,MAAMg/C,EAAgBrwC,EAAc1R,GAASA,EAAQqjC,GAAYrjC,GAEjE,OADA+hD,EAAcl2C,MAAMwzB,GAAmB,GAAI0iB,EAAetuB,EAAW1wB,IAC9Dg/C,EAAc/0C,SACzB,CJ69BwCg1C,CAAmB,EAr8BnC,IAq8BuD,IACxDj/C,EACH82B,SAAWhf,IACPva,KAAKghD,eAAezmC,GACpB9X,EAAQ82B,UAAY92B,EAAQ82B,SAAShf,EAAO,EAEhD+e,WAAYA,KACR72B,EAAQ62B,YAAc72B,EAAQ62B,aAC9Bt5B,KAAK2hD,mBAAmB,IAG5B3hD,KAAKy3C,eACLz3C,KAAKy3C,aAAanD,iBAAmBt0C,KAAKs0C,kBAE9Ct0C,KAAK4/C,sBAAmB1gD,CAAS,GAEzC,CACAyiD,iBAAAA,GACQ3hD,KAAKy3C,eACLz3C,KAAKy3C,aAAanD,sBAAmBp1C,EACrCc,KAAKy3C,aAAaR,qBAAkB/3C,GAExC,MAAM+0C,EAAQj0C,KAAKk0C,WACnBD,GAASA,EAAMuD,wBACfx3C,KAAKy3C,aACDz3C,KAAKs0C,iBACDt0C,KAAKm3C,qBACDj4C,EACZc,KAAKg7C,gBAAgB,oBACzB,CACAQ,eAAAA,GACQx7C,KAAKs0C,mBACLt0C,KAAKghD,gBAAkBhhD,KAAKghD,eAr+BpB,KAs+BRhhD,KAAKs0C,iBAAiBpc,QAE1Bl4B,KAAK2hD,mBACT,CACAC,uBAAAA,GACI,MAAMlL,EAAO12C,KAAKq/C,UAClB,IAAI,qBAAEK,EAAoB,OAAE3/C,EAAM,OAAEmN,EAAM,aAAE8J,GAAiB0/B,EAC7D,GAAKgJ,GAAyB3/C,GAAWmN,EAAzC,CAOA,GAAIlN,OAAS02C,GACT12C,KAAKkN,QACLA,GACA20C,GAA0B7hD,KAAKyC,QAAQq/C,cAAe9hD,KAAKkN,OAAO2hC,UAAW3hC,EAAO2hC,WAAY,CAChG9uC,EAASC,KAAKD,QAAU4rC,KACxB,MAAMoW,EAAU5X,GAAWnqC,KAAKkN,OAAO2hC,UAAU/qC,GACjD/D,EAAO+D,EAAEkO,IAAM0kC,EAAK32C,OAAO+D,EAAEkO,IAC7BjS,EAAO+D,EAAEmO,IAAMlS,EAAO+D,EAAEkO,IAAM+vC,EAC9B,MAAMC,EAAU7X,GAAWnqC,KAAKkN,OAAO2hC,UAAU9qC,GACjDhE,EAAOgE,EAAEiO,IAAM0kC,EAAK32C,OAAOgE,EAAEiO,IAC7BjS,EAAOgE,EAAEkO,IAAMlS,EAAOgE,EAAEiO,IAAMgwC,CAClC,CACArM,GAAY+J,EAAsB3/C,GAMlCotC,GAAauS,EAAsB1oC,GAOnC0zB,GAAa1qC,KAAKqgD,6BAA8BrgD,KAAK29C,gBAAiB+B,EAAsB1oC,EA/BlF,CAgCd,CACAykC,kBAAAA,CAAmBrtC,EAAU+V,GACpBnkB,KAAK86C,YAAYrqC,IAAIrC,IACtBpO,KAAK86C,YAAY76C,IAAImO,EAAU,IAAImoC,IAEzBv2C,KAAK86C,YAAYp1C,IAAI0I,GAC7BiR,IAAI8E,GACV,MAAMrG,EAASqG,EAAK1hB,QAAQw/C,uBAC5B99B,EAAK4vB,QAAQ,CACTj1B,WAAYhB,EAASA,EAAOgB,gBAAa5f,EACzC43C,sBAAuBh5B,GAAUA,EAAOokC,4BAClCpkC,EAAOokC,4BAA4B/9B,QACnCjlB,GAEd,CACAq1C,MAAAA,GACI,MAAMN,EAAQj0C,KAAKk0C,WACnB,OAAOD,GAAQA,EAAMyC,OAAS12C,IAClC,CACAq/C,OAAAA,GACI,IAAI7lC,EACJ,MAAM,SAAEpL,GAAapO,KAAKyC,QAC1B,OAAO2L,IAAuC,QAA1BoL,EAAKxZ,KAAKk0C,kBAA+B,IAAP16B,OAAgB,EAASA,EAAGk9B,OAAgB12C,IACtG,CACAmiD,WAAAA,GACI,IAAI3oC,EACJ,MAAM,SAAEpL,GAAapO,KAAKyC,QAC1B,OAAO2L,EAAsC,QAA1BoL,EAAKxZ,KAAKk0C,kBAA+B,IAAP16B,OAAgB,EAASA,EAAGi9B,cAAWv3C,CAChG,CACAg1C,QAAAA,GACI,MAAM,SAAE9lC,GAAapO,KAAKyC,QAC1B,GAAI2L,EACA,OAAOpO,KAAK4lB,KAAKk1B,YAAYp1C,IAAI0I,EACzC,CACA2lC,OAAAA,GAAiE,IAAzD,WAAE2F,EAAU,WAAE56B,EAAU,sBAAEg4B,GAAwB1uC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAM6rC,EAAQj0C,KAAKk0C,WACfD,GACAA,EAAMF,QAAQ/zC,KAAM82C,GACpB4C,IACA15C,KAAK4yC,qBAAkB1zC,EACvBc,KAAK05C,YAAa,GAElB56B,GACA9e,KAAK2zC,WAAW,CAAE70B,cAC1B,CACAk1B,QAAAA,GACI,MAAMC,EAAQj0C,KAAKk0C,WACnB,QAAID,GACOA,EAAMD,SAASh0C,KAK9B,CACA48C,aAAAA,GACI,MAAM,cAAEruC,GAAkBvO,KAAKyC,QAC/B,IAAK8L,EACD,OAEJ,IAAI6zC,GAAY,EAKhB,MAAM,aAAEprC,GAAiBzI,EAQzB,IAPIyI,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACbysC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAI56C,EAAI,EAAGA,EAAI4wC,GAAc7wC,OAAQC,IAAK,CAC3C,MAAMrE,EAAM,SAAWi1C,GAAc5wC,GAEjCuP,EAAa5T,KACbi/C,EAAYj/C,GAAO4T,EAAa5T,GAChCmL,EAAc+zC,eAAel/C,EAAK,GAE1C,CAGAmL,EAActN,SAEd,IAAK,MAAMmC,KAAOi/C,EACd9zC,EAAc+zC,eAAel/C,EAAKi/C,EAAYj/C,IAIlDmL,EAAcioC,gBAClB,CACAp6B,mBAAAA,CAAoBF,GAChB,IAAI1C,EAAIuX,EACR,IAAK/wB,KAAK4P,UAAY5P,KAAKy5C,MACvB,OACJ,IAAKz5C,KAAK46C,UACN,OAAOtC,GAEX,MAAMiK,EAAS,CACXhK,WAAY,IAEVthC,EAAoBjX,KAAK68C,uBAC/B,GAAI78C,KAAK05C,WAQL,OAPA15C,KAAK05C,YAAa,EAClB6I,EAAOhsC,QAAU,GACjBgsC,EAAOC,cACH7kC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUsmC,gBAAkB,GACzGD,EAAOzwC,UAAYmF,EACbA,EAAkBjX,KAAKgX,aAAc,IACrC,OACCurC,EAEX,MAAM7L,EAAO12C,KAAKq/C,UAClB,IAAKr/C,KAAK4yC,kBAAoB5yC,KAAKkN,SAAWwpC,EAAK32C,OAAQ,CACvD,MAAM0iD,EAAc,CAAC,EAerB,OAdIziD,KAAKyC,QAAQ2L,WACbq0C,EAAYlsC,aACsBrX,IAA9Bc,KAAKgX,aAAaT,QACZvW,KAAKgX,aAAaT,QAClB,EACVksC,EAAYD,cACR7kC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUsmC,gBAAkB,IAEzGxiD,KAAK26C,eAAiBtjC,GAAarX,KAAKgX,gBACxCyrC,EAAY3wC,UAAYmF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNjX,KAAK26C,cAAe,GAEjB8H,CACX,CACA,MAAMC,EAAiBhM,EAAKS,iBAAmBT,EAAK1/B,aACpDhX,KAAK4hD,0BACLW,EAAOzwC,UAAY6lC,GAAyB33C,KAAKqgD,6BAA8BrgD,KAAK2yC,UAAW+P,GAC3FzrC,IACAsrC,EAAOzwC,UAAYmF,EAAkByrC,EAAgBH,EAAOzwC,YAEhE,MAAM,EAAEhO,EAAC,EAAEC,GAAM/D,KAAK4yC,gBACtB2P,EAAOnrC,gBAAkB,GAAHlE,OAAiB,IAAXpP,EAAE4V,OAAY,MAAAxG,OAAgB,IAAXnP,EAAE2V,OAAY,OACzDg9B,EAAKS,gBAKLoL,EAAOhsC,QACHmgC,IAAS12C,KACiG,QAAnG+wB,EAAuC,QAAjCvX,EAAKkpC,EAAensC,eAA4B,IAAPiD,EAAgBA,EAAKxZ,KAAKgX,aAAaT,eAA4B,IAAPwa,EAAgBA,EAAK,EACjI/wB,KAAKi3C,gBACDj3C,KAAKgX,aAAaT,QAClBmsC,EAAetB,YAO7BmB,EAAOhsC,QACHmgC,IAAS12C,UACwBd,IAA3BwjD,EAAensC,QACXmsC,EAAensC,QACf,QAC2BrX,IAA/BwjD,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAMh+C,KAAO0N,EAAiB,CAC/B,QAA4B5R,IAAxBwjD,EAAet/C,GACf,SACJ,MAAM,QAAEqvC,EAAO,QAAEqC,GAAYhkC,EAAgB1N,GAOvCu/C,EAAiC,SAArBJ,EAAOzwC,UACnB4wC,EAAet/C,GACfqvC,EAAQiQ,EAAet/C,GAAMszC,GACnC,GAAI5B,EAAS,CACT,MAAM8N,EAAM9N,EAAQttC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIm7C,EAAKn7C,IACrB86C,EAAOzN,EAAQrtC,IAAMk7C,CAE7B,MAEIJ,EAAOn/C,GAAOu/C,CAEtB,CAYA,OANI3iD,KAAKyC,QAAQ2L,WACbm0C,EAAOC,cACH9L,IAAS12C,KACH2d,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUsmC,gBAAkB,GACrG,QAEPD,CACX,CACAjF,aAAAA,GACIt9C,KAAKg3C,WAAah3C,KAAKk3C,cAAWh4C,CACtC,CAEA2jD,SAAAA,GACI7iD,KAAK4lB,KAAKw0B,MAAM96C,SAAS6kB,IAAW,IAAI3K,EAAI,OAAwC,QAAhCA,EAAK2K,EAAKmwB,wBAAqC,IAAP96B,OAAgB,EAASA,EAAG0e,MAAM,IAC9Hl4B,KAAK4lB,KAAKw0B,MAAM96C,QAAQ29C,IACxBj9C,KAAK4lB,KAAKk1B,YAAYp7B,OAC1B,EAER,CACA,SAASgyB,GAAavtB,GAClBA,EAAKutB,cACT,CACA,SAAS0L,GAAmBj5B,GACxB,IAAI3K,EACJ,MAAM09B,GAAuC,QAA1B19B,EAAK2K,EAAK6yB,kBAA+B,IAAPx9B,OAAgB,EAASA,EAAG09B,WAAa/yB,EAAK+yB,SACnG,GAAI/yB,EAAKowB,UACLpwB,EAAKjX,QACLgqC,GACA/yB,EAAK+2B,aAAa,aAAc,CAChC,MAAQrM,UAAW3hC,EAAQsxC,YAAasE,GAAmB3+B,EAAKjX,QAC1D,cAAE40C,GAAkB39B,EAAK1hB,QACzB68C,EAAWpI,EAAS/+B,SAAWgM,EAAKjX,OAAOiL,OAG3B,SAAlB2pC,EACAlW,IAAUxB,IACN,MAAM2Y,EAAezD,EACfpI,EAASsH,YAAYpU,GACrB8M,EAASrI,UAAUzE,GACnB5iC,EAAS2iC,GAAW4Y,GAC1BA,EAAa/wC,IAAM9E,EAAOk9B,GAAMp4B,IAChC+wC,EAAa9wC,IAAM8wC,EAAa/wC,IAAMxK,CAAM,IAG3Cq6C,GAA0BC,EAAe5K,EAASrI,UAAW3hC,IAClE0+B,IAAUxB,IACN,MAAM2Y,EAAezD,EACfpI,EAASsH,YAAYpU,GACrB8M,EAASrI,UAAUzE,GACnB5iC,EAAS2iC,GAAWj9B,EAAOk9B,IACjC2Y,EAAa9wC,IAAM8wC,EAAa/wC,IAAMxK,EAIlC2c,EAAK03B,iBAAmB13B,EAAKmwB,mBAC7BnwB,EAAKi1B,mBAAoB,EACzBj1B,EAAK03B,eAAezR,GAAMn4B,IACtBkS,EAAK03B,eAAezR,GAAMp4B,IAAMxK,EACxC,IAGR,MAAMw7C,EAActX,KACpBhB,GAAasY,EAAa91C,EAAQgqC,EAASrI,WAC3C,MAAMoU,EAAcvX,KAChB4T,EACA5U,GAAauY,EAAa9+B,EAAKw6B,eAAemE,GAAgB,GAAO5L,EAASsH,aAG9E9T,GAAauY,EAAa/1C,EAAQgqC,EAASrI,WAE/C,MAAMoD,GAAoBmE,GAAY4M,GACtC,IAAItH,GAA2B,EAC/B,IAAKv3B,EAAK6yB,WAAY,CAClB,MAAMkI,EAAiB/6B,EAAKq7B,6BAK5B,GAAIN,IAAmBA,EAAelI,WAAY,CAC9C,MAAQE,SAAUgM,EAAgBh2C,OAAQi2C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EAAmBzX,KACzBb,GAAqBsY,EAAkBlM,EAASrI,UAAWqU,EAAerU,WAC1E,MAAM6R,EAAiB/U,KACvBb,GAAqB4V,EAAgBxzC,EAAQi2C,EAAatU,WACrDwH,GAAiB+M,EAAkB1C,KACpChF,GAA2B,GAE3BwD,EAAez8C,QAAQ45C,aACvBl4B,EAAK03B,eAAiB6E,EACtBv8B,EAAKs7B,qBAAuB2D,EAC5Bj/B,EAAK+6B,eAAiBA,EAE9B,CACJ,CACJ,CACA/6B,EAAK62B,gBAAgB,YAAa,CAC9B9tC,SACAgqC,WACA52B,MAAO2iC,EACPD,cACA/Q,mBACAyJ,4BAER,MACK,GAAIv3B,EAAKowB,SAAU,CACpB,MAAM,eAAEvM,GAAmB7jB,EAAK1hB,QAChCulC,GAAkBA,GACtB,CAMA7jB,EAAK1hB,QAAQqc,gBAAa5f,CAC9B,CACA,SAASm7C,GAAoBl2B,GAIzBq0B,GAAoBC,aACft0B,EAAK3V,SAQL2V,EAAKw7B,iBACNx7B,EAAKi1B,kBAAoBj1B,EAAK3V,OAAO4qC,mBAOzCj1B,EAAKk1B,0BAA4Bl1B,EAAKk1B,wBAA0BvtC,QAAQqY,EAAKi1B,mBACzEj1B,EAAK3V,OAAO4qC,mBACZj1B,EAAK3V,OAAO6qC,0BAChBl1B,EAAKm1B,mBAAqBn1B,EAAKm1B,iBAAmBn1B,EAAK3V,OAAO8qC,kBAClE,CACA,SAASkB,GAAgBr2B,GACrBA,EAAKi1B,kBACDj1B,EAAKk1B,wBACDl1B,EAAKm1B,kBACD,CAChB,CACA,SAASgE,GAAcn5B,GACnBA,EAAKm5B,eACT,CACA,SAASL,GAAkB94B,GACvBA,EAAK84B,mBACT,CACA,SAASC,GAAmB/4B,GACxBA,EAAKkzB,eAAgB,CACzB,CACA,SAAS8F,GAAoBh5B,GACzB,MAAM,cAAE5V,GAAkB4V,EAAK1hB,QAC3B8L,GAAiBA,EAAcmW,WAAW2+B,uBAC1C90C,EAAcoyB,OAAO,uBAEzBxc,EAAK80B,gBACT,CACA,SAASuC,GAAgBr3B,GACrBA,EAAKq3B,kBACLr3B,EAAK66B,YAAc76B,EAAK03B,eAAiB13B,EAAKpkB,YAASb,EACvDilB,EAAKi1B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBn2B,GACxBA,EAAKm2B,oBACT,CACA,SAASC,GAAep2B,GACpBA,EAAKo2B,gBACT,CACA,SAASqC,GAAcz4B,GACnBA,EAAKy4B,eACT,CACA,SAASW,GAAoBtJ,GACzBA,EAAMyD,oBACV,CACA,SAASuJ,GAAarwB,EAAQtQ,EAAOlX,GACjCwnB,EAAO6Z,UAAYjtB,GAAI8C,EAAMmqB,UAAW,EAAGrhC,GAC3CwnB,EAAOre,MAAQiL,GAAI8C,EAAM/N,MAAO,EAAGnJ,GACnCwnB,EAAOlX,OAAS4G,EAAM5G,OACtBkX,EAAO4Z,YAAclqB,EAAMkqB,WAC/B,CACA,SAAS0W,GAAQtwB,EAAQjC,EAAMC,EAAIxlB,GAC/BwnB,EAAO5e,IAAMwL,GAAImR,EAAK3c,IAAK4c,EAAG5c,IAAK5I,GACnCwnB,EAAO3e,IAAMuL,GAAImR,EAAK1c,IAAK2c,EAAG3c,IAAK7I,EACvC,CAKA,SAAS03C,GAAoB38B,GACzB,OAAQA,EAAKgzB,sBAAwDj4C,IAArCilB,EAAKgzB,gBAAgBiK,WACzD,CACA,MAAMrF,GAA0B,CAC5B3oB,SAAU,IACV1I,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB44B,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,UAAUz4C,cAAc4F,SAAS2yC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEpxC,KAAKQ,MACLsM,GACN,SAASu/B,GAAUnU,GAEfA,EAAKp4B,IAAM0xC,GAAWtZ,EAAKp4B,KAC3Bo4B,EAAKn4B,IAAMyxC,GAAWtZ,EAAKn4B,IAC/B,CAKA,SAAS4vC,GAA0BC,EAAe5K,EAAUhqC,GACxD,MAA0B,aAAlB40C,GACe,oBAAlBA,IACIzX,GAAOiM,GAAYY,GAAWZ,GAAYppC,GAAS,GAChE,CKp9CA,MAAMy2C,GAAyB/K,GAAqB,CAChDC,qBAAsBA,CAAC/1C,EAAK69B,IAAWxe,GAAYrf,EAAK,SAAU69B,GAClEoY,cAAeA,KAAA,CACXj1C,EAAG6F,SAASi6C,gBAAgBC,YAAcl6C,SAASm6C,KAAKD,WACxD9/C,EAAG4F,SAASi6C,gBAAgBG,WAAap6C,SAASm6C,KAAKC,YAE3D/K,kBAAmBA,KAAM,ICNvB3I,GAAqB,CACvBhvC,aAASnC,GAEP8kD,GAAqBpL,GAAqB,CAC5CG,cAAgBnpC,IAAQ,CACpB9L,EAAG8L,EAASi0C,WACZ9/C,EAAG6L,EAASm0C,YAEhBjL,cAAeA,KACX,IAAKzI,GAAmBhvC,QAAS,CAC7B,MAAM4iD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAap0C,MAAMnG,QACnBu6C,EAAatQ,WAAW,CAAEmK,cAAc,IACxCzN,GAAmBhvC,QAAU4iD,CACjC,CACA,OAAO5T,GAAmBhvC,OAAO,EAErC43C,eAAgBA,CAACrpC,EAAUlQ,KACvBkQ,EAASsH,MAAMpF,eAAsB5S,IAAVQ,EAAsBA,EAAQ,MAAM,EAEnEs5C,kBAAoBppC,GAAa9D,QAAuD,UAA/CpC,OAAOw6C,iBAAiBt0C,GAAUu0C,YClBzEv3C,GAAO,CACTI,IAAK,CACDkX,QrBKR,cAAyBA,GACrB/d,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKokD,0BAA4BplC,EACrC,CACAqlC,aAAAA,CAAcC,GACVtkD,KAAKukD,QAAU,IAAInc,GAAWkc,EAAkBtkD,KAAKwkD,oBAAqB,CACtEp6C,mBAAoBpK,KAAKmkB,KAAKirB,wBAC9B9G,cAAekF,GAAiBxtC,KAAKmkB,OAE7C,CACAqgC,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa5kD,KAAKmkB,KAAKO,WACrE,MAAO,CACHilB,eAAgBuI,GAAauS,GAC7Bxb,QAASiJ,GAAawS,GACtBxb,OAAQyb,EACRpb,MAAOA,CAAC7mB,EAAO+B,YACJzkB,KAAKukD,QACRK,GACA/kC,GAAM5Q,QAAO,IAAM21C,EAASliC,EAAO+B,IACvC,EAGZ,CACA5U,KAAAA,GACI7P,KAAKokD,0BAA4BlhC,GAAgBljB,KAAKmkB,KAAK9iB,QAAS,eAAgBqhB,GAAU1iB,KAAKqkD,cAAc3hC,IACrH,CACAzT,MAAAA,GACIjP,KAAKukD,SAAWvkD,KAAKukD,QAAQ1a,eAAe7pC,KAAKwkD,oBACrD,CACA10C,OAAAA,GACI9P,KAAKokD,4BACLpkD,KAAKukD,SAAWvkD,KAAKukD,QAAQjb,KACjC,IqBrCA18B,KAAM,CACFsX,QCNR,cAA0BA,GACtB/d,WAAAA,CAAYge,GACRqC,MAAMrC,GACNnkB,KAAK6kD,oBAAsB7lC,GAC3Bhf,KAAK4pC,gBAAkB5qB,GACvBhf,KAAKq7B,SAAW,IAAIuS,GAA0BzpB,EAClD,CACAtU,KAAAA,GAGI,MAAM,aAAEi1C,GAAiB9kD,KAAKmkB,KAAKO,WAC/BogC,IACA9kD,KAAK6kD,oBAAsBC,EAAavjD,UAAUvB,KAAKq7B,WAE3Dr7B,KAAK4pC,gBAAkB5pC,KAAKq7B,SAASsW,gBAAkB3yB,EAC3D,CACAlP,OAAAA,GACI9P,KAAK6kD,sBACL7kD,KAAK4pC,iBACT,GDZImb,eAAgBf,GAChB91C,cAAaA,KECf82C,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiB7jD,EAAS4a,GAAoB,IAAXi8B,EAAK9vC,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,EAChDyhB,GAAUquB,GAAS+M,GAAU,yDAAF/xC,OAA2D7R,EAAO,yDAC7F,MAAO7B,EAAO2lD,GAVlB,SAA0B9jD,GACtB,MAAMusB,EAAQo3B,GAAsBI,KAAK/jD,GACzC,IAAKusB,EACD,MAAO,CAAC,GACZ,MAAO,CAAEpuB,EAAO2lD,GAAYv3B,EAC5B,MAAO,CAACpuB,EAAO2lD,EACnB,CAI8BE,CAAiBhkD,GAE3C,IAAK7B,EACD,OAEJ,MAAMof,EAAWlV,OAAOw6C,iBAAiBjoC,GAASqpC,iBAAiB9lD,GACnE,GAAIof,EAAU,CACV,MAAM2mC,EAAU3mC,EAAS7G,OACzB,OAAOsoB,GAAkBklB,GAAWlzC,WAAWkzC,GAAWA,CAC9D,CACK,OAAI3zC,EAAmBuzC,GAEjBD,GAAiBC,EAAUlpC,EAASi8B,EAAQ,GAG5CiN,CAEf,CCjCA,MAAMK,GAAiB,IAAIv0C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEw0C,GAAmBriD,GAAQoiD,GAAe/0C,IAAIrN,GAI9CsiD,GAAiBnnD,GAAMA,IAAM4T,GAAU5T,IAAM8U,GAC7CsyC,GAAmBA,CAACC,EAAQC,IAAQxzC,WAAWuzC,EAAOp9C,MAAM,MAAMq9C,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKx4C,KAAoB,IAAlB,UAAEqE,GAAWrE,EAChE,GAAkB,SAAdqE,IAAyBA,EACzB,OAAO,EACX,MAAMo0C,EAAWp0C,EAAU8b,MAAM,sBACjC,GAAIs4B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS9zC,EAAU8b,MAAM,oBAC/B,OAAIg4B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIl1C,IAAI,CAAC,IAAK,IAAK,MACnCm1C,GAAgCr1C,EAAmB+sB,QAAQ16B,IAAS+iD,GAAc11C,IAAIrN,KAe5F,MAAMijD,GAAmB,CAErB/xC,MAAOA,CAAAtE,EAAAs2C,KAAA,IAAC,EAAExiD,GAAGkM,GAAE,YAAEkF,EAAc,IAAG,aAAEF,EAAe,KAAKsxC,EAAA,OAAKxiD,EAAEmO,IAAMnO,EAAEkO,IAAMK,WAAW6C,GAAe7C,WAAW2C,EAAa,EAC/HR,OAAQA,CAAA+xC,EAAAC,KAAA,IAAC,EAAEziD,GAAGwiD,GAAE,WAAExxC,EAAa,IAAG,cAAEE,EAAgB,KAAKuxC,EAAA,OAAKziD,EAAEkO,IAAMlO,EAAEiO,IAAMK,WAAW0C,GAAc1C,WAAW4C,EAAc,EAChIP,IAAKA,CAACuxC,EAAKQ,KAAA,IAAE,IAAE/xC,GAAK+xC,EAAA,OAAKp0C,WAAWqC,EAAI,EACxCG,KAAMA,CAACoxC,EAAKS,KAAA,IAAE,KAAE7xC,GAAM6xC,EAAA,OAAKr0C,WAAWwC,EAAK,EAC3CD,OAAQA,CAAA+xC,EAAAC,KAAA,IAAC,EAAE7iD,GAAG4iD,GAAE,IAAEjyC,GAAKkyC,EAAA,OAAKv0C,WAAWqC,IAAQ3Q,EAAEkO,IAAMlO,EAAEiO,IAAI,EAC7D2C,MAAOA,CAAAkyC,EAAAC,KAAA,IAAC,EAAEhjD,GAAG+iD,GAAE,KAAEhyC,GAAMiyC,EAAA,OAAKz0C,WAAWwC,IAAS/Q,EAAEmO,IAAMnO,EAAEkO,IAAI,EAE9DlO,EAAGgiD,GAAuB,EAAG,IAC7B/hD,EAAG+hD,GAAuB,EAAG,KAGjCO,GAAiBlwC,WAAakwC,GAAiBviD,EAC/CuiD,GAAiBjwC,WAAaiwC,GAAiBtiD,EAC/C,MA6BMgjD,GAAmC,SAACx4C,EAAexO,GAA4C,IAApC2Z,EAAMtR,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyW,EAAazW,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FrI,EAAS,IAAKA,GACd8e,EAAgB,IAAKA,GACrB,MAAMmoC,EAAuBpoD,OAAOuE,KAAKpD,GAAQ+9B,OAAO2nB,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqB1nD,SAAS8D,IAC1B,MAAM1D,EAAQ6O,EAAc+0B,SAASlgC,GACrC,IAAKmL,EAAc80B,SAASjgC,GACxB,OACJ,IAAIurB,EAAOjV,EAAOtW,GACdgkD,EAAWlkB,GAAuBvU,GACtC,MAAMC,EAAK7uB,EAAOqD,GAClB,IAAIikD,EAKJ,GAAI/pC,GAAkBsR,GAAK,CACvB,MAAM04B,EAAe14B,EAAGpnB,OAClB+/C,EAAsB,OAAV34B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAG24B,GACVH,EAAWlkB,GAAuBvU,GAClC,IAAK,IAAIlnB,EAAI8/C,EAAW9/C,EAAI6/C,GAKV,OAAV14B,EAAGnnB,GAL+BA,IAOjC4/C,EAMDx9B,GAAUqZ,GAAuBtU,EAAGnnB,MAAQ4/C,EAAQ,2CALpDA,EAASnkB,GAAuBtU,EAAGnnB,IACnCoiB,GAAUw9B,IAAWD,GAChB1B,GAAc0B,IAAa1B,GAAc2B,GAAU,gEAMpE,MAEIA,EAASnkB,GAAuBtU,GAEpC,GAAIw4B,IAAaC,EAGb,GAAI3B,GAAc0B,IAAa1B,GAAc2B,GAAS,CAClD,MAAMhmD,EAAU3B,EAAMgG,MACC,kBAAZrE,GACP3B,EAAMO,IAAIoS,WAAWhR,IAEP,kBAAPutB,EACP7uB,EAAOqD,GAAOiP,WAAWuc,GAEpBxjB,MAAMC,QAAQujB,IAAOy4B,IAAWh0C,KACrCtT,EAAOqD,GAAOwrB,EAAGzD,IAAI9Y,YAE7B,MACuB,OAAb+0C,QAAkC,IAAbA,OAAsB,EAASA,EAASt1C,aACvD,OAAXu1C,QAA8B,IAAXA,OAAoB,EAASA,EAAOv1C,aAC9C,IAAT6c,GAAqB,IAAPC,GAGF,IAATD,EACAjvB,EAAMO,IAAIonD,EAAOv1C,UAAU6c,IAG3B5uB,EAAOqD,GAAOgkD,EAASt1C,UAAU8c,IAMhCs4B,IACDD,EAvIpB,SAAyC14C,GACrC,MAAMi5C,EAAoB,GAW1B,OAVApB,GAA8B9mD,SAAS8D,IACnC,MAAM1D,EAAQ6O,EAAc+0B,SAASlgC,QACvBlE,IAAVQ,IACA8nD,EAAkBriD,KAAK,CAAC/B,EAAK1D,EAAMgG,QACnChG,EAAMO,IAAImD,EAAI+N,WAAW,SAAW,EAAI,GAC5C,IAGAq2C,EAAkBhgD,QAClB+G,EAActN,SACXumD,CACX,CA2HwBC,CAAgCl5C,GACpC24C,GAAsC,GAE1CC,EAAqBhiD,KAAK/B,GAC1Byb,EAAczb,QACalE,IAAvB2f,EAAczb,GACRyb,EAAczb,GACdrD,EAAOqD,GACjB1D,EAAM4iC,KAAK1T,GAEnB,IAEAu4B,EAAqB3/C,OAAQ,CAC7B,MAAMkgD,EAAUP,EAAqBjiD,QAAQ,WAAa,EACpDwE,OAAOi+C,YACP,KACAC,EA3HmBC,EAAC9nD,EAAQwO,EAAeu5C,KACrD,MAAMC,EAAax5C,EAAc6+B,qBAC3BnxB,EAAU1N,EAAclN,QACxB2mD,EAAuB9D,iBAAiBjoC,IACxC,QAAEikC,GAAY8H,EACdtuC,EAAS,CAAC,EAGA,SAAZwmC,GACA3xC,EAAc+zC,eAAe,UAAWviD,EAAOmgD,SAAW,SAK9D4H,EAAYxoD,SAAS8D,IACjBsW,EAAOtW,GAAOijD,GAAiBjjD,GAAK2kD,EAAYC,EAAqB,IAGzEz5C,EAActN,SACd,MAAMgnD,EAAa15C,EAAc6+B,qBAQjC,OAPA0a,EAAYxoD,SAAS8D,IAGjB,MAAM1D,EAAQ6O,EAAc+0B,SAASlgC,GACrC1D,GAASA,EAAM4iC,KAAK5oB,EAAOtW,IAC3BrD,EAAOqD,GAAOijD,GAAiBjjD,GAAK6kD,EAAYD,EAAqB,IAElEjoD,CAAM,EAgGe8nD,CAAyB9nD,EAAQwO,EAAe44C,GAaxE,OAXIF,EAAuBz/C,QACvBy/C,EAAuB3nD,SAAQ4oD,IAAkB,IAAhB9kD,EAAK1D,GAAMwoD,EACxC35C,EAAc+0B,SAASlgC,GAAKnD,IAAIP,EAAM,IAI9C6O,EAActN,SAEVwJ,GAAyB,OAAZi9C,GACbh+C,OAAOy+C,SAAS,CAAEzzC,IAAKgzC,IAEpB,CAAE3nD,OAAQ6nD,EAAiB/oC,gBACtC,CAEI,MAAO,CAAE9e,SAAQ8e,gBAEzB,EAQA,SAASupC,GAAe75C,EAAexO,EAAQ2Z,EAAQmF,GACnD,MA3MsB9e,IACfnB,OAAOuE,KAAKpD,GAAQ6L,KAAK65C,IA0MzB4C,CAAiBtoD,GAClBgnD,GAAiCx4C,EAAexO,EAAQ2Z,EAAQmF,GAChE,CAAE9e,SAAQ8e,gBACpB,CC5NA,MAAMypC,GAAkBA,CAAC/5C,EAAexO,EAAQ2Z,EAAQmF,KACpD,MAAMD,EFuCV,SAA6BrQ,EAAad,EAAiBoR,GAAe,OAAzB9e,GAAQ0N,EACrD,MAAMwO,EAAU1N,EAAclN,QAC9B,KAAM4a,aAAmB8f,SACrB,MAAO,CAAEh8B,SAAQ8e,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBtQ,EAAcoN,OAAOrc,SAASI,IAC1B,MAAM2B,EAAU3B,EAAMgG,MACtB,IAAKkM,EAAmBvQ,GACpB,OACJ,MAAMud,EAAWsmC,GAAiB7jD,EAAS4a,GACvC2C,GACAlf,EAAMO,IAAI2e,EAAS,IAI3B,IAAK,MAAMxb,KAAOrD,EAAQ,CACtB,MAAMsB,EAAUtB,EAAOqD,GACvB,IAAKwO,EAAmBvQ,GACpB,SACJ,MAAMud,EAAWsmC,GAAiB7jD,EAAS4a,GACtC2C,IAGL7e,EAAOqD,GAAOwb,EACTC,IACDA,EAAgB,CAAC,QAIM3f,IAAvB2f,EAAczb,KACdyb,EAAczb,GAAO/B,GAE7B,CACA,MAAO,CAAEtB,SAAQ8e,gBACrB,CE9EqB0pC,CAAoBh6C,EAAexO,EAAQ8e,GAG5D,OAAOupC,GAAe75C,EAFtBxO,EAAS6e,EAAS7e,OAE2B2Z,EAD7CmF,EAAgBD,EAASC,cAC0C,ECVjE2pC,GAAuB,CAAEnnD,QAAS,MAClConD,GAA2B,CAAEpnD,SAAS,GCF5C,MAAMqnD,GAAqB,IAAItjC,QCoBzBujC,GAAe/pD,OAAOuE,KAAKgK,GAC3By7C,GAAcD,GAAanhD,OAC3BqhD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBr9C,EAAajE,OAKrC,MAAMuhD,GACF5iD,WAAAA,CAAWsH,GAAsF,IAArF,OAAEe,EAAM,MAAEpM,EAAK,gBAAEsM,EAAe,oBAAEC,EAAmB,YAAEL,GAAcb,EAAEhL,EAAO2F,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1FpI,KAAKqB,QAAU,KAIfrB,KAAK8b,SAAW,IAAI7K,IAIpBjR,KAAK6L,eAAgB,EACrB7L,KAAK0L,uBAAwB,EAQ7B1L,KAAKykC,mBAAqB,KAM1BzkC,KAAK2b,OAAS,IAAI9c,IAIlBmB,KAAK8N,SAAW,CAAC,EAKjB9N,KAAKgpD,mBAAqB,IAAInqD,IAM9BmB,KAAKipD,iBAAmB,CAAC,EAIzBjpD,KAAKohC,OAAS,CAAC,EAMfphC,KAAKkpD,uBAAyB,CAAC,EAC/BlpD,KAAKmpD,aAAe,IAAMnpD,KAAK2gC,OAAO,SAAU3gC,KAAKgX,cACrDhX,KAAKiB,OAAS,KACLjB,KAAKqB,UAEVrB,KAAKopD,eACLppD,KAAKqpD,eAAerpD,KAAKqB,QAASrB,KAAKwc,YAAaxc,KAAKoC,MAAM8U,MAAOlX,KAAKmc,YAAW,EAE1Fnc,KAAKw2C,eAAiB,IAAM32B,GAAM5e,OAAOjB,KAAKiB,QAAQ,GAAO,GAC7D,MAAM,aAAE+V,EAAY,YAAEwF,GAAgBlO,EACtCtO,KAAKgX,aAAeA,EACpBhX,KAAKspD,WAAa,IAAKtyC,GACvBhX,KAAKupD,cAAgBnnD,EAAM6J,QAAU,IAAK+K,GAAiB,CAAC,EAC5DhX,KAAKwc,YAAcA,EACnBxc,KAAKwO,OAASA,EACdxO,KAAKoC,MAAQA,EACbpC,KAAK0O,gBAAkBA,EACvB1O,KAAKk4C,MAAQ1pC,EAASA,EAAO0pC,MAAQ,EAAI,EACzCl4C,KAAK2O,oBAAsBA,EAC3B3O,KAAKyC,QAAUA,EACfzC,KAAK0L,sBAAwBA,EAAsBtJ,GACnDpC,KAAK6L,cAAgBA,EAAczJ,GAC/BpC,KAAK6L,gBACL7L,KAAK8kC,gBAAkB,IAAI7zB,KAE/BjR,KAAK6mC,uBAAyB/6B,QAAQ0C,GAAUA,EAAOnN,SAWvD,MAAM,WAAE6iC,KAAeslB,GAAwBxpD,KAAK2c,4BAA4Bva,EAAO,CAAC,GACxF,IAAK,MAAMgB,KAAOomD,EAAqB,CACnC,MAAM9pD,EAAQ8pD,EAAoBpmD,QACRlE,IAAtB8X,EAAa5T,IAAsBgO,EAAc1R,KACjDA,EAAMO,IAAI+W,EAAa5T,IAAM,GACzBg9B,GAAwB8D,IACxBA,EAAW7kB,IAAIjc,GAG3B,CACJ,CAQAuZ,2BAAAA,CAA4B8sC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACA75C,KAAAA,CAAMD,GACF5P,KAAKqB,QAAUuO,EACf84C,GAAmBzoD,IAAI2P,EAAU5P,MAC7BA,KAAKmc,aAAenc,KAAKmc,WAAWvM,UACpC5P,KAAKmc,WAAWtM,MAAMD,GAEtB5P,KAAKwO,QAAUxO,KAAK6L,gBAAkB7L,KAAK0L,wBAC3C1L,KAAK2pD,sBAAwB3pD,KAAKwO,OAAOo7C,gBAAgB5pD,OAE7DA,KAAK2b,OAAOrc,SAAQ,CAACI,EAAO0D,IAAQpD,KAAK6pD,kBAAkBzmD,EAAK1D,KAC3D+oD,GAAyBpnD,SC1JtC,WAEI,GADAonD,GAAyBpnD,SAAU,EAC9BoJ,EAEL,GAAIf,OAAOogD,WAAY,CACnB,MAAMC,EAAmBrgD,OAAOogD,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqBnnD,QAAU0oD,EAAiB5gC,QAC3F4gC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBnnD,SAAU,CAEvC,CD8IY6oD,GAEJlqD,KAAKykC,mBAC4B,UAA7BzkC,KAAK2O,sBAE8B,WAA7B3O,KAAK2O,qBAED65C,GAAqBnnD,SAI/BrB,KAAKwO,QACLxO,KAAKwO,OAAOsN,SAASuD,IAAIrf,MAC7BA,KAAKiP,OAAOjP,KAAKoC,MAAOpC,KAAK0O,gBACjC,CACAoB,OAAAA,GACI44C,GAAmB/oD,OAAOK,KAAKqB,SAC/BrB,KAAKmc,YAAcnc,KAAKmc,WAAWrM,UACnCiQ,GAAY/f,KAAKmpD,cACjBppC,GAAY/f,KAAKiB,QACjBjB,KAAKgpD,mBAAmB1pD,SAASigB,GAAWA,MAC5Cvf,KAAK2pD,uBAAyB3pD,KAAK2pD,wBACnC3pD,KAAKwO,QAAUxO,KAAKwO,OAAOsN,SAASnc,OAAOK,MAC3C,IAAK,MAAMoD,KAAOpD,KAAKohC,OACnBphC,KAAKohC,OAAOh+B,GAAKsc,QAErB,IAAK,MAAMtc,KAAOpD,KAAK8N,SACnB9N,KAAK8N,SAAS1K,GAAK0M,UAEvB9P,KAAKqB,QAAU,IACnB,CACAwoD,iBAAAA,CAAkBzmD,EAAK1D,GACnB,MAAMyqD,EAAmBn5C,EAAeP,IAAIrN,GACtCgnD,EAAiB1qD,EAAMqiC,GAAG,UAAWsoB,IACvCrqD,KAAKgX,aAAa5T,GAAOinD,EACzBrqD,KAAKoC,MAAMm3B,UACP1Z,GAAM5Q,OAAOjP,KAAKmpD,cAAc,GAAO,GACvCgB,GAAoBnqD,KAAKmc,aACzBnc,KAAKmc,WAAWm9B,kBAAmB,EACvC,IAEEgR,EAAwB5qD,EAAMqiC,GAAG,gBAAiB/hC,KAAKw2C,gBAC7Dx2C,KAAKgpD,mBAAmB/oD,IAAImD,GAAK,KAC7BgnD,IACAE,GAAuB,GAE/B,CACA/kB,gBAAAA,CAAiBglB,GAIb,OAAKvqD,KAAKqB,SACLrB,KAAKwqD,0BACNxqD,KAAKyD,OAAS8mD,EAAM9mD,KAGjBzD,KAAKwqD,yBAAyBxqD,KAAKqB,QAASkpD,EAAMlpD,SAF9C,CAGf,CACA0M,YAAAA,CAAYiC,EAAiCP,EAAU/B,EAAmB8B,GAA0B,IAC5Fi7C,EACAv8C,GAFK,SAAE4N,KAAa4uC,GAAe16C,EAevC,IAAK,IAAIvI,EAAI,EAAGA,EAAImhD,GAAanhD,IAAK,CAClC,MAAM7G,EAAO+nD,GAAalhD,IACpB,UAAE2F,EAAW8W,QAASymC,EAAkB,eAAE5F,EAAgB72C,cAAe08C,GAA4Bz9C,EAAmBvM,GAC1HmkD,IACA0F,EAA4B1F,GAC5B33C,EAAUs9C,MACL1qD,KAAK8N,SAASlN,IAAS+pD,IACxB3qD,KAAK8N,SAASlN,GAAQ,IAAI+pD,EAAmB3qD,OAE7C4qD,IACA18C,EAAgB08C,GAG5B,CACA,IAAK5qD,KAAKmc,YAAcsuC,EAA2B,CAC/CzqD,KAAKmc,WAAa,IAAIsuC,EAA0BzqD,KAAKgX,aAAchX,KAAKwO,QAAUxO,KAAKwO,OAAO2N,YAC9F,MAAM,SAAE/N,EAAQ,OAAElB,EAAM,KAAEN,EAAI,gBAAE8iC,EAAe,aAAEoO,EAAY,WAAEzB,GAAgBqO,EAC/E1qD,KAAKmc,WAAWw3B,WAAW,CACvBvlC,WACAlB,SACAuwC,oBAAqB3xC,QAAQc,IACxB8iC,GAAmBxkC,EAAYwkC,GACpCnhC,cAAevO,KACfw2C,eAAgBA,IAAMx2C,KAAKw2C,iBAQ3BsL,cAAiC,kBAAX50C,EAAsBA,EAAS,OACrD+0C,uBAAwBzyC,EACxBsuC,eACAzB,cAER,CACA,OAAOnuC,CACX,CACAoB,cAAAA,GACI,IAAK,MAAMlM,KAAOpD,KAAK8N,SAAU,CAC7B,MAAM+8C,EAAU7qD,KAAK8N,SAAS1K,GAC1BynD,EAAQzmC,UACRymC,EAAQ57C,UAGR47C,EAAQh7C,QACRg7C,EAAQzmC,WAAY,EAE5B,CACJ,CACAglC,YAAAA,GACIppD,KAAK8qD,MAAM9qD,KAAKwc,YAAaxc,KAAKgX,aAAchX,KAAKyC,QAASzC,KAAKoC,MACvE,CAMAgrC,kBAAAA,GACI,OAAOptC,KAAKqB,QACNrB,KAAK+qD,2BAA2B/qD,KAAKqB,QAASrB,KAAKoC,OACnDupC,IACV,CACAqf,cAAAA,CAAe5nD,GACX,OAAOpD,KAAKgX,aAAa5T,EAC7B,CACAk/C,cAAAA,CAAel/C,EAAK1D,GAChBM,KAAKgX,aAAa5T,GAAO1D,CAC7B,CAQA+jC,oBAAAA,CAAqB1jC,GAA0B,IAAlBkrD,IAAS7iD,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,KAAAA,UAAA,GAClC,OAAOpI,KAAKkrD,iCAAiCnrD,EAAQC,KAAKoC,MAAO6oD,EACrE,CAKAh8C,MAAAA,CAAO7M,EAAOsM,IACNtM,EAAM6U,mBAAqBjX,KAAKoC,MAAM6U,oBACtCjX,KAAKw2C,iBAETx2C,KAAK4c,UAAY5c,KAAKoC,MACtBpC,KAAKoC,MAAQA,EACbpC,KAAKkoC,oBAAsBloC,KAAK0O,gBAChC1O,KAAK0O,gBAAkBA,EAIvB,IAAK,IAAIjH,EAAI,EAAGA,EAAIohD,GAAkBrhD,OAAQC,IAAK,CAC/C,MAAMrE,EAAMylD,GAAkBphD,GAC1BzH,KAAKkpD,uBAAuB9lD,KAC5BpD,KAAKkpD,uBAAuB9lD,YACrBpD,KAAKkpD,uBAAuB9lD,IAEvC,MAAM+nD,EAAW/oD,EAAM,KAAOgB,GAC1B+nD,IACAnrD,KAAKkpD,uBAAuB9lD,GAAOpD,KAAK+hC,GAAG3+B,EAAK+nD,GAExD,CACAnrD,KAAKipD,iBE5Ub,SAAqChtC,EAASqN,EAAMC,GAChD,MAAM,WAAE2a,GAAe5a,EACvB,IAAK,MAAMlmB,KAAOkmB,EAAM,CACpB,MAAM8hC,EAAY9hC,EAAKlmB,GACjBioD,EAAY9hC,EAAKnmB,GACvB,GAAIgO,EAAcg6C,GAKdnvC,EAAQsnB,SAASngC,EAAKgoD,GAClBhrB,GAAwB8D,IACxBA,EAAW7kB,IAAIjc,QAUlB,GAAIgO,EAAci6C,GAKnBpvC,EAAQsnB,SAASngC,EAAK2/B,GAAYqoB,EAAW,CAAEzuB,MAAO1gB,KAClDmkB,GAAwB8D,IACxBA,EAAW3kB,OAAOnc,QAGrB,GAAIioD,IAAcD,EAMnB,GAAInvC,EAAQonB,SAASjgC,GAAM,CACvB,MAAMkoD,EAAgBrvC,EAAQqnB,SAASlgC,IAEtCkoD,EAAc1pB,aAAe0pB,EAAcrrD,IAAImrD,EACpD,KACK,CACD,MAAMf,EAAcpuC,EAAQ+uC,eAAe5nD,GAC3C6Y,EAAQsnB,SAASngC,EAAK2/B,QAA4B7jC,IAAhBmrD,EAA4BA,EAAce,EAAW,CAAEzuB,MAAO1gB,IACpG,CAER,CAEA,IAAK,MAAM7Y,KAAOmmB,OACIrqB,IAAdoqB,EAAKlmB,IACL6Y,EAAQsvC,YAAYnoD,GAE5B,OAAOkmB,CACX,CFqRgCkiC,CAA4BxrD,KAAMA,KAAK2c,4BAA4Bva,EAAOpC,KAAK4c,WAAY5c,KAAKipD,kBACpHjpD,KAAKyrD,wBACLzrD,KAAKyrD,wBAEb,CACA/mC,QAAAA,GACI,OAAO1kB,KAAKoC,KAChB,CAIAspD,UAAAA,CAAW9qD,GACP,OAAOZ,KAAKoC,MAAM2J,SAAW/L,KAAKoC,MAAM2J,SAASnL,QAAQ1B,CAC7D,CAIAo+B,oBAAAA,GACI,OAAOt9B,KAAKoC,MAAM0c,UACtB,CACAswB,qBAAAA,GACI,OAAOpvC,KAAKoC,MAAMgI,kBACtB,CACAuhD,qBAAAA,GACI,OAAO3rD,KAAK6L,cACN7L,KACAA,KAAKwO,OACDxO,KAAKwO,OAAOm9C,6BACZzsD,CACd,CACAmnC,iBAAAA,GACI,GAD2Bj+B,UAAAZ,OAAA,QAAAtI,IAAAkJ,UAAA,IAAAA,UAAA,GAEvB,OAAOpI,KAAKwO,OAASxO,KAAKwO,OAAO63B,yBAAsBnnC,EAE3D,IAAKc,KAAK0L,sBAAuB,CAC7B,MAAMrF,EAAUrG,KAAKwO,QACfxO,KAAKwO,OAAO63B,qBACZ,CAAC,EAIP,YAH2BnnC,IAAvBc,KAAKoC,MAAM6J,UACX5F,EAAQ4F,QAAUjM,KAAKoC,MAAM6J,SAE1B5F,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIoB,EAAI,EAAGA,EAAIqhD,GAAiBrhD,IAAK,CACtC,MAAM7G,EAAO6K,EAAahE,GACpB8E,EAAOvM,KAAKoC,MAAMxB,IACpBuK,EAAeoB,KAAkB,IAATA,KACxBlG,EAAQzF,GAAQ2L,EAExB,CACA,OAAOlG,CACX,CAIAujD,eAAAA,CAAgB9kC,GACZ,MAAM8mC,EAAqB5rD,KAAK2rD,wBAChC,GAAIC,EAGA,OAFAA,EAAmB9mB,iBACf8mB,EAAmB9mB,gBAAgBzlB,IAAIyF,GACpC,IAAM8mC,EAAmB9mB,gBAAgBnlC,OAAOmlB,EAE/D,CAIAye,QAAAA,CAASngC,EAAK1D,GAENA,IAAUM,KAAK2b,OAAOjW,IAAItC,KAC1BpD,KAAKurD,YAAYnoD,GACjBpD,KAAK6pD,kBAAkBzmD,EAAK1D,IAEhCM,KAAK2b,OAAO1b,IAAImD,EAAK1D,GACrBM,KAAKgX,aAAa5T,GAAO1D,EAAMgG,KACnC,CAIA6lD,WAAAA,CAAYnoD,GACRpD,KAAK2b,OAAOhc,OAAOyD,GACnB,MAAM4+B,EAAchiC,KAAKgpD,mBAAmBtjD,IAAItC,GAC5C4+B,IACAA,IACAhiC,KAAKgpD,mBAAmBrpD,OAAOyD,WAE5BpD,KAAKgX,aAAa5T,GACzBpD,KAAK6rD,2BAA2BzoD,EAAKpD,KAAKwc,YAC9C,CAIA6mB,QAAAA,CAASjgC,GACL,OAAOpD,KAAK2b,OAAOlL,IAAIrN,EAC3B,CACAkgC,QAAAA,CAASlgC,EAAKw6B,GACV,GAAI59B,KAAKoC,MAAMuZ,QAAU3b,KAAKoC,MAAMuZ,OAAOvY,GACvC,OAAOpD,KAAKoC,MAAMuZ,OAAOvY,GAE7B,IAAI1D,EAAQM,KAAK2b,OAAOjW,IAAItC,GAK5B,YAJclE,IAAVQ,QAAwCR,IAAjB0+B,IACvBl+B,EAAQqjC,GAAYnF,EAAc,CAAEjB,MAAO38B,OAC3CA,KAAKujC,SAASngC,EAAK1D,IAEhBA,CACX,CAMAosD,SAAAA,CAAU1oD,GACN,IAAIoW,EACJ,YAAkCta,IAA3Bc,KAAKgX,aAAa5T,IAAuBpD,KAAKqB,QAES,QAAvDmY,EAAKxZ,KAAK+rD,uBAAuB/rD,KAAKoC,MAAOgB,UAAyB,IAAPoW,EAAgBA,EAAKxZ,KAAKgsD,sBAAsBhsD,KAAKqB,QAAS+B,EAAKpD,KAAKyC,SADxIzC,KAAKgX,aAAa5T,EAE5B,CAKA6oD,aAAAA,CAAc7oD,EAAK1D,GACfM,KAAKspD,WAAWlmD,GAAO1D,CAC3B,CAKA+nC,aAAAA,CAAcrkC,GACV,IAAIoW,EACJ,MAAM,QAAEvN,GAAYjM,KAAKoC,MACnB8pD,EAAsC,kBAAZjgD,GAA2C,kBAAZA,EACD,QAAvDuN,EAAK0D,GAAwBld,KAAKoC,MAAO6J,UAA6B,IAAPuN,OAAgB,EAASA,EAAGpW,QAC5FlE,EAIN,GAAI+M,QAAgC/M,IAArBgtD,EACX,OAAOA,EAMX,MAAMnsD,EAASC,KAAK+rD,uBAAuB/rD,KAAKoC,MAAOgB,GACvD,YAAelE,IAAXa,GAAyBqR,EAAcrR,QAMRb,IAA5Bc,KAAKupD,cAAcnmD,SACDlE,IAArBgtD,OACEhtD,EACAc,KAAKspD,WAAWlmD,GARXrD,CASf,CACAgiC,EAAAA,CAAG3f,EAAW/jB,GAIV,OAHK2B,KAAKohC,OAAOhf,KACbpiB,KAAKohC,OAAOhf,GAAa,IAAIqe,IAE1BzgC,KAAKohC,OAAOhf,GAAW/C,IAAIhhB,EACtC,CACAsiC,MAAAA,CAAOve,GACH,GAAIpiB,KAAKohC,OAAOhf,GAAY,SAAAiB,EAAAjb,UAAAZ,OADXnD,EAAI,IAAA+G,MAAAiY,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJlf,EAAIkf,EAAA,GAAAnb,UAAAmb,GAEjBvjB,KAAKohC,OAAOhf,GAAWue,UAAUt8B,EACrC,CACJ,EGnfJ,MAAM8nD,WAAyBpD,GAC3ByB,wBAAAA,CAAyB3hD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEujD,wBAAwBtjD,GAAS,GAAK,CACnD,CACAijD,sBAAAA,CAAuB3pD,EAAOgB,GAC1B,OAAOhB,EAAM8U,MAAQ9U,EAAM8U,MAAM9T,QAAOlE,CAC5C,CACA2sD,0BAAAA,CAA2BzoD,EAAGqK,GAAmB,IAAjB,KAAE0J,EAAI,MAAED,GAAOzJ,SACpC0J,EAAK/T,UACL8T,EAAM9T,EACjB,CACA8nD,gCAAAA,CAAgCl7C,EAAAs2C,EAAgEliC,GAAW,IAA1E,WAAEtF,EAAU,cAAED,KAAkB9e,GAAQiQ,GAAE,gBAAEuI,GAAiB+tC,EACtF5sC,EnDqFZ,SAAmB3Z,EAAQ+e,EAAYvQ,GACnC,MAAMmL,EAAS,CAAC,EAChB,IAAK,MAAMtW,KAAOrD,EAAQ,CACtB,MAAMssD,EAAmB3oB,GAAwBtgC,EAAK0b,GACtD,QAAyB5f,IAArBmtD,EACA3yC,EAAOtW,GAAOipD,MAEb,CACD,MAAM3sD,EAAQ6O,EAAc+0B,SAASlgC,GACjC1D,IACAga,EAAOtW,GAAO1D,EAAMgG,MAE5B,CACJ,CACA,OAAOgU,CACX,CmDpGqB4yC,CAAUvsD,EAAQ+e,GAAc,CAAC,EAAG9e,MAYjD,GARIuY,IACIsG,IACAA,EAAgBtG,EAAgBsG,IAChC9e,IACAA,EAASwY,EAAgBxY,IACzB2Z,IACAA,EAASnB,EAAgBmB,KAE7B0K,EAAW,EnDoBvB,SAAiC7V,EAAexO,EAAQ2Z,GACpD,IAAIF,EAAIuX,EACR,MAAMw7B,EAAe3tD,OAAOuE,KAAKpD,GAAQ+9B,QAAQ16B,IAASmL,EAAc80B,SAASjgC,KAC3EopD,EAAeD,EAAa/kD,OD5CfjJ,MC6CnB,GAAKiuD,EAEL,IAAK,IAAI/kD,EAAI,EAAGA,EAAI+kD,EAAc/kD,IAAK,CACnC,MAAMrE,EAAMmpD,EAAa9kD,GACnBglD,EAAc1sD,EAAOqD,GAC3B,IAAI1D,EAAQ,KAKR0L,MAAMC,QAAQohD,KACd/sD,EAAQ+sD,EAAY,IAOV,OAAV/sD,IACAA,EAAoG,QAA3FqxB,EAA4B,QAAtBvX,EAAKE,EAAOtW,UAAyB,IAAPoW,EAAgBA,EAAKjL,EAAcu9C,UAAU1oD,UAAyB,IAAP2tB,EAAgBA,EAAKhxB,EAAOqD,SAM9HlE,IAAVQ,GAAiC,OAAVA,IAEN,kBAAVA,IACN2gC,GAAkB3gC,IAAUk/B,GAAkBl/B,IAE/CA,EAAQ2S,WAAW3S,ID3ERnB,EC6ESmB,GD7EHyjC,GAAW9T,KAAK2T,GAAczkC,KC6EjBuyB,GAAQjgB,KAAK47C,KAC3C/sD,EAAQuxB,GAAkB7tB,EAAKqpD,KAEnCl+C,EAAcg1B,SAASngC,EAAK2/B,GAAYrjC,EAAO,CAAEi9B,MAAOpuB,UACpCrP,IAAhBwa,EAAOtW,KACPsW,EAAOtW,GAAO1D,GAEJ,OAAVA,GACA6O,EAAc09C,cAAc7oD,EAAK1D,GACzC,CACJ,CmDjEYgtD,CAAwB1sD,KAAMD,EAAQ2Z,GACtC,MAAMwX,EAASo3B,GAAgBtoD,KAAMD,EAAQ2Z,EAAQmF,GACrDA,EAAgBqS,EAAOrS,cACvB9e,EAASmxB,EAAOnxB,MACpB,CACA,MAAO,CACH+e,aACAD,mBACG9e,EAEX,EC/BJ,MAAM4sD,WAA0BR,GAC5BH,qBAAAA,CAAsBp8C,EAAUxM,GAC5B,GAAI4N,EAAeP,IAAIrN,GAAM,CACzB,MAAMwpD,EAAcluB,GAAoBt7B,GACxC,OAAOwpD,GAAcA,EAAYp6C,SAAe,CACpD,CACK,CACD,MAAMq6C,GAVQ5wC,EAUyBrM,EATxClG,OAAOw6C,iBAAiBjoC,IAUjBvc,GAASiS,EAAkBvO,GAC3BypD,EAAcvH,iBAAiBliD,GAC/BypD,EAAczpD,KAAS,EAC7B,MAAwB,kBAAV1D,EAAqBA,EAAMqY,OAASrY,CACtD,CAfR,IAA0Buc,CAgBtB,CACA8uC,0BAAAA,CAA2Bn7C,EAAQnC,GAA0B,IAAxB,mBAAErD,GAAoBqD,EACvD,OAAO2/B,GAAmBx9B,EAAUxF,EACxC,CACA0gD,KAAAA,CAAMtuC,EAAaxF,EAAcvU,EAASL,GACtC2U,GAAgByF,EAAaxF,EAAcvU,EAASL,EAAM6U,kBAC9D,CACA0F,2BAAAA,CAA4Bva,EAAOwa,GAC/B,OAAOD,GAA4Bva,EAAOwa,EAC9C,CACA6uC,sBAAAA,GACQzrD,KAAK8sD,oBACL9sD,KAAK8sD,2BACE9sD,KAAK8sD,mBAEhB,MAAM,SAAEhxC,GAAa9b,KAAKoC,MACtBgP,EAAc0K,KACd9b,KAAK8sD,kBAAoBhxC,EAASimB,GAAG,UAAWxnB,IACxCva,KAAKqB,UACLrB,KAAKqB,QAAQ0rD,YAAc,GAAH75C,OAAMqH,GAAQ,IAGtD,CACA8uC,cAAAA,CAAez5C,EAAU4M,EAAaN,EAAWC,GAC7CH,GAAWpM,EAAU4M,EAAaN,EAAWC,EACjD,ECxCJ,MAAM6wC,WAAyBb,GAC3BhmD,WAAAA,GACIqgB,SAASpe,WACTpI,KAAKga,UAAW,CACpB,CACA+xC,sBAAAA,CAAuB3pD,EAAOgB,GAC1B,OAAOhB,EAAMgB,EACjB,CACA4oD,qBAAAA,CAAsBp8C,EAAUxM,GAC5B,GAAI4N,EAAeP,IAAIrN,GAAM,CACzB,MAAMwpD,EAAcluB,GAAoBt7B,GACxC,OAAOwpD,GAAcA,EAAYp6C,SAAe,CACpD,CAEA,OADApP,EAAOkZ,GAAoB7L,IAAIrN,GAA0BA,EAAnByH,EAAYzH,GAC3CwM,EAASq9C,aAAa7pD,EACjC,CACA2nD,0BAAAA,GACI,OAAOpf,IACX,CACAhvB,2BAAAA,CAA4Bva,EAAOwa,GAC/B,OAAOD,GAA4Bva,EAAOwa,EAC9C,CACAkuC,KAAAA,CAAMtuC,EAAaxF,EAAcvU,EAASL,GACtC2X,GAAcyC,EAAaxF,EAAcvU,EAASzC,KAAKga,SAAU5X,EAAM6U,kBAC3E,CACAoyC,cAAAA,CAAez5C,EAAU4M,EAAaN,EAAWC,GAC7CI,GAAU3M,EAAU4M,EAAaN,EAAWC,EAChD,CACAtM,KAAAA,CAAMD,GACF5P,KAAKga,SAAWA,GAASpK,EAASqS,SAClCuE,MAAM3W,MAAMD,EAChB,ECtCJ,MAAMs9C,GAAyBA,CAACzkD,EAAWhG,IAChCkO,EAAelI,GAChB,IAAIukD,GAAiBvqD,EAAS,CAAEkV,4BAA4B,IAC5D,IAAIg1C,GAAkBlqD,EAAS,CAAEkV,4BAA4B,ICEjEjK,GAAoB,IACnBy2B,MACA5d,MACA3Z,MCTQ,CACXM,OAAQ,CACJ63C,eAAgBf,GAChB91C,cAAaA,MDefi/C,GAAuBh9C,GAAkB,CAAC1H,EAAWqV,IEhB3D,SAA+BrV,EAASgF,EAAkCC,EAAmBC,GAAqB,IAAxE,mBAAE6N,GAAqB,GAAO/N,EAIpE,MAAO,IAHYkD,EAAelI,GAC5BoZ,GACAK,GAGFxU,oBACAE,UAAW2N,GAAgBC,GAC3B7N,sBACAlF,YAER,CFKsE2kD,CAAsB3kD,EAAWqV,EAAQpQ,GAAmBw/C","sources":["../node_modules/mobx-react-lite/src/utils/assertEnvironment.ts","../node_modules/mobx-react-lite/src/utils/observerBatching.ts","../node_modules/mobx-react-lite/src/utils/printDebugValue.ts","../node_modules/mobx-react-lite/src/staticRendering.ts","../node_modules/mobx-react-lite/src/utils/UniversalFinalizationRegistry.ts","../node_modules/mobx-react-lite/src/utils/observerFinalizationRegistry.ts","../node_modules/mobx-react-lite/src/useObserver.ts","../node_modules/mobx-react-lite/src/observer.ts","../node_modules/mobx-react-lite/src/index.ts","../node_modules/mobx-react/src/utils/utils.ts","../node_modules/mobx-react/src/observerClass.ts","../node_modules/mobx-react/src/observer.tsx","../node_modules/mobx-react/src/disposeOnUnmount.ts","../node_modules/mobx-react/src/index.ts","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\"\n\n// Required by SSR when hydrating #3669\nconst getServerSnapshot = () => {}\n\n// Do not store `admRef` (even as part of a closure!) on this object,\n// otherwise it will prevent GC and therefore reaction disposal via FinalizationRegistry.\ntype ObserverAdministration = {\n    reaction: Reaction | null // also serves as disposed flag\n    onStoreChange: Function | null // also serves as mounted flag\n    // BC: we will use local state version if global isn't available.\n    // It should behave as previous implementation - tearing is still present,\n    // because there is no cross component synchronization,\n    // but we can use `useSyncExternalStore` API.\n    stateVersion: any\n    name: string\n    // These don't depend on state/props, therefore we can keep them here instead of `useCallback`\n    subscribe: Parameters<typeof React.useSyncExternalStore>[0]\n    getSnapshot: Parameters<typeof React.useSyncExternalStore>[1]\n}\n\nfunction createReaction(adm: ObserverAdministration) {\n    adm.reaction = new Reaction(`observer${adm.name}`, () => {\n        adm.stateVersion = Symbol()\n        // onStoreChange won't be available until the component \"mounts\".\n        // If state changes in between initial render and mount,\n        // `useSyncExternalStore` should handle that by checking the state version and issuing update.\n        adm.onStoreChange?.()\n    })\n}\n\nexport function useObserver<T>(render: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return render()\n    }\n\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        const adm: ObserverAdministration = {\n            reaction: null,\n            onStoreChange: null,\n            stateVersion: Symbol(),\n            name: baseComponentName,\n            subscribe(onStoreChange: () => void) {\n                // Do NOT access admRef here!\n                observerFinalizationRegistry.unregister(adm)\n                adm.onStoreChange = onStoreChange\n                if (!adm.reaction) {\n                    // We've lost our reaction and therefore all subscriptions, occurs when:\n                    // 1. Timer based finalization registry disposed reaction before component mounted.\n                    // 2. React \"re-mounts\" same component without calling render in between (typically <StrictMode>).\n                    // We have to recreate reaction and schedule re-render to recreate subscriptions,\n                    // even if state did not change.\n                    createReaction(adm)\n                    // `onStoreChange` won't force update if subsequent `getSnapshot` returns same value.\n                    // So we make sure that is not the case\n                    adm.stateVersion = Symbol()\n                }\n\n                return () => {\n                    // Do NOT access admRef here!\n                    adm.onStoreChange = null\n                    adm.reaction?.dispose()\n                    adm.reaction = null\n                }\n            },\n            getSnapshot() {\n                // Do NOT access admRef here!\n                return adm.stateVersion\n            }\n        }\n\n        admRef.current = adm\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or reaction was disposed by registry before subscribe\n        createReaction(adm)\n        // StrictMode/ConcurrentMode/Suspense may mean that our component is\n        // rendered and abandoned multiple times, so we need to track leaked\n        // Reactions.\n        observerFinalizationRegistry.register(admRef, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction!, printDebugValue)\n\n    useSyncExternalStore(\n        // Both of these must be stable, otherwise it would keep resubscribing every render.\n        adm.subscribe,\n        adm.getSnapshot,\n        getServerSnapshot\n    )\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let renderResult!: T\n    let exception\n    adm.reaction!.track(() => {\n        try {\n            renderResult = render()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return renderResult\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Inherit original name and displayName, see #3438\n    ;(observerComponent as React.FunctionComponent).displayName = baseComponent.displayName\n    Object.defineProperty(observerComponent, \"name\", {\n        value: baseComponent.name,\n        writable: true,\n        configurable: true\n    })\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || this.type?.name || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport { observerFinalizationRegistry as _observerFinalizationRegistry }\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n","export function shallowEqual(objA: any, objB: any): boolean {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) {\n        return true\n    }\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) {\n        return false\n    }\n    for (let i = 0; i < keysA.length; i++) {\n        if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x: any, y: any): boolean {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    displayName: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base: object, target: object): void {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base))\n    Object.getOwnPropertyNames(base).forEach(key => {\n        if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nexport function setHiddenProp(target: object, prop: any, value: any): void {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\n/**\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\n * and the handler provided by mobx-react\n */\nconst mobxMixins = Symbol(\"patchMixins\")\nconst mobxPatchedDefinition = Symbol(\"patchedDefinition\")\n\nexport interface Mixins extends Record<string, any> {\n    locks: number\n    methods: Array<Function>\n}\n\nfunction getMixins(target: object, methodName: string): Mixins {\n    const mixins = (target[mobxMixins] = target[mobxMixins] || {})\n    const methodMixins = (mixins[methodName] = mixins[methodName] || {})\n    methodMixins.locks = methodMixins.locks || 0\n    methodMixins.methods = methodMixins.methods || []\n    return methodMixins\n}\n\nfunction wrapper(realMethod: Function, mixins: Mixins, ...args: Array<any>) {\n    // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n    mixins.locks++\n\n    try {\n        let retVal\n        if (realMethod !== undefined && realMethod !== null) {\n            retVal = realMethod.apply(this, args)\n        }\n\n        return retVal\n    } finally {\n        mixins.locks--\n        if (mixins.locks === 0) {\n            mixins.methods.forEach(mx => {\n                mx.apply(this, args)\n            })\n        }\n    }\n}\n\nfunction wrapFunction(realMethod: Function, mixins: Mixins): (...args: Array<any>) => any {\n    const fn = function (...args: Array<any>) {\n        wrapper.call(this, realMethod, mixins, ...args)\n    }\n    return fn\n}\n\nexport function patch(target: object, methodName: string, mixinMethod: Function): void {\n    const mixins = getMixins(target, methodName)\n\n    if (mixins.methods.indexOf(mixinMethod) < 0) {\n        mixins.methods.push(mixinMethod)\n    }\n\n    const oldDefinition = Object.getOwnPropertyDescriptor(target, methodName)\n    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n        // already patched definition, do not repatch\n        return\n    }\n\n    const originalMethod = target[methodName]\n    const newDefinition = createDefinition(\n        target,\n        methodName,\n        oldDefinition ? oldDefinition.enumerable : undefined,\n        mixins,\n        originalMethod\n    )\n\n    Object.defineProperty(target, methodName, newDefinition)\n}\n\nfunction createDefinition(\n    target: object,\n    methodName: string,\n    enumerable: any,\n    mixins: Mixins,\n    originalMethod: Function\n): PropertyDescriptor {\n    let wrappedFunc = wrapFunction(originalMethod, mixins)\n\n    return {\n        // @ts-ignore\n        [mobxPatchedDefinition]: true,\n        get: function () {\n            return wrappedFunc\n        },\n        set: function (value) {\n            if (this === target) {\n                wrappedFunc = wrapFunction(value, mixins)\n            } else {\n                // when it is an instance of the prototype/a child prototype patch that particular case again separately\n                // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n                // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n                // as the method for the instance\n                const newDefinition = createDefinition(this, methodName, enumerable, mixins, value)\n                Object.defineProperty(this, methodName, newDefinition)\n            }\n        },\n        configurable: true,\n        enumerable: enumerable\n    }\n}\n","import { PureComponent, Component, ComponentClass, ClassAttributes } from \"react\"\nimport {\n    _allowStateChanges,\n    Reaction,\n    _allowStateReadsStart,\n    _allowStateReadsEnd,\n    _getGlobalState\n} from \"mobx\"\nimport {\n    isUsingStaticRendering,\n    _observerFinalizationRegistry as observerFinalizationRegistry\n} from \"mobx-react-lite\"\nimport { shallowEqual, patch } from \"./utils/utils\"\n\nconst administrationSymbol = Symbol(\"ObserverAdministration\")\nconst isMobXReactObserverSymbol = Symbol(\"isMobXReactObserver\")\n\nlet observablePropDescriptors: PropertyDescriptorMap\nif (__DEV__) {\n    observablePropDescriptors = {\n        props: createObservablePropDescriptor(\"props\"),\n        state: createObservablePropDescriptor(\"state\"),\n        context: createObservablePropDescriptor(\"context\")\n    }\n}\n\ntype ObserverAdministration = {\n    reaction: Reaction | null // also serves as disposed flag\n    forceUpdate: Function | null\n    mounted: boolean // we could use forceUpdate as mounted flag\n    reactionInvalidatedBeforeMount: boolean\n    name: string\n    // Used only on __DEV__\n    props: any\n    state: any\n    context: any\n}\n\nfunction getAdministration(component: Component): ObserverAdministration {\n    // We create administration lazily, because we can't patch constructor\n    // and the exact moment of initialization partially depends on React internals.\n    // At the time of writing this, the first thing invoked is one of the observable getter/setter (state/props/context).\n    return (component[administrationSymbol] ??= {\n        reaction: null,\n        mounted: false,\n        reactionInvalidatedBeforeMount: false,\n        forceUpdate: null,\n        name: getDisplayName(component.constructor as ComponentClass),\n        state: undefined,\n        props: undefined,\n        context: undefined\n    })\n}\n\nexport function makeClassComponentObserver(\n    componentClass: ComponentClass<any, any>\n): ComponentClass<any, any> {\n    const { prototype } = componentClass\n\n    if (componentClass[isMobXReactObserverSymbol]) {\n        const displayName = getDisplayName(componentClass)\n        throw new Error(\n            `The provided component class (${displayName}) has already been declared as an observer component.`\n        )\n    } else {\n        componentClass[isMobXReactObserverSymbol] = true\n    }\n\n    if (prototype.componentWillReact) {\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    }\n    if (componentClass[\"__proto__\"] !== PureComponent) {\n        if (!prototype.shouldComponentUpdate) {\n            prototype.shouldComponentUpdate = observerSCU\n        } else if (prototype.shouldComponentUpdate !== observerSCU) {\n            // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n        }\n    }\n\n    if (__DEV__) {\n        Object.defineProperties(prototype, observablePropDescriptors)\n    }\n\n    const originalRender = prototype.render\n    if (typeof originalRender !== \"function\") {\n        const displayName = getDisplayName(componentClass)\n        throw new Error(\n            `[mobx-react] class component (${displayName}) is missing \\`render\\` method.` +\n                `\\n\\`observer\\` requires \\`render\\` being a function defined on prototype.` +\n                `\\n\\`render = () => {}\\` or \\`render = function() {}\\` is not supported.`\n        )\n    }\n\n    prototype.render = function () {\n        Object.defineProperty(this, \"render\", {\n            // There is no safe way to replace render, therefore it's forbidden.\n            configurable: false,\n            writable: false,\n            value: isUsingStaticRendering()\n                ? originalRender\n                : createReactiveRender.call(this, originalRender)\n        })\n        return this.render()\n    }\n\n    const originalComponentDidMount = prototype.componentDidMount\n    prototype.componentDidMount = function () {\n        if (__DEV__ && this.componentDidMount !== Object.getPrototypeOf(this).componentDidMount) {\n            const displayName = getDisplayName(componentClass)\n            throw new Error(\n                `[mobx-react] \\`observer(${displayName}).componentDidMount\\` must be defined on prototype.` +\n                    `\\n\\`componentDidMount = () => {}\\` or \\`componentDidMount = function() {}\\` is not supported.`\n            )\n        }\n\n        // `componentDidMount` may not be called at all. React can abandon the instance after `render`.\n        // That's why we use finalization registry to dispose reaction created during render.\n        // Happens with `<Suspend>` see #3492\n        //\n        // `componentDidMount` can be called immediately after `componentWillUnmount` without calling `render` in between.\n        // Happens with `<StrictMode>`see #3395.\n        //\n        // If `componentDidMount` is called, it's guaranteed to run synchronously with render (similary to `useLayoutEffect`).\n        // Therefore we don't have to worry about external (observable) state being updated before mount (no state version checking).\n        //\n        // Things may change: \"In the future, React will provide a feature that lets components preserve state between unmounts\"\n\n        const admin = getAdministration(this)\n\n        admin.mounted = true\n\n        // Component instance committed, prevent reaction disposal.\n        observerFinalizationRegistry.unregister(this)\n\n        // We don't set forceUpdate before mount because it requires a reference to `this`,\n        // therefore `this` could NOT be garbage collected before mount,\n        // preventing reaction disposal by FinalizationRegistry and leading to memory leak.\n        // As an alternative we could have `admin.instanceRef = new WeakRef(this)`, but lets avoid it if possible.\n        admin.forceUpdate = () => this.forceUpdate()\n\n        if (!admin.reaction || admin.reactionInvalidatedBeforeMount) {\n            // Missing reaction:\n            // 1. Instance was unmounted (reaction disposed) and immediately remounted without running render #3395.\n            // 2. Reaction was disposed by finalization registry before mount. Shouldn't ever happen for class components:\n            // `componentDidMount` runs synchronously after render, but our registry are deferred (can't run in between).\n            // In any case we lost subscriptions to observables, so we have to create new reaction and re-render to resubscribe.\n            // The reaction will be created lazily by following render.\n\n            // Reaction invalidated before mount:\n            // 1. A descendant's `componenDidMount` invalidated it's parent #3730\n\n            admin.forceUpdate()\n        }\n        return originalComponentDidMount?.apply(this, arguments)\n    }\n\n    // TODO@major Overly complicated \"patch\" is only needed to support the deprecated @disposeOnUnmount\n    patch(prototype, \"componentWillUnmount\", function () {\n        if (isUsingStaticRendering()) {\n            return\n        }\n        const admin = getAdministration(this)\n        admin.reaction?.dispose()\n        admin.reaction = null\n        admin.forceUpdate = null\n        admin.mounted = false\n        admin.reactionInvalidatedBeforeMount = false\n    })\n\n    return componentClass\n}\n\n// Generates a friendly name for debugging\nfunction getDisplayName(componentClass: ComponentClass) {\n    return componentClass.displayName || componentClass.name || \"<component>\"\n}\n\nfunction createReactiveRender(originalRender: any) {\n    const boundOriginalRender = originalRender.bind(this)\n\n    const admin = getAdministration(this)\n\n    function reactiveRender() {\n        if (!admin.reaction) {\n            // Create reaction lazily to support re-mounting #3395\n            admin.reaction = createReaction(admin)\n            if (!admin.mounted) {\n                // React can abandon this instance and never call `componentDidMount`/`componentWillUnmount`,\n                // we have to make sure reaction will be disposed.\n                observerFinalizationRegistry.register(this, admin, this)\n            }\n        }\n\n        let error: unknown = undefined\n        let renderResult = undefined\n        admin.reaction.track(() => {\n            try {\n                // TODO@major\n                // Optimization: replace with _allowStateChangesStart/End (not available in mobx@6.0.0)\n                renderResult = _allowStateChanges(false, boundOriginalRender)\n            } catch (e) {\n                error = e\n            }\n        })\n        if (error) {\n            throw error\n        }\n        return renderResult\n    }\n\n    return reactiveRender\n}\n\nfunction createReaction(admin: ObserverAdministration) {\n    return new Reaction(`${admin.name}.render()`, () => {\n        if (!admin.mounted) {\n            // This is neccessary to avoid react warning about calling forceUpdate on component that isn't mounted yet.\n            // This happens when component is abandoned after render - our reaction is already created and reacts to changes.\n            // `componenDidMount` runs synchronously after `render`, so unlike functional component, there is no delay during which the reaction could be invalidated.\n            // However `componentDidMount` runs AFTER it's descendants' `componentDidMount`, which CAN invalidate the reaction, see #3730. Therefore remember and forceUpdate on mount.\n            admin.reactionInvalidatedBeforeMount = true\n            return\n        }\n\n        try {\n            admin.forceUpdate?.()\n        } catch (error) {\n            admin.reaction?.dispose()\n            admin.reaction = null\n        }\n    })\n}\n\nfunction observerSCU(nextProps: ClassAttributes<any>, nextState: any): boolean {\n    if (isUsingStaticRendering()) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction createObservablePropDescriptor(key: \"props\" | \"state\" | \"context\") {\n    return {\n        configurable: true,\n        enumerable: true,\n        get() {\n            const admin = getAdministration(this)\n            const derivation = _getGlobalState().trackingDerivation\n            if (derivation && derivation !== admin.reaction) {\n                throw new Error(\n                    `[mobx-react] Cannot read \"${admin.name}.${key}\" in a reactive context, as it isn't observable.\n                    Please use component lifecycle method to copy the value into a local observable first.\n                    See https://github.com/mobxjs/mobx/blob/main/packages/mobx-react/README.md#note-on-using-props-and-state-in-derivations`\n                )\n            }\n            return admin[key]\n        },\n        set(value) {\n            getAdministration(this)[key] = value\n        }\n    }\n}\n","import * as React from \"react\"\nimport { observer as observerLite } from \"mobx-react-lite\"\n\nimport { makeClassComponentObserver } from \"./observerClass\"\nimport { IReactComponent } from \"./types/IReactComponent\"\n\n/**\n * Observer function / decorator\n */\nexport function observer<T extends IReactComponent>(component: T, context: ClassDecoratorContext): void\nexport function observer<T extends IReactComponent>(component: T): T\nexport function observer<T extends IReactComponent>(component: T, context?: ClassDecoratorContext): T {\n    if (context && context.kind !== \"class\") {\n        throw new Error(\"The @observer decorator can be used on classes only\")\n    }\n    if (component[\"isMobxInjector\"] === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use `observer` on a component that already has `inject`. Please apply `observer` before applying `inject`\"\n        )\n    }\n\n    if (\n        Object.prototype.isPrototypeOf.call(React.Component, component) ||\n        Object.prototype.isPrototypeOf.call(React.PureComponent, component)\n    ) {\n        // Class component\n        return makeClassComponentObserver(component as React.ComponentClass<any, any>) as T\n    } else {\n        // Function component\n        return observerLite(component as React.FunctionComponent<any>) as T\n    }\n}\n","import React from \"react\"\nimport { patch } from \"./utils/utils\"\n\nconst reactMajorVersion = Number.parseInt(React.version.split(\".\")[0])\nlet warnedAboutDisposeOnUnmountDeprecated = false\n\ntype Disposer = () => void\n\nconst protoStoreKey = Symbol(\"disposeOnUnmountProto\")\nconst instStoreKey = Symbol(\"disposeOnUnmountInst\")\n\nfunction runDisposersOnWillUnmount() {\n    ;[...(this[protoStoreKey] || []), ...(this[instStoreKey] || [])].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n}\n\n/**\n * @deprecated `disposeOnUnmount` is not compatible with React 18 and higher.\n */\nexport function disposeOnUnmount(target: React.Component<any, any>, propertyKey: PropertyKey): void\n\n/**\n * @deprecated `disposeOnUnmount` is not compatible with React 18 and higher.\n */\nexport function disposeOnUnmount<TF extends Disposer | Array<Disposer>>(\n    target: React.Component<any, any>,\n    fn: TF\n): TF\n\n/**\n * @deprecated `disposeOnUnmount` is not compatible with React 18 and higher.\n */\nexport function disposeOnUnmount(\n    target: React.Component<any, any>,\n    propertyKeyOrFunction: PropertyKey | Disposer | Array<Disposer>\n): PropertyKey | Disposer | Array<Disposer> | void {\n    if (Array.isArray(propertyKeyOrFunction)) {\n        return propertyKeyOrFunction.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    if (!warnedAboutDisposeOnUnmountDeprecated) {\n        if (reactMajorVersion >= 18) {\n            console.error(\n                \"[mobx-react] disposeOnUnmount is not compatible with React 18 and higher. Don't use it.\"\n            )\n        } else {\n            console.warn(\n                \"[mobx-react] disposeOnUnmount is deprecated. It won't work correctly with React 18 and higher.\"\n            )\n        }\n        warnedAboutDisposeOnUnmountDeprecated = true\n    }\n\n    const c = Object.getPrototypeOf(target).constructor\n    const c2 = Object.getPrototypeOf(target.constructor)\n    // Special case for react-hot-loader\n    const c3 = Object.getPrototypeOf(Object.getPrototypeOf(target))\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent ||\n            c3 === React.Component ||\n            c3 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (\n        typeof propertyKeyOrFunction !== \"string\" &&\n        typeof propertyKeyOrFunction !== \"function\" &&\n        !Array.isArray(propertyKeyOrFunction)\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\"\n        )\n    }\n\n    // decorator's target is the prototype, so it doesn't have any instance properties like props\n    const isDecorator = typeof propertyKeyOrFunction === \"string\"\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey]\n    const store = isDecorator\n        ? // decorators are added to the prototype store\n          target[protoStoreKey] || (target[protoStoreKey] = [])\n        : // functions are added to the instance store\n          target[instStoreKey] || (target[instStoreKey] = [])\n\n    store.push(propertyKeyOrFunction)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount)\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunction !== \"string\") {\n        return propertyKeyOrFunction\n    }\n}\n","import { observable } from \"mobx\"\nimport { Component } from \"react\"\n\nif (!Component) {\n    throw new Error(\"mobx-react requires React to be available\")\n}\n\nif (!observable) {\n    throw new Error(\"mobx-react requires mobx to be available\")\n}\n\nexport {\n    Observer,\n    useObserver,\n    useAsObservableSource,\n    useLocalStore,\n    isUsingStaticRendering,\n    useStaticRendering,\n    enableStaticRendering,\n    observerBatching,\n    useLocalObservable\n} from \"mobx-react-lite\"\n\nexport { observer } from \"./observer\"\n\nexport { MobXProviderContext, Provider, ProviderProps } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\nexport { IWrappedComponent } from \"./types/IWrappedComponent\"\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["useState","Error","makeObservable","defaultNoopBatch","callback","printDebugValue","v","getDependencyTree","globalIsUsingStaticRendering","isUsingStaticRendering","finalize","Object","Map","maxAge","clearTimeout","_this","sweepTimeout","undefined","now","Date","registrations","forEach","registration","token","registeredAt","value","delete","size","scheduleSweep","sweep","target","this","set","setTimeout","observerFinalizationRegistry","FinalizationRegistry","TimerBasedFinalizationRegistry","adm","reaction","dispose","getServerSnapshot","createReaction","Reaction","name","stateVersion","Symbol","onStoreChange","useObserver","render","baseComponentName","admRef","React","current","adm_1","subscribe","unregister","getSnapshot","renderResult","exception","register","useSyncExternalStore","track","e","hasSymbol","for","ReactForwardRefSymbol","forwardRef","props","ReactMemoSymbol","memo","observer","baseComponent","options","useForwardRef","displayName","base","observerComponent","ref","defineProperty","writable","configurable","contextTypes","keys","key","hoistBlackList","getOwnPropertyDescriptor","$$typeof","compare","type","reactionScheduler","batch","configure","is","x","y","mobxMixins","mobxPatchedDefinition","wrapper","realMethod","mixins","args","locks","retVal","apply","methods","mx","wrapFunction","call","patch","methodName","mixinMethod","methodMixins","getMixins","indexOf","push","oldDefinition","originalMethod","newDefinition","createDefinition","enumerable","wrappedFunc","get","administrationSymbol","isMobXReactObserverSymbol","getAdministration","component","mounted","reactionInvalidatedBeforeMount","forceUpdate","getDisplayName","constructor","state","context","componentClass","createReactiveRender","originalRender","boundOriginalRender","bind","admin","error","_admin$reaction2","_allowStateChanges","observerSCU","nextProps","nextState","console","warn","objA","objB","keysA","keysB","length","i","hasOwnProperty","shallowEqual","kind","prototype","isPrototypeOf","componentWillReact","PureComponent","shouldComponentUpdate","originalComponentDidMount","componentDidMount","arguments","_admin$reaction","makeClassComponentObserver","observerLite","split","Component","observable","require","k","a","b","l","m","useEffect","n","useLayoutEffect","p","useDebugValue","r","d","f","u","window","document","createElement","inst","c","g","exports","module","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","isVariantLabel","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","_target","has","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","z","transformPerspective","numTransforms","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","order","scheduled","add","process","remove","index","splice","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}